(* Created with the Wolfram Language for Students - Personal Use Only : www.wolfram.com *)
{(b1^2*(k3^2*(14*Sqrt[2]*(c2 - c4)*k1^2*k2^2 - 7*b1*(k1^2 + k2^2)*
       (k1^2 + k2^2 - k3^2) + Sqrt[2]*(c2 + c4)*(k1^4 + (k2^2 - k3^2)^2 + 
        2*k1^2*(6*k2^2 - k3^2)))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)] + 
    k2^2*(14*Sqrt[2]*(c2 - c4)*k1^2*k3^2 - 7*b1*(k1^2 + k3^2)*
       (k1^2 - k2^2 + k3^2) + Sqrt[2]*(c2 + c4)*
       (k1^4 - 2*k1^2*(k2^2 - 6*k3^2) + (k2^2 - k3^2)^2))*
     Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)] + 
    k1^2*(Sqrt[2]*(c2 + c4)*(k1^4 + k2^4 + 12*k2^2*k3^2 + k3^4 - 
        2*k1^2*(k2^2 + k3^2)) + 7*(2*Sqrt[2]*(c2 - c4)*k2^2*k3^2 + 
        b1*(k1^2 - k2^2 - k3^2)*(k2^2 + k3^2)))*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)]))/(14*k1^2*k2^2*k3^2), 
 (b1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (7*b1^2*k1^2*k3^2*((-1 + F^2)*k1^2 + (-1 + F^2 - 2*f1)*k2^2 - 
       (-1 + F^2)*k3^2) - 2*f1*k3^2*(7*Sqrt[2]*(c2 - c4)*k1^2*k2^2 + 
       ((c2 + c4)*(k1^4 + (k2^2 - k3^2)^2 + 2*k1^2*(6*k2^2 - k3^2)))/
        Sqrt[2]) + b1*(-(Sqrt[2]*(c2 + c4)*(-1 + F^2)*k3^2*
         (k1^2 + k2^2 - k3^2)^2) + f1*(3*k2^6 + 8*k2^4*k3^2 - 11*k2^2*k3^4 + 
         k1^4*(3*k2^2 + 7*k3^2) + k1^2*(-6*k2^4 + 15*k2^2*k3^2 - 7*k3^4))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(56*F^2*k1^4*k2^4*k3^2) + 
  (b1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (7*b1^2*k1^2*k2^2*((-1 + F^2)*k1^2 - (-1 + F^2)*k2^2 + 
       (-1 + F^2 - 2*f1)*k3^2) - 2*f1*k2^2*(7*Sqrt[2]*(c2 - c4)*k1^2*k3^2 + 
       ((c2 + c4)*(k1^4 - 2*k1^2*(k2^2 - 6*k3^2) + (k2^2 - k3^2)^2))/
        Sqrt[2]) + b1*(-(Sqrt[2]*(c2 + c4)*(-1 + F^2)*k2^2*
         (k1^2 - k2^2 + k3^2)^2) + f1*(-11*k2^4*k3^2 + 8*k2^2*k3^4 + 3*k3^6 + 
         k1^4*(7*k2^2 + 3*k3^2) + k1^2*(-7*k2^4 + 15*k2^2*k3^2 - 6*k3^4))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(56*F^2*k1^4*k2^2*k3^4) - 
  (b1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (7*b1^2*(-1 + F^2)*(-((k2^2 - k3^2)^2*(k2^2 + k3^2)) + 
       k1^2*(k2^4 + k3^4)) + 2*f1*(k2^2 + k3^2)*
      (7*Sqrt[2]*(c2 - c4)*k2^2*k3^2 + 
       ((c2 + c4)*(k1^4 + k2^4 + 12*k2^2*k3^2 + k3^4 - 2*k1^2*(k2^2 + k3^2)))/
        Sqrt[2]) + b1*(k1^2 - k2^2 - k3^2)*(7*f1*(k2^2 + k3^2)^2 + 
       Sqrt[2]*(c2 + c4)*(-1 + F^2)*(-(k2^2 - k3^2)^2 + k1^2*(k2^2 + k3^2))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(56*F^2*k1^2*k2^4*k3^4), 
 -1/224*(b1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
     (7*b1^2*(-1 + F^2)*(-1 + F^2 - 2*f1)*k1^2*k2^2*k3^4 + 
      b1*(-14*f1^2*k1^2*k2^2*k3^4 + 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*
         k3^4*(-k1^2 + k3^2) + (-1 + F^2)*f1*(3*k2^8 - 3*k2^6*k3^2 + 
          11*k2^4*k3^4 - 11*k2^2*k3^6 + k1^4*(3*k2^4 + 3*k2^2*k3^2 + 
            14*k3^4) - 2*k1^2*(3*k2^6 - 11*k2^2*k3^4 + 7*k3^6))) + 
      f1*k3^2*(f1*k2^2*(3*k1^4 + 3*k2^4 + k2^2*k3^2 - 4*k3^4 + 
          k1^2*(-6*k2^2 + k3^2)) - 4*(-1 + F^2)*k3^2*
         ((7*(c2 - c4)*k1^2*k2^2)/Sqrt[2] + 
          ((c2 + c4)*(k1^4 + k1^2*(7*k2^2 - 2*k3^2) + (k2^2 - k3^2)^2))/
           Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^4*k1^6*k2^6*k3^4) - 
  (b1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (7*b1^2*(-1 + F^2)*(-1 + F^2 - 2*f1)*k1^2*k2^4*k3^2 - 
     14*b1*f1^2*k1^2*k2^4*k3^2 + 2*Sqrt[2]*b1*(c2 + c4)*(-1 + F^2)^2*k2^4*
      (-k1^2 + k2^2)*k3^2 - 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*f1*k2^4*
      (k1^4 + (k2^2 - k3^2)^2 + k1^2*(-2*k2^2 + 7*k3^2)) + 
     b1*(-1 + F^2)*f1*(-11*k2^6*k3^2 + 11*k2^4*k3^4 - 3*k2^2*k3^6 + 3*k3^8 + 
       k1^4*(14*k2^4 + 3*k2^2*k3^2 + 3*k3^4) - 
       2*k1^2*(7*k2^6 - 11*k2^4*k3^2 + 3*k3^6)) + 
     f1*k2^2*k3^2*(-14*Sqrt[2]*(c2 - c4)*(-1 + F^2)*k1^2*k2^2 + 
       f1*(3*k1^4 - 4*k2^4 + k2^2*k3^2 + 3*k3^4 + k1^2*(k2^2 - 6*k3^2))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(224*F^4*k1^6*k2^4*k3^6) + 
  ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (7*b1^3*(-1 + F^2)^2*k2^2*k3^2*(k2^4 + k3^4) + 
     2*f1^2*k2^2*k3^2*(7*Sqrt[2]*(c2 - c4)*k2^2*k3^2 + 
       ((c2 + c4)*(k1^4 + k2^4 + 12*k2^2*k3^2 + k3^4 - 2*k1^2*(k2^2 + k3^2)))/
        Sqrt[2]) + 2*b1^2*(-1 + F^2)*
      (-(((c2 + c4)*(-1 + F^2)*k2^2*k3^2*(-k1^4 + k2^4 + k3^4))/Sqrt[2]) - 
       7*f1*(k2^2 + k3^2)*(k2^6 + k3^6 - k1^2*(k2^4 + k3^4))) + 
     b1*f1*(-7*k2^2*k3^2*(-(f1*(k1^2 - k2^2 - k3^2)*(k2^2 + k3^2)) - 
         2*Sqrt[2]*(c2 - c4)*(-1 + F^2)*(k2^4 + k3^4)) + 
       2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*(k2^8 + 6*k2^6*k3^2 + 6*k2^2*k3^6 + 
         k3^8 + k1^4*(k2^4 + k2^2*k3^2 + k3^4) - 
         2*k1^2*(k2^6 + k2^4*k3^2 + k2^2*k3^4 + k3^6))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(224*F^4*k1^4*k2^6*k3^6), 
 (b1*(-1 + F^2)*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (-(Sqrt[2]*(c2 + c4)*(-1 + F^2)*k3^4*(k1^4 + k2^4 - 4*k2^2*k3^2 + k3^4 + 
        k1^2*(4*k2^2 - 2*k3^2))) + f1*k2^2*(3*k2^6 + 5*k2^2*k3^4 - 8*k3^6 + 
       3*k1^4*(k2^2 + 2*k3^2) + k1^2*(-6*k2^4 - 6*k2^2*k3^2 + 2*k3^4)) + 
     b1*(-3*(-1 + F^2)*k2^4*(k2^4 + 2*k2^2*k3^2 - k3^4) + 
       (-1 + F^2)*k1^4*(3*k2^4 + 7*k3^4) + k1^2*k3^2*(6*(-1 + F^2)*k2^4 + 
         14*(-1 + F^2 - 2*f1)*k2^2*k3^2 - 7*(-1 + F^2)*k3^4)))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(896*F^6*k1^8*k2^8*k3^4) + 
  (b1*(-1 + F^2)*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (f1*(-8*k2^6 + 5*k2^4*k3^2 + 3*k3^6 + 3*k1^4*(2*k2^2 + k3^2) - 
       2*k1^2*((-1 + 14*b1)*k2^4 + 3*k2^2*k3^2 + 3*k3^4)) + 
     (-1 + F^2)*(14*b1^2*k1^2*k3^4 + 14*Sqrt[2]*(c2 - c4)*k1^2*k3^4 + 
       Sqrt[2]*(c2 + c4)*(4*k2^6 + k1^4*k3^2 + k2^4*k3^2 - 4*k2^2*k3^4 + 
         k3^6 - 4*k1^2*(k2^4 + k2^2*k3^2 - 3*k3^4)) + 
       b1*(-4*k1^4*k3^2 + k1^2*(14*k2^4 + 14*k2^2*k3^2 - 15*k3^4) + 
         11*k3^2*(k2^4 + 2*k2^2*k3^2 - k3^4))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(896*F^6*k1^8*k2^4*k3^6) - 
  ((-1 + F^2)*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (7*b1^2*(-1 + F^2)*(2*k2^8 + 2*k2^6*k3^2 + 2*k2^2*k3^6 + 
       k3^6*(k1^2 - k3^2) + k2^4*k3^2*(k1^2 + 3*k3^2)) + 
     4*f1*k2^2*((7*(c2 - c4)*k2^2*k3^2*(k2^2 + k3^2))/Sqrt[2] + 
       ((c2 + c4)*(k2^6 + 6*k2^4*k3^2 + 6*k2^2*k3^4 + k3^6 + 
          k1^4*(k2^2 + k3^2) - 2*k1^2*(k2^4 + k2^2*k3^2 + k3^4)))/Sqrt[2]) + 
     2*b1*(((c2 + c4)*(-1 + F^2)*(-2*k2^8 - 2*k2^6*k3^2 - 13*k2^4*k3^4 - 
          2*k2^2*k3^6 + k3^8 - 2*k1^2*k3^2*(k2^4 + k3^4) + 
          k1^4*(2*k2^4 + 2*k2^2*k3^2 + k3^4)))/Sqrt[2] - 
       7*k2^2*(Sqrt[2]*(c2 - c4)*(-1 + F^2)*k2^2*k3^4 + 
         f1*(k2^6 + k2^4*k3^2 + k2^2*k3^4 + k3^6 - 
           k1^2*(k2^4 + k2^2*k3^2 + k3^4)))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(896*F^6*k1^6*k2^8*k3^6), 
 -1/3584*(b1*(-1 + F^2)^2*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^
      4*(6*f1*k2^2*(k1^4 - 2*k2^2*k3^2 + k3^4 - k1^2*(k2^2 - 2*k3^2)) + 
      (-1 + F^2)*(-6*b1*k2^6 + 2*Sqrt[2]*(c2 + c4)*k3^4*(-k1^2 + k3^2) + 
        b1*k1^2*(6*k2^4 + 7*k3^4)))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^8*k1^10*k2^8*k3^4) - 
  (b1*(-1 + F^2)^2*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^4*
    (14*b1^2*(-1 + F^2)*k1^2*k2^2*k3^2 + 14*Sqrt[2]*(c2 - c4)*(-1 + F^2)*k1^2*
      k2^2*k3^2 + 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*k2^2*
      (k1^4 + 3*k2^4 - 2*k2^2*k3^2 + k1^2*(-4*k2^2 + 6*k3^2)) + 
     b1*k2^2*(-14*(-1 + F^2)*k1^4 + 22*(-1 + F^2)*k2^2*k3^2 + 
       k1^2*(28*(-1 + F^2)*k2^2 + (15 - 15*F^2 + 56*f1)*k3^2)) + 
     2*f1*(4*k2^6 + 12*k2^4*k3^2 - 2*k2^2*k3^4 - 3*k3^6 + 
       3*k1^4*(k2^2 - k3^2) + k1^2*(-5*k2^2*k3^2 + 6*k3^4)))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^8*k1^10*k2^6*k3^6) + 
  ((-1 + F^2)^2*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^4*
    (-14*Sqrt[2]*b1*(c2 - c4)*(-1 + F^2)*k2^4*k3^2 + 
     14*Sqrt[2]*(c2 - c4)*f1*k2^2*k3^2*(k2^2 - 2*k3^2) + 
     4*Sqrt[2]*(c2 + c4)*f1*k2^2*(k1^4 - k1^2*k2^2 + 2*k2^2*k3^2 - 6*k3^4) + 
     14*b1*f1*(k1^2*k2^4 + k2^4*k3^2 + 2*k2^2*k3^4) + 
     Sqrt[2]*b1*(c2 + c4)*(-1 + F^2)*(4*k1^2*k2^4 - 4*k2^6 + k1^4*k3^2 - 
       13*k2^4*k3^2 - k3^6) - 7*b1^2*(-1 + F^2)*(2*k1^2*k2^4 - 4*k2^6 - 
       3*k2^4*k3^2 - k3^6))*Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^8*k1^8*k2^8*k3^6), 
 (3*b1*(-1 + F^2)^3*f1^2*(k1^2 - k2^2)*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^5*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(3584*F^10*k1^12*k2^6*k3^4) - 
  (b1*(-1 + F^2)^3*f1^2*(3*k1^4 - 12*k2^4 + k2^2*k3^2 + 
     k1^2*((2 - 28*b1)*k2^2 - 3*k3^2))*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^5*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^10*k1^12*k2^6*k3^6) + 
  ((-1 + F^2)^3*f1^2*(7*Sqrt[2]*(c2 - c4)*k3^2 - 2*Sqrt[2]*(c2 + c4)*
      (k1^2 - k2^2 - 3*k3^2) + 7*b1*(k1^2 - 2*k2^2 - k3^2))*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^5*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^10*k1^10*k2^6*k3^6), 0, 
 (b1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (7*b1^2*k1^2*k3^2*((-1 + F^2)*k1^4 - (-1 + F^2)*k2^4 - 
       2*(-1 + F^2)*k1^2*k3^2 + 2*(1 - F^2 + f1)*k2^2*k3^2 + 
       (-1 + F^2)*k3^4) - 2*f1*k3^2*(k1^2 + k2^2 - k3^2)*
      (7*Sqrt[2]*(c2 - c4)*k1^2*k2^2 + 
       ((c2 + c4)*(k1^4 + (k2^2 - k3^2)^2 + 2*k1^2*(6*k2^2 - k3^2)))/
        Sqrt[2]) + b1*(Sqrt[2]*(c2 + c4)*(-1 + F^2)*k3^2*
        (-k1^6 - (k2^2 - k3^2)^3 + k1^4*(k2^2 + 3*k3^2) + 
         k1^2*(k2^4 + 2*k2^2*k3^2 - 3*k3^4)) + 
       f1*(k1^6*(-3*k2^2 + 7*k3^2) + (3*k2^2 + 11*k3^2)*(k2^3 - k2*k3^2)^2 + 
         k1^4*(9*k2^4 + 17*k2^2*k3^2 - 14*k3^4) + 
         k1^2*(-9*k2^6 + 27*k2^4*k3^2 - 25*k2^2*k3^4 + 7*k3^6))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(14*F^2*k1^3*k2^3*k3^2) - 
  (b1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (7*b1^2*k1^2*k2^2*((-1 + F^2)*k1^4 - 2*(-1 + F^2)*k1^2*k2^2 + 
       (-1 + F^2)*k2^4 + 2*(1 - F^2 + f1)*k2^2*k3^2 - (-1 + F^2)*k3^4) - 
     2*f1*k2^2*(k1^2 - k2^2 + k3^2)*(7*Sqrt[2]*(c2 - c4)*k1^2*k3^2 + 
       ((c2 + c4)*(k1^4 - 2*k1^2*(k2^2 - 6*k3^2) + (k2^2 - k3^2)^2))/
        Sqrt[2]) + b1*(Sqrt[2]*(c2 + c4)*(-1 + F^2)*k2^2*
        (-k1^6 + (k2^2 - k3^2)^3 + k1^4*(3*k2^2 + k3^2) + 
         k1^2*(-3*k2^4 + 2*k2^2*k3^2 + k3^4)) + 
       f1*(k1^6*(7*k2^2 - 3*k3^2) + (11*k2^2 + 3*k3^2)*(-(k2^2*k3) + k3^3)^
           2 + k1^4*(-14*k2^4 + 17*k2^2*k3^2 + 9*k3^4) + 
         k1^2*(7*k2^6 - 25*k2^4*k3^2 + 27*k2^2*k3^4 - 9*k3^6))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(14*F^2*k1^3*k2*k3^4) + 
  (b1*(k2^2 - k3^2)*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (7*b1^2*((-1 + F^2)*k1^4*(k2^2 + k3^2) + (-1 + F^2)*(k2^2 - k3^2)^2*
        (k2^2 + k3^2) - 2*k1^2*((-1 + F^2)*k2^4 + (-1 + F^2 - f1)*k2^2*k3^2 + 
         (-1 + F^2)*k3^4)) + 2*f1*(k1^2 - k2^2 - k3^2)*
      (7*Sqrt[2]*(c2 - c4)*k2^2*k3^2 + 
       ((c2 + c4)*(k1^4 + k2^4 + 12*k2^2*k3^2 + k3^4 - 2*k1^2*(k2^2 + k3^2)))/
        Sqrt[2]) + b1*(k1^2 - k2^2 - k3^2)*
      (7*f1*(k1^2 - k2^2 - k3^2)*(k2^2 + k3^2) + Sqrt[2]*(c2 + c4)*(-1 + F^2)*
        (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(14*F^2*k1*k2^3*k3^4), 
 (b1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (7*b1^2*(-1 + F^2)*k1^2*k2^2*k3^4*(f1*(k1^2 + 2*k2^2 - 2*k3^2) - 
       (-1 + F^2)*(k2^2 - k3^2)) + 
     b1*(7*f1^2*k1^2*k2^2*k3^4*(k1^2 - 2*k3^2) + 2*Sqrt[2]*(c2 + c4)*
        (-1 + F^2)^2*k2^2*k3^4*(k1^2 - k3^2)*(k2^2 - k3^2) + 
       (-1 + F^2)*f1*(k1^6*(3*k2^4 - 14*k3^4) - (k2^3 - k2*k3^2)^2*
          (3*k2^4 + 11*k3^4) + k1^4*(-9*k2^6 - 25*k2^2*k3^4 + 28*k3^6) + 
         k1^2*(9*k2^8 - 6*k2^6*k3^2 - 18*k2^4*k3^4 + 43*k2^2*k3^6 - 
           14*k3^8))) + f1*k3^2*
      (-(f1*k2^2*(k2^2 - k3^2)*(3*k1^4 + 3*k2^4 + k2^2*k3^2 - 4*k3^4 + 
          k1^2*(-6*k2^2 + k3^2))) + 4*(-1 + F^2)*k3^2*(k1^2 + k2^2 - k3^2)*
        ((7*(c2 - c4)*k1^2*k2^2)/Sqrt[2] + 
         ((c2 + c4)*(k1^4 + k1^2*(6*k2^2 - 2*k3^2) + (k2^2 - k3^2)^2))/
          Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(28*F^4*k1^5*k2^5*k3^4) + 
  (b1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (-7*b1^2*(-1 + F^2)*k1^2*k2^4*k3^2*((-1 + F^2)*(k2^2 - k3^2) + 
       f1*(k1^2 - 2*k2^2 + 2*k3^2)) + 
     b1*(-7*f1^2*k1^2*k2^4*(k1^2 - 2*k2^2)*k3^2 + 2*Sqrt[2]*(c2 + c4)*
        (-1 + F^2)^2*k2^4*(k1^2 - k2^2)*k3^2*(k2^2 - k3^2) + 
       (-1 + F^2)*f1*(k1^6*(14*k2^4 - 3*k3^4) + (-(k2^2*k3) + k3^3)^2*
          (11*k2^4 + 3*k3^4) + k1^4*(-28*k2^6 + 25*k2^4*k3^2 + 9*k3^6) + 
         k1^2*(14*k2^8 - 43*k2^6*k3^2 + 18*k2^4*k3^4 + 6*k2^2*k3^6 - 
           9*k3^8))) + f1*k2^2*(-2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*k2^2*
        (k1^6 - (k2^2 - k3^2)^3 + k1^4*(-3*k2^2 + 7*k3^2) + 
         k1^2*(3*k2^4 - 10*k2^2*k3^2 + 7*k3^4)) + 
       k3^2*(-14*Sqrt[2]*(c2 - c4)*(-1 + F^2)*k1^2*k2^2*(k1^2 - k2^2 + 
           k3^2) - f1*(k2^2 - k3^2)*(3*k1^4 - 4*k2^4 + k2^2*k3^2 + 3*k3^4 + 
           k1^2*(k2^2 - 6*k3^2)))))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(28*F^4*k1^5*k2^3*k3^6) - 
  ((k2^2 - k3^2)*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (7*b1^3*(-1 + F^2)*k2^2*k3^2*(f1*k1^2*(k2^2 + k3^2) - 
       (-1 + F^2)*(k2^4 + k3^4)) - 2*f1^2*k2^2*k3^2*
      (7*Sqrt[2]*(c2 - c4)*k2^2*k3^2 + 
       ((c2 + c4)*(k1^4 + k2^4 + 12*k2^2*k3^2 + k3^4 - 2*k1^2*(k2^2 + k3^2)))/
        Sqrt[2]) + b1^2*(7*f1^2*k1^2*k2^2*k3^2*(k2^2 + k3^2) + 
       Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*k3^2*(-k1^4 + k2^4 + k3^4) + 
       7*(-1 + F^2)*f1*(k1^4*(2*k2^4 + 3*k2^2*k3^2 + 2*k3^4) - 
         2*k1^2*(2*k2^6 + 3*k2^4*k3^2 + 3*k2^2*k3^4 + 2*k3^6) + 
         2*(k2^8 + k2^6*k3^2 + k2^2*k3^6 + k3^8))) + 
     b1*f1*(2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*(-k2^8 - 6*k2^6*k3^2 - 
         6*k2^2*k3^6 - k3^8 + k1^6*(k2^2 + k3^2) + 3*k1^2*(k2^2 + k3^2)^3 - 
         k1^4*(3*k2^4 + 4*k2^2*k3^2 + 3*k3^4)) + 
       7*k2^2*k3^2*(-(f1*(k1^2 - k2^2 - k3^2)*(k2^2 + k3^2)) + 
         2*Sqrt[2]*(c2 - c4)*(-1 + F^2)*(-k2^4 - k3^4 + 
           k1^2*(k2^2 + k3^2)))))*Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(28*F^4*k1^3*k2^5*k3^6), 
 (b1*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (28*f1^2*k1^2*k2^4*k3^4 + 7*b1^2*(-1 + F^2)^2*k1^2*k2^2*(k1^2 - k2^2)*
      k3^4 - 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k3^4*
      (3*k1^6 + k1^4*(7*k2^2 - 9*k3^2) + k1^2*(11*k2^4 - 22*k2^2*k3^2 + 
         9*k3^4) + 3*(k2^6 - 5*k2^4*k3^2 + 5*k2^2*k3^4 - k3^6)) - 
     2*(-1 + F^2)*f1*k2^2*(3*k1^6*(k2^2 - 2*k3^2) - 3*(k2^2 - k3^2)^2*
        (3*k2^4 + 3*k2^2*k3^2 + 8*k3^4) + k1^4*(-15*k2^4 - 3*k2^2*k3^2 + 
         16*k3^4) + 7*k1^2*(3*k2^6 - 3*k2^2*k3^4 + 2*k3^6)) - 
     b1*(-1 + F^2)*(3*(-1 + F^2)*k1^6*(2*k2^4 + k2^2*k3^2 - 14*k3^4) + 
       18*(-1 + F^2)*k2^4*(k2^6 + k2^4*k3^2 - 3*k2^2*k3^4 + k3^6) + 
       k1^4*(-18*(-1 + F^2)*k2^6 - 12*(-1 + F^2)*k2^4*k3^2 + 
         (69 - 69*F^2 + 112*f1)*k2^2*k3^4 + 84*(-1 + F^2)*k3^6) + 
       k1^2*(-6*(-1 + F^2)*k2^8 - 9*(-1 + F^2)*k2^6*k3^2 - 
         7*(-1 + F^2 - 16*f1)*k2^4*k3^4 + 2*(-61 + 61*F^2 - 84*f1)*k2^2*
          k3^6 - 42*(-1 + F^2)*k3^8)))*Plin[((26 + F*(-17 + 6*F))*k1)/
      (15*qo)]*Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/
   (448*F^6*k1^7*k2^7*k3^4) - 
  (b1*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (28*f1^2*k1^2*k2^4*k3^2 + 2*(-1 + F^2)*f1*(k1^6*(6*k2^2 - 3*k3^2) + 
       3*(k2^2 - k3^2)^2*(8*k2^4 + 3*k2^2*k3^2 + 3*k3^4) + 
       k1^4*(-8*(2 + 7*b1)*k2^4 + 3*k2^2*k3^2 + 15*k3^4) + 
       7*k1^2*(2*(-1 + 6*b1)*k2^6 + (3 - 8*b1)*k2^4*k3^2 - 3*k3^6)) - 
     (-1 + F^2)^2*(7*b1^2*k1^2*k3^4*(11*k1^2 + 12*k2^2 - 11*k3^2) + 
       14*Sqrt[2]*(c2 - c4)*k1^2*k3^4*(5*k1^2 + 6*k2^2 - 6*k3^2) + 
       b1*(-29*k1^6*k3^2 + k1^4*(-28*k2^4 + 39*k2^2*k3^2 - 52*k3^4) + 
         66*k3^2*(k2^6 + k2^4*k3^2 - 3*k2^2*k3^4 + k3^6) + 
         k1^2*(84*k2^6 - 6*k2^4*k3^2 - 63*k2^2*k3^4 + 43*k3^6)) + 
       Sqrt[2]*(c2 + c4)*(5*k1^6*k3^2 + 2*k1^4*(4*k2^4 - 6*k2^2*k3^2 + 
           27*k3^4) + k1^2*(-32*k2^6 + 17*k2^4*k3^2 + 78*k2^2*k3^4 - 
           67*k3^6) + 6*(4*k2^8 - 3*k2^6*k3^2 - 5*k2^4*k3^4 + 5*k2^2*k3^6 - 
           k3^8))))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(448*F^6*k1^7*k2^3*k3^6) + 
  (f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (-7*b1^3*(-1 + F^2)^2*k1^2*k2^2*k3^4*(k2^2 + k3^2) + 
     7*b1^2*(-1 + F^2)*((-1 + F^2)*k1^4*k3^2*(5*k2^4 + k2^2*k3^2 - 6*k3^4) + 
       k1^2*(4*(-1 + F^2 + 2*f1)*k2^8 - 15*(-1 + F^2)*k2^6*k3^2 - 
         10*(-1 + F^2)*k2^4*k3^4 + (11 - 11*F^2 - 8*f1)*k2^2*k3^6 + 
         12*(-1 + F^2)*k3^8) - 6*(-1 + F^2)*(2*k2^10 + k2^6*k3^4 - 
         k2^4*k3^6 - 3*k2^2*k3^8 + k3^10)) - 8*(-1 + F^2)*f1*k2^2*
      (k2^2 - k3^2)*((7*(c2 - c4)*k2^2*k3^2*(-k1^2 + 3*(k2^2 + k3^2)))/
        Sqrt[2] + ((c2 + c4)*(-k1^6 + 5*k1^4*(k2^2 + k3^2) - 
          k1^2*(7*k2^4 + 13*k2^2*k3^2 + 7*k3^4) + 
          3*(k2^6 + 6*k2^4*k3^2 + 6*k2^2*k3^4 + k3^6)))/Sqrt[2]) + 
     2*b1*(((c2 + c4)*(-1 + F^2)^2*(k1^6*(4*k2^4 - 3*k2^2*k3^2 - 6*k3^4) - 
          2*k1^4*(6*k2^6 + 5*k2^4*k3^2 - 2*k2^2*k3^4 - 9*k3^6) + 
          k1^2*(-4*k2^8 + 21*k2^6*k3^2 + 54*k2^4*k3^4 + 17*k2^2*k3^6 - 
            18*k3^8) + 6*(2*k2^10 + 11*k2^6*k3^4 - 11*k2^4*k3^6 - 
            3*k2^2*k3^8 + k3^10)))/Sqrt[2] + 
       14*k2^2*(((c2 - c4)*(-1 + F^2)^2*k2^2*k3^4*(5*k1^2 + 6*k2^2 - 6*k3^2))/
          Sqrt[2] + f1^2*k1^2*k2^2*k3^2*(k2^2 - k3^2) + 
         (-1 + F^2)*f1*(k2^2 - k3^2)*(k1^4*(k2^2 + k3^2) - 
           k1^2*(4*k2^4 + 5*k2^2*k3^2 + 4*k3^4) + 3*(k2^6 + k2^4*k3^2 + 
             k2^2*k3^4 + k3^6)))))*Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(448*F^6*k1^5*k2^7*k3^6), 
 (b1*(-1 + F^2)*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (-56*f1^2*k1^2*k2^2*k3^4 + 8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k3^4*
      (k1^2 + 2*k2^2 - 2*k3^2)*(k1^2 - k3^2) + 
     (-1 + F^2)*f1*(9*k1^6*k3^2 + 48*k2^2*k3^2*(2*k2^4 - 3*k2^2*k3^2 + 
         k3^4) + k1^4*(-48*k2^4 - 30*k2^2*k3^2 + 3*k3^4) + 
       k1^2*(48*k2^6 - 75*k2^4*k3^2 + 109*k2^2*k3^4 - 12*k3^6)) + 
     b1*(-1 + F^2)*(3*(-1 + F^2)*k1^6*k2^2 + 48*(-1 + F^2)*k2^6*
        (k2^2 - k3^2) + k1^4*(-18*(-1 + F^2)*k2^4 - 7*(-4 + 4*F^2 + 3*f1)*
          k3^4) + k1^2*(-33*(-1 + F^2)*k2^6 + 48*(-1 + F^2)*k2^4*k3^2 + 
         2*(26 - 26*F^2 + 21*f1)*k2^2*k3^4 + 56*(-1 + F^2)*k3^6)))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(1792*F^8*k1^9*k2^7*k3^4) + 
  (b1*(-1 + F^2)*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (48*f1*k1^4*k2^4 - 48*F^2*f1*k1^4*k2^4 + 56*f1^2*k1^2*k2^6 + 64*f1*k2^8 - 
     64*F^2*f1*k2^8 - 39*f1*k1^6*k3^2 + 39*F^2*f1*k1^6*k3^2 - 
     42*Sqrt[2]*(c2 - c4)*k1^4*k2^2*k3^2 + 84*Sqrt[2]*(c2 - c4)*F^2*k1^4*k2^2*
      k3^2 - 42*Sqrt[2]*(c2 - c4)*F^4*k1^4*k2^2*k3^2 - 
     119*f1*k1^4*k2^2*k3^2 + 119*F^2*f1*k1^4*k2^2*k3^2 - 
     112*Sqrt[2]*(c2 - c4)*k1^2*k2^4*k3^2 + 224*Sqrt[2]*(c2 - c4)*F^2*k1^2*
      k2^4*k3^2 - 112*Sqrt[2]*(c2 - c4)*F^4*k1^2*k2^4*k3^2 + 
     52*f1*k1^2*k2^4*k3^2 - 52*F^2*f1*k1^2*k2^4*k3^2 + 128*f1*k2^6*k3^2 - 
     128*F^2*f1*k2^6*k3^2 + 126*f1*k1^4*k3^4 - 126*F^2*f1*k1^4*k3^4 + 
     112*Sqrt[2]*(c2 - c4)*k1^2*k2^2*k3^4 - 224*Sqrt[2]*(c2 - c4)*F^2*k1^2*
      k2^2*k3^4 + 112*Sqrt[2]*(c2 - c4)*F^4*k1^2*k2^2*k3^4 + 
     153*f1*k1^2*k2^2*k3^4 - 153*F^2*f1*k1^2*k2^2*k3^4 - 224*f1*k2^4*k3^4 + 
     224*F^2*f1*k2^4*k3^4 - 135*f1*k1^2*k3^6 + 135*F^2*f1*k1^2*k3^6 - 
     16*f1*k2^2*k3^6 + 16*F^2*f1*k2^2*k3^6 + 48*f1*k3^8 - 48*F^2*f1*k3^8 - 
     7*b1^2*(-1 + F^2)^2*k1^2*k2^2*k3^2*(7*k1^2 + 16*(k2^2 - k3^2)) + 
     b1*(-1 + F^2)*k2^2*(42*(-1 + F^2)*k1^6 - 176*(-1 + F^2)*k2^2*k3^2*
        (k2^2 - k3^2) + k1^4*(42*(-1 + F^2)*k2^2 + (66 - 66*F^2 - 259*f1)*
          k3^2) + k1^2*(-224*(-1 + F^2)*k2^4 + (-277 + 277*F^2 - 448*f1)*k2^2*
          k3^2 + 2*(60 - 60*F^2 + 161*f1)*k3^4)) - 
     2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*(3*k1^6 - 2*k1^4*(k2^2 - 5*k3^2) + 
       k1^2*(-25*k2^4 + 75*k2^2*k3^2 - 48*k3^4) + 
       8*(3*k2^6 - 5*k2^4*k3^2 + 2*k2^2*k3^4)))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(1792*F^8*k1^9*k2^5*k3^6) - 
  ((-1 + F^2)*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (-7*b1^3*(-1 + F^2)^2*k1^2*k2^4*k3^2 + 7*b1^2*(-1 + F^2)*
      ((-1 + F^2)*k1^4*k2^2*(6*k2^2 + k3^2) + 
       k1^2*(6*(-1 + F^2)*k2^6 + (26 - 26*F^2 - 9*f1)*k2^4*k3^2 + 
         (4 - 4*F^2 - 3*f1)*k3^6) - 8*(-1 + F^2)*(4*k2^8 - k2^6*k3^2 - 
         3*k2^4*k3^4 + k2^2*k3^6 - k3^8)) + 2*(-1 + F^2)*f1*
      (7*Sqrt[2]*(c2 - c4)*k2^2*k3^2*(-8*k2^4 + 13*k1^2*k3^2 + 24*k2^2*k3^2 - 
         16*k3^4) + ((c2 + c4)*(3*k1^6*k3^2 + k1^4*(-32*k2^4 + 6*k2^2*k3^2 - 
            6*k3^4) - 64*k2^2*k3^2*(k2^4 - 4*k2^2*k3^2 + 3*k3^4) + 
          k1^2*(32*k2^6 - 9*k2^4*k3^2 + 156*k2^2*k3^4 + 3*k3^6)))/Sqrt[2]) + 
     b1*(2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*(k1^6*(k2^2 - 2*k3^2) + 
         k1^4*(-6*k2^4 - 5*k2^2*k3^2 + 4*k3^4) + 
         k1^2*(-11*k2^6 + 36*k2^4*k3^2 + 2*k3^6) + 
         4*(4*k2^8 + 9*k2^6*k3^2 - 13*k2^4*k3^4 + k2^2*k3^6 - k3^8)) + 
       7*(2*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k2^4*k3^2*(3*k1^2 + 8*k2^2 - 
           8*k3^2) + 8*f1^2*k1^2*k2^2*(k2^4 - k3^4) + (-1 + F^2)*f1*
          (-16*k2^2*k3^2*(k2^4 + k2^2*k3^2 - 2*k3^4) + 
           k1^4*(13*k2^2*k3^2 + 3*k3^4) - k1^2*(16*k2^6 + 7*k2^4*k3^2 + 
             26*k2^2*k3^4 + 3*k3^6)))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(1792*F^8*k1^7*k2^7*k3^6), 
 -1/7168*(b1*(-1 + F^2)^2*f1^2*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^4*
     (9*(-1 + F^2)*k1^6 - 54*(-1 + F^2)*k1^4*k2^2 + 120*(-1 + F^2)*k2^4*
       (k2^2 - k3^2) + k1^2*(-75*(-1 + F^2)*k2^4 + 120*(-1 + F^2)*k2^2*k3^2 + 
        (-12 + 12*F^2 + 35*f1)*k3^4))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^10*k1^11*k2^7*k3^4) - 
  (b1*(-1 + F^2)^2*f1^2*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^4*
    (54*(-1 + F^2)*k1^6 - 6*(-1 + F^2)*k1^4*((-25 + 49*b1)*k2^2 + 29*k3^2) - 
     40*(-1 + F^2)*k2^2*(12*k2^4 - 13*k2^2*k3^2 + k3^4) + 
     k1^2*(-8*(11 + 140*b1)*(-1 + F^2)*k2^4 + 
       (994*b1*(-1 + F^2) - 5*(-37 + 37*F^2 + 35*f1))*k2^2*k3^2 + 
       120*(-1 + F^2)*k3^4))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(7168*F^10*k1^11*k2^5*k3^6) + 
  ((-1 + F^2)^2*f1^2*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^4*
    (2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*(3*k1^6 - 3*k1^4*(6*k2^2 + k3^2) + 
       k1^2*(-25*k2^4 + 94*k2^2*k3^2) + 40*(k2^6 + 2*k2^4*k3^2 - 
         3*k2^2*k3^4)) - 7*(18*b1^2*(-1 + F^2)*k1^2*k2^4 - 
       2*Sqrt[2]*(c2 - c4)*(-1 + F^2)*k2^2*k3^2*(9*k1^2 + 20*(k2^2 - k3^2)) + 
       b1*(-3*(-1 + F^2)*k1^4*(6*k2^2 + k3^2) + 40*(-1 + F^2)*k2^2*
          (2*k2^4 - k2^2*k3^2 - k3^4) + k1^2*(-2*(-5 + 5*F^2 + 4*f1)*k2^4 + 
           (-58 + 58*F^2 + 23*f1)*k2^2*k3^2 - 5*f1*k3^4))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(7168*F^10*k1^9*k2^7*k3^6), 
 (-25*b1*(-1 + F^2)^3*f1^3*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^5*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(2048*F^12*k1^11*k2^3*k3^6) + 
  (5*b1*(-1 + F^2)^3*f1^3*(6*k2^2 - k3^2)*
    Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^5*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(4096*F^12*k1^9*k2^7*k3^6), 
 (b1*(Sqrt[2]*b1*(c2 + c4)*(-1 + F^2)*k3^2*(k1^2 + k2^2 - k3^2)^2*
      (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2)) - 
     7*b1^2*k1^2*k3^2*((-1 + F^2)*k1^6 + k1^4*((1 - F^2 + 2*f1)*k2^2 - 
         3*(-1 + F^2)*k3^2) + (k2^2 - k3^2)*((-1 + F^2 + 2*f1)*k2^4 + 
         2*(1 - F^2 + f1)*k2^2*k3^2 + (-1 + F^2)*k3^4) + 
       k1^2*(-((-1 + F^2 + 4*f1)*k2^4) - 2*(-1 + F^2)*k2^2*k3^2 + 
         3*(-1 + F^2)*k3^4)) - b1*f1*(k1^8*(3*k2^2 + 7*k3^2) + 
       k2^2*(k2^2 - k3^2)^3*(3*k2^2 + 11*k3^2) - 
       3*k1^6*(4*k2^4 - 21*k2^2*k3^2 + 7*k3^4) + 
       k1^4*(18*k2^6 + 79*k2^4*k3^2 - 90*k2^2*k3^4 + 21*k3^6) + 
       k1^2*(-12*k2^8 + 73*k2^6*k3^2 - 89*k2^4*k3^4 + 35*k2^2*k3^6 - 
         7*k3^8)) + 2*f1*k3^2*(k1^4 + k1^2*(6*k2^2 - 2*k3^2) + 
       (k2^2 - k3^2)^2)*(7*Sqrt[2]*(c2 - c4)*k1^2*k2^2 + 
       ((c2 + c4)*(k1^4 + (k2^2 - k3^2)^2 + 2*k1^2*(6*k2^2 - k3^2)))/
        Sqrt[2]))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(56*F^2*k1^4*k2^4*k3^2) + 
  (b1*(-7*b1^2*k1^2*k2^2*((-1 + F^2)*k1^6 + k1^4*(-3*(-1 + F^2)*k2^2 + 
         (1 - F^2 + 2*f1)*k3^2) - (k2^2 - k3^2)*((-1 + F^2)*k2^4 + 
         2*(1 - F^2 + f1)*k2^2*k3^2 + (-1 + F^2 + 2*f1)*k3^4) + 
       k1^2*(3*(-1 + F^2)*k2^4 - 2*(-1 + F^2)*k2^2*k3^2 - 
         (-1 + F^2 + 4*f1)*k3^4)) + 2*f1*k2^2*
      (k1^4 - 2*k1^2*(k2^2 - 3*k3^2) + (k2^2 - k3^2)^2)*
      (7*Sqrt[2]*(c2 - c4)*k1^2*k3^2 + 
       ((c2 + c4)*(k1^4 - 2*k1^2*(k2^2 - 6*k3^2) + (k2^2 - k3^2)^2))/
        Sqrt[2]) + b1*(Sqrt[2]*(c2 + c4)*(-1 + F^2)*k2^2*
        (k1^2 - k2^2 + k3^2)^2*(k1^4 + (k2^2 - k3^2)^2 - 
         2*k1^2*(k2^2 + k3^2)) - f1*(k1^8*(7*k2^2 + 3*k3^2) + 
         k3^2*(-k2^2 + k3^2)^3*(11*k2^2 + 3*k3^2) - 
         3*k1^6*(7*k2^4 - 21*k2^2*k3^2 + 4*k3^4) + 
         k1^4*(21*k2^6 - 90*k2^4*k3^2 + 79*k2^2*k3^4 + 18*k3^6) + 
         k1^2*(-7*k2^8 + 35*k2^6*k3^2 - 89*k2^4*k3^4 + 73*k2^2*k3^6 - 
           12*k3^8))))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(56*F^2*k1^4*k2^2*k3^4) + 
  (b1*(7*b1^2*(-((-1 + F^2)*(k2^2 - k3^2)^4*(k2^2 + k3^2)) + 
       (-1 + F^2)*k1^6*(k2^4 + k3^4) + k1^2*(k2^2 - k3^2)^2*
        (3*(-1 + F^2)*k2^4 + 4*(-1 + F^2 - f1)*k2^2*k3^2 + 
         3*(-1 + F^2)*k3^4) - k1^4*(k2^2 + k3^2)*(3*(-1 + F^2)*k2^4 - 
         2*(-1 + F^2 + 2*f1)*k2^2*k3^2 + 3*(-1 + F^2)*k3^4)) + 
     2*f1*(-2*k1^2*(k2^2 - k3^2)^2 + k1^4*(k2^2 + k3^2) + 
       (k2^2 - k3^2)^2*(k2^2 + k3^2))*(7*Sqrt[2]*(c2 - c4)*k2^2*k3^2 + 
       ((c2 + c4)*(k1^4 + k2^4 + 12*k2^2*k3^2 + k3^4 - 2*k1^2*(k2^2 + k3^2)))/
        Sqrt[2]) + b1*(f1*(-7*(k2^2 - k3^2)^2*(k2^2 + k3^2)^3 + 
         3*k1^2*(k2^2 - k3^2)^2*(7*k2^4 + 10*k2^2*k3^2 + 7*k3^4) + 
         k1^6*(7*k2^4 + 30*k2^2*k3^2 + 7*k3^4) - 
         k1^4*(21*k2^6 + 11*k2^4*k3^2 + 11*k2^2*k3^4 + 21*k3^6)) + 
       Sqrt[2]*(c2 + c4)*(-1 + F^2)*(k1^8*(k2^2 + k3^2) + 
         (k2^2 - k3^2)^4*(k2^2 + k3^2) - 4*k1^6*(k2^4 + k2^2*k3^2 + k3^4) + 
         2*k1^4*(3*k2^6 + k2^4*k3^2 + k2^2*k3^4 + 3*k3^6) - 
         4*k1^2*(k2^8 - k2^6*k3^2 - k2^2*k3^6 + k3^8))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(56*F^2*k1^2*k2^4*k3^4), 
 -1/112*((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (21*b1^3*(-1 + F^2)*k1^2*k2^2*k3^4*(k1^2 + k2^2 - k3^2)*
       ((-1 + F^2)*k1^2 - (-1 + F^2 - 2*f1)*(k2^2 - k3^2)) + 
      4*f1^2*k1^2*k2^2*k3^4*(7*Sqrt[2]*(c2 - c4)*k1^2*k2^2 + 
        ((c2 + c4)*(k1^4 + (k2^2 - k3^2)^2 + 2*k1^2*(6*k2^2 - k3^2)))/
         Sqrt[2]) + b1^2*(14*f1^2*k1^2*k2^2*k3^4*(-3*k2^4 + 3*k3^4 + 
          k1^2*(5*k2^2 - 3*k3^2)) - 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*
         k3^4*(2*k1^6 - k1^4*k3^2 - 4*k1^2*(k2^2 - k3^2)^2 + 
          3*(-(k2^2*k3) + k3^3)^2) - (-1 + F^2)*f1*
         (3*k2^2*(k2^2 - k3^2)^3*(3*k2^4 + 11*k3^4) + 
          k1^8*(9*k2^4 - 3*k2^2*k3^2 + 42*k3^4) - 
          2*k1^6*(18*k2^6 - 6*k2^4*k3^2 - 59*k2^2*k3^4 + 63*k3^6) + 
          2*k1^4*(27*k2^8 - 21*k2^6*k3^2 + 68*k2^4*k3^4 - 137*k2^2*k3^6 + 
            63*k3^8) + k1^2*(-36*k2^10 + 60*k2^8*k3^2 + 40*k2^6*k3^4 - 
            214*k2^4*k3^6 + 192*k2^2*k3^8 - 42*k3^10))) + 
      b1*f1*k3^2*(f1*k2^2*(3*k1^8 - 3*(k2^2 - k3^2)^3*(3*k2^2 + 4*k3^2) - 
          k1^6*(12*k2^2 + 13*k3^2) + k1^4*(6*k2^4 - 11*k2^2*k3^2 + k3^4) + 
          k1^2*(12*k2^6 - 55*k2^4*k3^2 + 46*k2^2*k3^4 - 3*k3^6)) + 
        4*(-1 + F^2)*k3^2*(k1^2 + k2^2 - k3^2)^2*
         ((21*(c2 - c4)*k1^2*k2^2)/Sqrt[2] + 
          ((c2 + c4)*(3*k1^4 + k1^2*(17*k2^2 - 6*k3^2) + 3*(k2^2 - k3^2)^2))/
           Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^4*k1^6*k2^6*k3^4) + 
  ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (-21*b1^3*(-1 + F^2)*k1^2*k2^4*k3^2*(k1^2 - k2^2 + k3^2)*
      ((-1 + F^2)*k1^2 + (-1 + F^2 - 2*f1)*(k2^2 - k3^2)) - 
     4*f1^2*k1^2*k2^4*k3^2*(7*Sqrt[2]*(c2 - c4)*k1^2*k3^2 + 
       ((c2 + c4)*(k1^4 - 2*k1^2*(k2^2 - 6*k3^2) + (k2^2 - k3^2)^2))/
        Sqrt[2]) + b1^2*(14*f1^2*k1^2*k2^4*k3^2*(-3*k2^4 + 3*k3^4 + 
         k1^2*(3*k2^2 - 5*k3^2)) + 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^4*k3^2*
        (2*k1^6 - k1^4*k2^2 - 4*k1^2*(k2^2 - k3^2)^2 + 
         3*(k2^3 - k2*k3^2)^2) + (-1 + F^2)*f1*
        (3*k3^2*(-k2^2 + k3^2)^3*(11*k2^4 + 3*k3^4) + 
         k1^8*(42*k2^4 - 3*k2^2*k3^2 + 9*k3^4) - 
         2*k1^6*(63*k2^6 - 59*k2^4*k3^2 - 6*k2^2*k3^4 + 18*k3^6) + 
         2*k1^4*(63*k2^8 - 137*k2^6*k3^2 + 68*k2^4*k3^4 - 21*k2^2*k3^6 + 
           27*k3^8) + k1^2*(-42*k2^10 + 192*k2^8*k3^2 - 214*k2^6*k3^4 + 
           40*k2^4*k3^6 + 60*k2^2*k3^8 - 36*k3^10))) - 
     b1*f1*k2^2*(2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*k2^2*(k1^2 - k2^2 + k3^2)^2*
        (3*k1^4 + 3*(k2^2 - k3^2)^2 + k1^2*(-6*k2^2 + 17*k3^2)) + 
       k3^2*(42*Sqrt[2]*(c2 - c4)*(-1 + F^2)*k1^2*k2^2*(k1^2 - k2^2 + k3^2)^
           2 + f1*(3*k1^8 + 3*(k2^2 - k3^2)^3*(4*k2^2 + 3*k3^2) - 
           k1^6*(13*k2^2 + 12*k3^2) + k1^4*(k2^4 - 11*k2^2*k3^2 + 6*k3^4) + 
           k1^2*(-3*k2^6 + 46*k2^4*k3^2 - 55*k2^2*k3^4 + 12*k3^6)))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(112*F^4*k1^6*k2^4*k3^6) - 
  ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (-21*b1^3*(-1 + F^2)*k2^2*k3^2*(2*f1*k1^2*(k2^2 - k3^2)^2*(k2^2 + k3^2) + 
       (-1 + F^2 - 2*f1)*k1^4*(k2^4 + k3^4) - (-1 + F^2)*(k2^2 - k3^2)^2*
        (k2^4 + k3^4)) - 2*f1^2*k2^2*k3^2*(k1^4 - 3*(k2^2 - k3^2)^2)*
      (7*Sqrt[2]*(c2 - c4)*k2^2*k3^2 + 
       ((c2 + c4)*(k1^4 + k2^4 + 12*k2^2*k3^2 + k3^4 - 2*k1^2*(k2^2 + k3^2)))/
        Sqrt[2]) + 2*b1^2*(-(((c2 + c4)*(-1 + F^2)^2*k2^2*k3^2*
          (k1^8 + 4*k1^6*(k2^2 + k3^2) + k1^4*(-8*k2^4 + 6*k2^2*k3^2 - 
             8*k3^4) + 3*(k2^2 - k3^2)^2*(k2^4 + k3^4)))/Sqrt[2]) + 
       7*f1^2*k1^2*k2^2*k3^2*(-3*(k2^2 - k3^2)^2*(k2^2 + k3^2) + 
         k1^2*(3*k2^4 - 4*k2^2*k3^2 + 3*k3^4)) + (-1 + F^2)*f1*
        (-21*(k2^4 - k3^4)^2*(k2^4 - k2^2*k3^2 + k3^4) + 
         k1^6*(21*k2^6 + 11*k2^4*k3^2 + 11*k2^2*k3^4 + 21*k3^6) + 
         3*k1^2*(k2^2 - k3^2)^2*(21*k2^6 + 34*k2^4*k3^2 + 34*k2^2*k3^4 + 
           21*k3^6) - k1^4*(63*k2^8 + 8*k2^6*k3^2 - 28*k2^4*k3^4 + 
           8*k2^2*k3^6 + 63*k3^8))) + 
     b1*f1*(2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*
        (k1^8*(3*k2^4 - k2^2*k3^2 + 3*k3^4) - 12*k1^2*(k2^2 - k3^2)^2*
          (k2^6 + 4*k2^4*k3^2 + 4*k2^2*k3^4 + k3^6) - 
         2*k1^6*(6*k2^6 - k2^4*k3^2 - k2^2*k3^4 + 6*k3^6) + 
         3*(k2^2 - k3^2)^2*(k2^8 + 6*k2^6*k3^2 + 6*k2^2*k3^6 + k3^8) + 
         k1^4*(18*k2^8 + 11*k2^6*k3^2 - 8*k2^4*k3^4 + 11*k2^2*k3^6 + 
           18*k3^8)) + k2^2*k3^2*(f1*(k2^2 + k3^2)*
          (k1^6 + 15*k1^2*(k2^2 - k3^2)^2 + 5*k1^4*(k2^2 + k3^2) - 
           21*(k2^2 - k3^2)^2*(k2^2 + k3^2)) + 42*Sqrt[2]*(c2 - c4)*
          (-1 + F^2)*(-2*k1^2*(k2^2 - k3^2)^2*(k2^2 + k3^2) + 
           k1^4*(k2^4 + k3^4) + (k2^2 - k3^2)^2*(k2^4 + k3^4)))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(112*F^4*k1^4*k2^6*k3^6), 
 ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (-35*b1^3*(-1 + F^2)^2*f1*k1^2*k2^2*(k1^2 - k2^2)*k3^4*
      (k1^2 + k2^2 - k3^2) + b1*f1*(28*f1^2*k1^2*k2^4*k3^4*
        (k1^2 - 5*k2^2 + 5*k3^2) + Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k3^4*
        (15*k1^8 + 6*k1^6*(3*k2^2 - 10*k3^2) + 15*(k2^2 - k3^2)^2*
          (k2^4 - 4*k2^2*k3^2 + k3^4) + 2*k1^4*(23*k2^4 - 63*k2^2*k3^2 + 
           45*k3^4) + 2*k1^2*(29*k2^6 - 102*k2^4*k3^2 + 99*k2^2*k3^4 - 
           30*k3^6)) + (-1 + F^2)*f1*k2^2*(3*k1^8*(k2^2 + 2*k3^2) + 
         6*k1^6*(2*k2^4 - 16*k2^2*k3^2 + k3^4) - 15*(k2^2 - k3^2)^3*
          (3*k2^4 + 3*k2^2*k3^2 + 8*k3^4) - 2*k1^4*(39*k2^6 - 60*k2^4*k3^2 + 
           14*k2^2*k3^4 + 11*k3^6) + 2*k1^2*(54*k2^8 - 60*k2^6*k3^2 - 
           69*k2^4*k3^4 + 130*k2^2*k3^6 - 55*k3^8))) + 
     b1^2*(-1 + F^2)*(-8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k2^4*k3^6 + 
       28*f1^2*k1^2*k2^2*k3^4*(5*k1^4 + 2*k1^2*(9*k2^2 - 10*k3^2) + 
         5*(k2^4 - 4*k2^2*k3^2 + 3*k3^4)) + (-1 + F^2)*f1*
        (3*k1^8*(k2^4 + 5*k2^2*k3^2 - 35*k3^4) + 
         3*k1^6*(14*k2^6 - 21*k2^4*k3^2 - 50*k2^2*k3^4 + 105*k3^6) - 
         k1^4*(48*k2^8 + 15*k2^6*k3^2 + 37*k2^4*k3^4 - 535*k2^2*k3^6 + 
           315*k3^8) + 45*(k2^12 - 4*k2^8*k3^4 + 4*k2^6*k3^6 - k2^4*k3^8) + 
         k1^2*(-42*k2^10 + 87*k2^8*k3^2 - 4*k2^6*k3^4 + 254*k2^4*k3^6 - 
           400*k2^2*k3^8 + 105*k3^10))) - 4*f1^2*k1^2*k2^2*k3^2*
      (f1*k2^2*(3*k1^4 + 3*k2^4 + k2^2*k3^2 - 4*k3^4 + 
         k1^2*(-6*k2^2 + k3^2)) - 4*(-1 + F^2)*k3^2*
        ((7*(c2 - c4)*k1^2*k2^2)/Sqrt[2] + 
         ((c2 + c4)*(k1^4 + k1^2*(7*k2^2 - 2*k3^2) + (k2^2 - k3^2)^2))/
          Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(896*F^6*k1^8*k2^8*k3^4) - 
  ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (35*b1^3*(-1 + F^2)^2*f1*k1^2*k3^4*(5*k1^4 + 6*k2^4 - 11*k2^2*k3^2 + 
       5*k3^4 + k1^2*(11*k2^2 - 10*k3^2)) - b1^2*(-1 + F^2)*
      (-8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k2^6*k3^2 + 
       28*f1^2*k1^2*k2^4*(5*k1^4 + k1^2*(-20*k2^2 + 18*k3^2) + 
         5*(3*k2^4 - 4*k2^2*k3^2 + k3^4)) + (-1 + F^2)*f1*
        (73*k1^8*k3^2 + k1^6*(70*k2^4 + 52*k2^2*k3^2 + 22*k3^4) + 
         2*k1^4*(70*k2^6 - 206*k2^4*k3^2 + 175*k2^2*k3^4 - 119*k3^6) + 
         165*k3^2*(-k2^8 + 4*k2^4*k3^4 - 4*k2^2*k3^6 + k3^8) - 
         2*k1^2*(105*k2^8 - 142*k2^6*k3^2 + 97*k2^4*k3^4 - 71*k2^2*k3^6 + 
           11*k3^8))) + 4*f1^2*k1^2*k2^2*(-2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*
        k2^2*(k1^4 + (k2^2 - k3^2)^2 + k1^2*(-2*k2^2 + 7*k3^2)) + 
       k3^2*(-14*Sqrt[2]*(c2 - c4)*(-1 + F^2)*k1^2*k2^2 + 
         f1*(3*k1^4 - 4*k2^4 + k2^2*k3^2 + 3*k3^4 + k1^2*(k2^2 - 6*k3^2)))) + 
     b1*f1*(-28*f1^2*k1^2*k2^4*k3^2*(k1^2 + 5*k2^2 - 5*k3^2) - 
       (-1 + F^2)*f1*(3*k1^8*(2*k2^2 + k3^2) + 6*k1^6*(k2^4 - 16*k2^2*k3^2 + 
           2*k3^4) + 15*(k2^2 - k3^2)^3*(8*k2^4 + 3*k2^2*k3^2 + 3*k3^4) - 
         2*k1^4*(11*k2^6 + 14*k2^4*k3^2 - 60*k2^2*k3^4 + 39*k3^6) - 
         2*k1^2*(55*k2^8 - 130*k2^6*k3^2 + 69*k2^4*k3^4 + 60*k2^2*k3^6 - 
           54*k3^8)) + 2*(-1 + F^2)^2*(35*Sqrt[2]*(c2 - c4)*k1^2*k3^4*
          (2*k1^4 + 5*k1^2*(k2^2 - k3^2) + 3*(k2^2 - k3^2)^2) + 
         ((c2 + c4)*(10*k1^8*k3^2 + k1^6*(12*k2^4 - 5*k2^2*k3^2 + 95*k3^4) + 
            k1^4*(36*k2^6 - 101*k2^4*k3^2 + 330*k2^2*k3^4 - 275*k3^6) + 
            15*(k2^2 - k3^2)^2*(4*k2^6 + k2^4*k3^2 - 4*k2^2*k3^4 + k3^6) + 
            k1^2*(-108*k2^8 + 209*k2^6*k3^2 + 57*k2^4*k3^4 - 305*k2^2*k3^6 + 
              155*k3^8)))/Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(896*F^6*k1^8*k2^4*k3^6) - 
  ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (-35*b1^3*(-1 + F^2)^2*f1*k1^2*k2^2*k3^4*(k1^2 + k2^2 - k3^2)*
      (k2^2 + k3^2) + b1^2*(-1 + F^2)*(8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^6*
        k2^4*k3^2 - 56*f1^2*k1^2*k2^2*(k1^2*(5*k2^6 - 2*k2^4*k3^2 - 
           2*k2^2*k3^4 + 5*k3^6) - 5*(k2^8 - k2^6*k3^2 - k2^2*k3^6 + k3^8)) + 
       (-1 + F^2)*f1*(k1^6*(68*k2^4*k3^2 + 35*k2^2*k3^4 - 105*k3^6) - 
         105*(k2^2 - k3^2)^2*(2*k2^8 + 2*k2^6*k3^2 + 3*k2^4*k3^4 + 
           2*k2^2*k3^6 - k3^8) + 7*k1^4*(10*k2^8 + 18*k2^6*k3^2 - 
           47*k2^4*k3^4 - 30*k2^2*k3^6 + 45*k3^8) + 
         k1^2*(140*k2^10 - 572*k2^8*k3^2 - 35*k2^6*k3^4 + 163*k2^4*k3^6 + 
           595*k2^2*k3^8 - 315*k3^10))) + 
     2*b1*f1*(35*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k2^4*k3^4*
        (2*k1^4 + 5*k1^2*(k2^2 - k3^2) + 3*(k2^2 - k3^2)^2) + 
       14*f1^2*k1^2*k2^4*k3^2*(5*(k2^2 - k3^2)^2 + k1^2*(k2^2 + k3^2)) + 
       ((c2 + c4)*(-1 + F^2)^2*(k1^8*(2*k2^4 + 7*k2^2*k3^2 - 15*k3^4) + 
          k1^6*(36*k2^6 - 43*k2^4*k3^2 - 9*k2^2*k3^4 + 60*k3^6) + 
          15*(k2^2 - k3^2)^2*(2*k2^8 + 2*k2^6*k3^2 + 13*k2^4*k3^4 + 
            2*k2^2*k3^6 - k3^8) - 3*k1^4*(16*k2^8 + 7*k2^6*k3^2 - 
            58*k2^4*k3^4 - 19*k2^2*k3^6 + 30*k3^8) - 
          5*k1^2*(4*k2^10 - 19*k2^8*k3^2 - 45*k2^6*k3^4 + 49*k2^4*k3^6 + 
            23*k2^2*k3^8 - 12*k3^10)))/Sqrt[2] - (-1 + F^2)*f1*k2^2*
        (9*k1^6*(k2^4 + k2^2*k3^2 + k3^4) + k1^2*(k2^2 - k3^2)^2*
          (163*k2^4 + 233*k2^2*k3^2 + 163*k3^4) + 
         k1^4*(-67*k2^6 + 59*k2^4*k3^2 + 59*k2^2*k3^4 - 67*k3^6) - 
         105*(k2^10 - k2^8*k3^2 - k2^2*k3^8 + k3^10))) + 
     4*f1^2*k2^2*(((c2 + c4)*(-1 + F^2)*(k1^8*(k2^2 + k3^2) + 
          20*k1^2*(k2^2 - k3^2)^2*(2*k2^4 + 5*k2^2*k3^2 + 2*k3^4) + 
          2*k1^6*(4*k2^4 - 9*k2^2*k3^2 + 4*k3^4) + 
          k1^4*(-34*k2^6 + 37*k2^4*k3^2 + 37*k2^2*k3^4 - 34*k3^6) - 
          15*(k2^2 - k3^2)^2*(k2^6 + 6*k2^4*k3^2 + 6*k2^2*k3^4 + k3^6)))/
        Sqrt[2] + k2^2*k3^2*(f1*k1^2*(-4*k1^4 + 3*(k2^2 - k3^2)^2 + 
           k1^2*(k2^2 + k3^2)) + (7*(c2 - c4)*(-1 + F^2)*
           (10*k1^2*(k2^2 - k3^2)^2 + k1^4*(k2^2 + k3^2) - 15*(k2^2 - k3^2)^2*
             (k2^2 + k3^2)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(896*F^6*k1^6*k2^8*k3^6), 
 -1/3584*((-1 + F^2)*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
     (b1^2*(-1 + F^2)*(9*(-1 + F^2)*k1^8*k2^2 + 168*(-1 + F^2)*k2^6*
         (k2^2 - k3^2)^2 + 3*k1^6*(9*(-1 + F^2)*k2^4 - 7*(-1 + F^2)*k2^2*
           k3^2 - 49*f1*k3^4) + k1^4*(-129*(-1 + F^2)*k2^6 + 
          126*(-1 + F^2)*k2^4*k3^2 + (184 - 184*F^2 + 147*f1)*k2^2*k3^4 + 
          49*(-4 + 4*F^2 + 3*f1)*k3^6) + k1^2*(-51*(-1 + F^2)*k2^8 + 
          255*(-1 + F^2)*k2^6*k3^2 - 6*(-58 + 58*F^2 - 49*f1)*k2^4*k3^4 + 
          14*(-26 + 26*F^2 - 21*f1)*k2^2*k3^6 - 196*(-1 + F^2)*k3^8)) - 
      4*f1*k1^2*(-(Sqrt[2]*(c2 + c4)*(-1 + F^2)*k3^4*(k1^4 + k2^4 - 
           4*k2^2*k3^2 + k3^4 + k1^2*(4*k2^2 - 2*k3^2))) + 
        f1*k2^2*(3*k2^6 + 5*k2^2*k3^4 - 8*k3^6 + 3*k1^4*(k2^2 + 2*k3^2) + 
          k1^2*(-6*k2^4 - 6*k2^2*k3^2 + 2*k3^4))) + 
      b1*(-56*f1^2*k1^2*k2^2*k3^4*(k1^2 + 7*k2^2 - 7*k3^2) + 
        4*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k3^4*
         (k1^6 + 2*k1^4*(7*k2^2 - 8*k3^2) - 14*(-(k2^2*k3) + k3^3)^2 + 
          k1^2*(15*k2^4 - 46*k2^2*k3^2 + 29*k3^4)) + 
        (-1 + F^2)*f1*(168*k2^2*k3^2*(k2^2 - k3^2)^2*(2*k2^2 - k3^2) + 
          3*k1^8*(8*k2^2 + 17*k3^2) - k1^6*(24*k2^4 + 123*k2^2*k3^2 + 
            74*k3^4) - k1^4*(168*k2^6 + 75*k2^4*k3^2 - 410*k2^2*k3^4 + 
            61*k3^6) + k1^2*(168*k2^8 - 165*k2^6*k3^2 + 416*k2^4*k3^4 - 
            479*k2^2*k3^6 + 84*k3^8))))*Plin[((26 + F*(-17 + 6*F))*k1)/
       (15*qo)]*Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/
    (F^8*k1^10*k2^8*k3^4) + 
  ((-1 + F^2)*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (7*b1^3*(-1 + F^2)^2*k1^2*k2^2*k3^2*(5*k1^4 + 49*k1^2*(k2^2 - k3^2) + 
       56*(k2^2 - k3^2)^2) - b1^2*(-1 + F^2)*k2^2*(14*(-1 + F^2)*k1^8 - 
       616*(-1 + F^2)*k2^2*k3^2*(k2^2 - k3^2)^2 + 
       k1^6*(308*(-1 + F^2)*k2^2 + (292 - 292*F^2 - 413*f1)*k3^2) + 
       k1^4*(-98*(-1 + F^2)*k2^4 + (-3 + 3*F^2 - 1813*f1)*k2^2*k3^2 + 
         7*(-10 + 10*F^2 + 149*f1)*k3^4) + k1^2*(-784*(-1 + F^2)*k2^6 + 
         (-1475 + 1475*F^2 - 1568*f1)*k2^4*k3^2 + (1243 - 1243*F^2 + 2254*f1)*
          k2^2*k3^4 + 2*(-232 + 232*F^2 - 343*f1)*k3^6)) + 
     b1*(56*f1^2*k1^2*k2^6*(k1^2 - 7*k2^2 + 7*k3^2) + 
       14*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k1^2*k2^2*k3^2*
        (k1^4 + 21*k1^2*(k2^2 - k3^2) + 28*(k2^2 - k3^2)^2) + 
       2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*
        (k1^8 + k1^6*(23*k2^2 - 17*k3^2) + 28*(3*k2^2 - 2*k3^2)*
          (k2^3 - k2*k3^2)^2 + k1^4*(-45*k2^4 + 141*k2^2*k3^2 - 98*k3^4) + 
         k1^2*(-55*k2^6 + 310*k2^4*k3^2 - 421*k2^2*k3^4 + 170*k3^6)) - 
       (-1 + F^2)*f1*(3*k1^8*(8*k2^2 + 35*k3^2) + 
         3*k1^6*(8*k2^4 + 110*k2^2*k3^2 - 161*k3^4) - 56*(k2^2 - k3^2)^2*
          (4*k2^6 + 12*k2^4*k3^2 - 2*k2^2*k3^4 - 3*k3^6) + 
         k1^4*(-192*k2^6 + 325*k2^4*k3^2 - 1098*k2^2*k3^4 + 819*k3^6) + 
         k1^2*(32*k2^8 - 708*k2^6*k3^2 + 101*k2^4*k3^4 + 1096*k2^2*k3^6 - 
           609*k3^8))) + 4*f1*k1^2*k2^2*
      (f1*(-8*k2^6 + 5*k2^4*k3^2 + 3*k3^6 + 3*k1^4*(2*k2^2 + k3^2) + 
         2*k1^2*(k2^4 - 3*k2^2*k3^2 - 3*k3^4)) + 2*(-1 + F^2)*
        (7*Sqrt[2]*(c2 - c4)*k1^2*k3^4 + ((c2 + c4)*(4*k2^6 + k1^4*k3^2 + 
            k2^4*k3^2 - 4*k2^2*k3^4 + k3^6 - 4*k1^2*(k2^4 + k2^2*k3^2 - 
              3*k3^4)))/Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^8*k1^10*k2^6*k3^6) + 
  (f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (-7*b1^3*(-1 + F^2)^3*k1^2*k2^4*k3^2*(3*k1^2 + 7*k2^2 - 7*k3^2) + 
     7*b1^2*(-1 + F^2)^2*((-1 + F^2)*k1^6*k2^2*(2*k2^2 + 3*k3^2) - 
       28*(-1 + F^2)*(k2^2 - k3^2)^2*(4*k2^6 + 3*k2^4*k3^2 + k3^6) + 
       k1^4*(44*(-1 + F^2)*k2^6 + (37 - 37*F^2 - 23*f1)*k2^4*k3^2 - 
         7*(-1 + F^2)*k2^2*k3^4 - 21*f1*k3^6) - 7*k1^2*(k2^2 - k3^2)*
        (2*(-1 + F^2)*k2^6 + 9*(-2 + 2*F^2 + f1)*k2^4*k3^2 + 
         (-4 + 4*F^2 + 3*f1)*k3^6)) + b1*(-1 + F^2)*
      (14*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k2^4*k3^2*
        (k1^4 + 21*k1^2*(k2^2 - k3^2) + 28*(k2^2 - k3^2)^2) - 
       56*f1^2*k1^2*k2^2*(-7*(k2^2 - k3^2)^2*(k2^2 + k3^2) + 
         k1^2*(k2^4 - 3*k2^2*k3^2 + k3^4)) + 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*
        (k1^8*(3*k2^2 - 2*k3^2) + k1^6*(13*k2^4 - 16*k2^2*k3^2 + 18*k3^4) + 
         k1^4*(-43*k2^6 + 25*k2^4*k3^2 + 35*k2^2*k3^4 - 16*k3^6) + 
         14*(k2^2 - k3^2)^2*(4*k2^6 + 13*k2^4*k3^2 + k3^6) - 
         7*k1^2*(3*k2^8 - 31*k2^6*k3^2 + 28*k2^4*k3^4 - 2*k2^2*k3^6 + 
           2*k3^8)) + (-1 + F^2)*f1*(k1^6*(24*k2^4 + 269*k2^2*k3^2 + 
           103*k3^4) + k1^4*(56*k2^6 + 270*k2^4*k3^2 - 924*k2^2*k3^4 - 
           262*k3^6) + k1^2*(-416*k2^8 - 367*k2^6*k3^2 - 527*k2^4*k3^4 + 
           1103*k2^2*k3^6 + 159*k3^8) - 392*(k2^8*k3^2 - 3*k2^4*k3^6 + 
           2*k2^2*k3^8))) + 
     2*f1*(((c2 + c4)*(-1 + F^2)^2*(-224*k2^2*k3^2*(k2^2 - 3*k3^2)*
           (k2^2 - k3^2)^2 + k1^8*(16*k2^2 + 17*k3^2) - 
          k1^6*(49*k2^2*k3^2 + 55*k3^4) + k1^4*(-128*k2^6 + 127*k2^4*k3^2 + 
            432*k2^2*k3^4 + 59*k3^6) + 7*k1^2*(16*k2^8 - 9*k2^6*k3^2 + 
            149*k2^4*k3^4 - 153*k2^2*k3^6 - 3*k3^8)))/Sqrt[2] + 
       2*k2^2*(14*f1^2*k1^4*k2^2*k3^2 + (7*(c2 - c4)*(-1 + F^2)^2*k3^2*
           (91*k1^2*k3^2*(k2^2 - k3^2) - 28*(k2^2 - 2*k3^2)*(k2^2 - k3^2)^2 + 
            k1^4*(4*k2^2 + 35*k3^2)))/Sqrt[2] - 2*(-1 + F^2)*f1*k1^2*
          (4*k1^4*(k2^2 + k3^2) - 3*(k2^2 - k3^2)^2*(k2^2 + k3^2) - 
           k1^2*(k2^4 + k2^2*k3^2 + k3^4)))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^8*k1^8*k2^8*k3^6), 
 ((-1 + F^2)^2*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^4*
    (24*b1^2*(-1 + F^2)^2*k1^2*k2^6 + 8*f1*k1^2*
      (Sqrt[2]*(c2 + c4)*(-1 + F^2)*k3^4*(k1^2 - k3^2) - 
       3*f1*k2^2*(k1^4 - 2*k2^2*k3^2 + k3^4 - k1^2*(k2^2 - 2*k3^2))) + 
     b1*(-8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^6 + 
       315*f1^2*k1^2*k3^4*(k1^2 + k2^2 - k3^2) + (-1 + F^2)*f1*
        (33*k1^8 + k1^6*(39*k2^2 - 81*k3^2) + 540*k2^4*(k2^2 - k3^2)^2 + 
         k1^4*(-477*k2^4 + 486*k2^2*k3^2 + 16*k3^4) - 
         3*k1^2*(37*k2^6 - 241*k2^4*k3^2 + 152*k2^2*k3^4 + 36*k3^6))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(14336*F^10*k1^12*k2^8*k3^4) - 
  ((-1 + F^2)^2*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^4*
    (2*b1^2*(-1 + F^2)*k1^2*k2^2*(7*(-4 + 4*F^2 - 7*f1)*k1^4 + 
       44*(-1 + F^2)*k2^2*k3^2 + 7*f1*k1^2*(189*k2^2 - 152*k3^2) + 
       63*f1*(40*k2^4 - 71*k2^2*k3^2 + 31*k3^4)) + 
     8*f1*k1^2*(7*Sqrt[2]*(c2 - c4)*(-1 + F^2)*k1^2*k2^2*k3^2 + 
       Sqrt[2]*(c2 + c4)*(-1 + F^2)*k2^2*(k1^4 + 3*k2^4 - 2*k2^2*k3^2 + 
         k1^2*(-4*k2^2 + 6*k3^2)) + f1*(4*k2^6 + 12*k2^4*k3^2 - 2*k2^2*k3^4 - 
         3*k3^6 + 3*k1^4*(k2^2 - k3^2) + k1^2*(-5*k2^2*k3^2 + 6*k3^4))) + 
     b1*(-8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k2^2*(k1^4 - 3*k2^4 + 
         2*k2^2*k3^2) + 7*f1^2*k1^2*k2^2*k3^2*(161*k1^2 + 
         225*(k2^2 - k3^2)) - (-1 + F^2)*f1*(66*k1^8 + 
         12*k1^6*(49*k2^2 - 48*k3^2) - 180*(12*k2^2 - k3^2)*
          (k2^3 - k2*k3^2)^2 + k1^4*(610*k2^4 - 1765*k2^2*k3^2 + 1026*k3^4) + 
         k1^2*(-1184*k2^6 + 203*k2^4*k3^2 + 1321*k2^2*k3^4 - 516*k3^6))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(14336*F^10*k1^12*k2^6*k3^6) - 
  ((-1 + F^2)*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^4*
    (-14*b1^2*(-1 + F^2)^2*k1^2*k2^4*((-4 + 4*F^2 + 21*f1)*k1^2 + 
       81*f1*(k2^2 - k3^2)) + b1*(-1 + F^2)*f1*
      ((-1 + F^2)*k1^6*(154*k2^2 + 61*k3^2) - 1260*(-1 + F^2)*(2*k2^2 + k3^2)*
        (k2^3 - k2*k3^2)^2 + k1^4*(4*(-257 + 257*F^2 + 14*f1)*k2^4 - 
         7*(-157 + 157*F^2 + 95*f1)*k2^2*k3^2 - 63*(-3 + 3*F^2 - 5*f1)*
          k3^4) - 3*k1^2*(2*(-113 + 113*F^2 - 84*f1)*k2^6 + 
         (-584 + 584*F^2 + 651*f1)*k2^4*k3^2 - 42*(-19 + 19*F^2 + 14*f1)*k2^2*
          k3^4 + (-4 + 4*F^2 + 105*f1)*k3^6)) + 
     4*f1*k2^2*(28*f1^2*k1^4*(k2^2 + k3^2) - 2*(-1 + F^2)*f1*k1^2*
        (8*k1^4 - k1^2*k2^2 + 9*k2^2*k3^2 - 6*k3^4) + 
       (7*(c2 - c4)*(-1 + F^2)^2*k3^2*(11*k1^4 + 81*k1^2*(k2^2 - k3^2) + 
          90*(k2^2 - k3^2)^2))/Sqrt[2]) + 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*
      (4*b1*(-1 + F^2)*k1^4*(2*k2^4 + k1^2*k3^2) + 
       f1*(11*k1^8 + k1^6*(21*k2^2 - 38*k3^2) + 180*(k2^2 + 3*k3^2)*
          (k2^3 - k2*k3^2)^2 - 3*k1^4*(53*k2^4 - 67*k2^2*k3^2 - 9*k3^4) - 
         9*k1^2*(5*k2^6 - 79*k2^4*k3^2 + 74*k2^2*k3^4))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(14336*F^10*k1^10*k2^8*k3^6), 
 (-3*(-1 + F^2)^3*f1^2*(b1*(-1 + F^2)*k2^2 + f1*(-k1^2 + k2^2))*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^5*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(3584*F^12*k1^12*k2^6*k3^4) + 
  ((-1 + F^2)^3*f1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^5*
    (b1*(24*(-1 + F^2)*k1^4 + 777*f1*k1^2*k2^2 + (-96 + 96*F^2 + 1925*f1)*
        k2^4 + (8 - 8*F^2 - 1925*f1)*k2^2*k3^2) - 
     8*f1*(3*k1^4 - 12*k2^4 + k2^2*k3^2 + k1^2*(2*k2^2 - 3*k3^2)))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(28672*F^12*k1^12*k2^6*k3^6) + 
  ((-1 + F^2)^2*f1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^5*
    (8*(4*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k2^2 - 6*(-1 + F^2)*f1*k2^2*
        (2*k2^2 - k3^2) + f1*k1^2*((2 - 2*F^2 + 28*f1)*k2^2 - 21*f1*k3^2)) - 
     7*b1*(-1 + F^2)*(k1^2*(2*(-8 + 8*F^2 + 73*f1)*k2^2 - 35*f1*k3^2) + 
       55*f1*(6*k2^4 - 7*k2^2*k3^2 + k3^4)))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(57344*F^12*k1^10*k2^8*k3^6), 
 -1/28*(Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
     (7*b1^3*(-1 + F^2)*k1^2*k2^2*k3^4*((-2 + 2*F^2 - f1)*k1^6 + 
        3*(-1 + F^2)*k1^4*(k2^2 - k3^2) - (-1 + F^2 - 2*f1)*(k2^2 - k3^2)^3 + 
        k1^2*((-4 + 4*F^2 - f1)*k2^4 - 6*f1*k2^2*k3^2 + 3*f1*k3^4)) + 
      4*f1^2*k1^2*k2^2*k3^4*(k1^2 + k2^2 - k3^2)*
       (7*Sqrt[2]*(c2 - c4)*k1^2*k2^2 + ((c2 + c4)*(k1^4 + (k2^2 - k3^2)^2 + 
           2*k1^2*(6*k2^2 - k3^2)))/Sqrt[2]) + 
      b1^2*(-2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*k3^4*
         (k1^8 + 2*k1^6*(k2^2 - k3^2) - 2*k1^2*(k2^2 - k3^2)^3 + 
          k3^2*(k2^2 - k3^2)^3 + 3*k1^4*(k2^4 - k2^2*k3^2)) - 
        7*f1^2*k1^2*k2^2*k3^4*(k1^6 - 2*k1^4*k2^2 + 
          k1^2*(-3*k2^4 + 10*k2^2*k3^2 - 3*k3^4) + 
          2*(2*k2^6 - 3*k2^4*k3^2 + k3^6)) + (-1 + F^2)*f1*
         (k1^10*(3*k2^4 - 14*k3^4) - k2^2*(k2^2 - k3^2)^4*
           (3*k2^4 + 11*k3^4) + k1^8*(-15*k2^6 + 6*k2^4*k3^2 - 59*k2^2*k3^4 + 
            56*k3^6) + k1^6*(30*k2^8 - 30*k2^6*k3^2 - 55*k2^4*k3^4 + 
            181*k2^2*k3^6 - 84*k3^8) + k1^2*(k2^2 - k3^2)^2*
           (15*k2^8 - 12*k2^6*k3^2 - 32*k2^4*k3^4 + 57*k2^2*k3^6 - 14*k3^8) + 
          k1^4*(-30*k2^10 + 54*k2^8*k3^2 - 74*k2^6*k3^4 + 218*k2^4*k3^6 - 
            196*k2^2*k3^8 + 56*k3^10))) - b1*f1*k3^2*
       (f1*k2^2*((k2^2 - k3^2)^4*(3*k2^2 + 4*k3^2) + 
          k1^8*(-9*k2^2 + 17*k3^2) - k1^2*(-29*k2^2 + k3^2)*
           (-(k2^2*k3) + k3^3)^2 + 3*k1^6*(8*k2^4 + 9*k2^2*k3^2 - 9*k3^4) + 
          k1^4*(-18*k2^6 + 47*k2^4*k3^2 - 36*k2^2*k3^4 + 7*k3^6)) - 
        4*(-1 + F^2)*k3^2*(k1^2 + k2^2 - k3^2)*
         ((7*(c2 - c4)*k1^2*k2^2*(k1^2 + k2^2 - k3^2)^2)/Sqrt[2] + 
          ((c2 + c4)*(k1^8 + k1^6*(8*k2^2 - 4*k3^2) + (k2^2 - k3^2)^4 + 
             4*k1^2*(k2^2 - k3^2)^2*(2*k2^2 - k3^2) + 
             2*k1^4*(5*k2^4 - 10*k2^2*k3^2 + 3*k3^4)))/Sqrt[2])))*
     Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^4*k1^5*k2^5*k3^4) + 
  (Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (4*f1^2*k1^2*k2^4*k3^2*(k1^2 - k2^2 + k3^2)*
      (7*Sqrt[2]*(c2 - c4)*k1^2*k3^2 + 
       ((c2 + c4)*(k1^4 - 2*k1^2*(k2^2 - 6*k3^2) + (k2^2 - k3^2)^2))/
        Sqrt[2]) + 7*b1^3*(-1 + F^2)*k1^2*k2^4*k3^2*((-2 + 2*F^2 - f1)*k1^6 - 
       3*(-1 + F^2)*k1^4*(k2^2 - k3^2) + (-1 + F^2 - 2*f1)*(k2^2 - k3^2)^3 + 
       k1^2*(4*(-1 + F^2)*k3^4 + f1*(3*k2^4 - 6*k2^2*k3^2 - k3^4))) + 
     b1^2*(-2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^4*k3^2*
        (k1^8 - 2*k1^6*(k2^2 - k3^2) + 2*k1^2*(k2^2 - k3^2)^3 - 
         k2^2*(k2^2 - k3^2)^3 + k1^4*(-3*k2^2*k3^2 + 3*k3^4)) - 
       7*f1^2*k1^2*k2^4*k3^2*(k1^6 - 2*k1^4*k3^2 + 
         k1^2*(-3*k2^4 + 10*k2^2*k3^2 - 3*k3^4) + 
         2*(k2^6 - 3*k2^2*k3^4 + 2*k3^6)) - (-1 + F^2)*f1*
        (k1^10*(14*k2^4 - 3*k3^4) + k3^2*(k2^2 - k3^2)^4*(11*k2^4 + 3*k3^4) + 
         k1^8*(-56*k2^6 + 59*k2^4*k3^2 - 6*k2^2*k3^4 + 15*k3^6) + 
         k1^6*(84*k2^8 - 181*k2^6*k3^2 + 55*k2^4*k3^4 + 30*k2^2*k3^6 - 
           30*k3^8) + k1^2*(k2^2 - k3^2)^2*(14*k2^8 - 57*k2^6*k3^2 + 
           32*k2^4*k3^4 + 12*k2^2*k3^6 - 15*k3^8) + 
         k1^4*(-56*k2^10 + 196*k2^8*k3^2 - 218*k2^6*k3^4 + 74*k2^4*k3^6 - 
           54*k2^2*k3^8 + 30*k3^10))) + 
     b1*(2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*f1*k2^4*
        (k1^10 + k1^2*(5*k2^2 - 9*k3^2)*(k2^2 - k3^2)^3 - (k2^2 - k3^2)^5 + 
         k1^8*(-5*k2^2 + 9*k3^2) + 2*k1^6*(5*k2^4 - 16*k2^2*k3^2 + 9*k3^4) - 
         2*k1^4*(5*k2^6 - 21*k2^4*k3^2 + 25*k2^2*k3^4 - 9*k3^6)) - 
       f1*k2^2*k3^2*(-14*Sqrt[2]*(c2 - c4)*(-1 + F^2)*k1^2*k2^2*
          (k1^2 - k2^2 + k3^2)^3 + f1*(k1^8*(17*k2^2 - 9*k3^2) + 
           (k2^2 - k3^2)^4*(4*k2^2 + 3*k3^2) - k1^2*(k2^2 - 29*k3^2)*
            (k2^3 - k2*k3^2)^2 - 3*k1^6*(9*k2^4 - 9*k2^2*k3^2 - 8*k3^4) + 
           k1^4*(7*k2^6 - 36*k2^4*k3^2 + 47*k2^2*k3^4 - 18*k3^6)))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(28*F^4*k1^5*k2^3*k3^6) + 
  ((k2^2 - k3^2)*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (-7*b1^3*(-1 + F^2)*k2^2*k3^2*((-2 + 2*F^2 - 3*f1)*k1^6*(k2^2 + k3^2) - 
       3*f1*k1^2*(k2^2 - k3^2)^2*(k2^2 + k3^2) - 3*(-1 + F^2 - 2*f1)*k1^4*
        (k2^4 + k3^4) + (-1 + F^2)*(k2^2 - k3^2)^2*(k2^4 + k3^4)) + 
     2*f1^2*k2^2*k3^2*(k1^4 - (k2^2 - k3^2)^2)*
      (7*Sqrt[2]*(c2 - c4)*k2^2*k3^2 + 
       ((c2 + c4)*(k1^4 + k2^4 + 12*k2^2*k3^2 + k3^4 - 2*k1^2*(k2^2 + k3^2)))/
        Sqrt[2]) + b1^2*(7*f1^2*k1^2*k2^2*k3^2*(3*k1^4*(k2^2 + k3^2) + 
         3*(k2^2 - k3^2)^2*(k2^2 + k3^2) + k1^2*(-6*k2^4 + 8*k2^2*k3^2 - 
           6*k3^4)) + Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*k3^2*
        (-3*k1^8 + 8*k1^6*(k2^2 + k3^2) + k1^4*(-6*k2^4 + 2*k2^2*k3^2 - 
           6*k3^4) + (k2^2 - k3^2)^2*(k2^4 + k3^4)) + 
       (-1 + F^2)*f1*(14*(k2^4 - k3^4)^2*(k2^4 - k2^2*k3^2 + k3^4) + 
         k1^8*(14*k2^4 + 29*k2^2*k3^2 + 14*k3^4) - 4*k1^2*(k2^2 - k3^2)^2*
          (14*k2^6 + 23*k2^4*k3^2 + 23*k2^2*k3^4 + 14*k3^6) - 
         2*k1^6*(28*k2^6 + 33*k2^4*k3^2 + 33*k2^2*k3^4 + 28*k3^6) + 
         k1^4*(84*k2^8 + 31*k2^6*k3^2 - 26*k2^4*k3^4 + 31*k2^2*k3^6 + 
           84*k3^8))) + b1*f1*(2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*
        (k1^10*(k2^2 + k3^2) - k1^8*(5*k2^4 + 4*k2^2*k3^2 + 5*k3^4) + 
         10*k1^6*(k2^6 + k2^4*k3^2 + k2^2*k3^4 + k3^6) + 
         k1^2*(k2^2 - k3^2)^2*(5*k2^6 + 23*k2^4*k3^2 + 23*k2^2*k3^4 + 
           5*k3^6) - (k2^2 - k3^2)^2*(k2^8 + 6*k2^6*k3^2 + 6*k2^2*k3^6 + 
           k3^8) - 2*k1^4*(5*k2^8 + 8*k2^6*k3^2 - k2^4*k3^4 + 8*k2^2*k3^6 + 
           5*k3^8)) + k2^2*k3^2*(f1*(8*k1^8 - 3*k1^6*(k2^2 + k3^2) - 
           k1^2*(k2^2 - k3^2)^2*(k2^2 + k3^2) + 
           k1^4*(-11*k2^4 + 2*k2^2*k3^2 - 11*k3^4) + 7*(k2^4 - k3^4)^2) + 
         14*Sqrt[2]*(c2 - c4)*(-1 + F^2)*(k1^6*(k2^2 + k3^2) + 
           3*k1^2*(k2^2 - k3^2)^2*(k2^2 + k3^2) - 3*k1^4*(k2^4 + k3^4) - 
           (k2^2 - k3^2)^2*(k2^4 + k3^4)))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(28*F^4*k1^3*k2^5*k3^6), 
 -1/224*(Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (35*b1^3*(-1 + F^2)^2*f1*k1^2*k2^2*(k1^2 - k2^2)*k3^4*
       (k1^2 + k2^2 - k3^2)^2 - 2*b1*f1*(14*f1^2*k1^2*k2^4*k3^4*
         (3*k1^4 - 5*(k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2)) - 
        (-1 + F^2)*f1*k2^2*(3*k1^10*(k2^2 - 2*k3^2) + 5*(k2^2 - k3^2)^4*
           (3*k2^4 + 3*k2^2*k3^2 + 8*k3^4) + k1^8*(-21*k2^4 + 3*k2^2*k3^2 + 
            60*k3^4) + k1^6*(30*k2^6 + 48*k2^4*k3^2 + 32*k2^2*k3^4 - 
            72*k3^6) - k1^2*(k2^2 - k3^2)^2*(33*k2^6 - 12*k2^4*k3^2 - 
            85*k2^2*k3^4 + 50*k3^6) + 2*k1^4*(3*k2^8 - 39*k2^6*k3^2 + 
            61*k2^4*k3^4 - 67*k2^2*k3^6 + 14*k3^8)) + Sqrt[2]*(c2 + c4)*
         (-1 + F^2)^2*k3^4*(5*k1^10 + k1^8*(3*k2^2 - 25*k3^2) + 
          5*(k2^2 - k3^2)^3*(k2^4 - 4*k2^2*k3^2 + k3^4) + 
          k1^6*(-4*k2^4 - 44*k2^2*k3^2 + 50*k3^4) + 
          2*k1^4*(8*k2^6 - 40*k2^4*k3^2 + 57*k2^2*k3^4 - 25*k3^6) + 
          k1^2*(23*k2^8 - 112*k2^6*k3^2 + 172*k2^4*k3^4 - 108*k2^2*k3^6 + 
            25*k3^8))) + b1^2*(-1 + F^2)*(16*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*
         k1^2*k2^4*k3^6*(k2^2 - k3^2) - 56*f1^2*k1^2*k2^2*k3^4*
         (k1^4*(6*k2^2 - 5*k3^2) - 5*(-(k2^2*k3) + k3^3)^2 + 
          2*k1^2*(3*k2^4 - 9*k2^2*k3^2 + 5*k3^4)) + (-1 + F^2)*f1*
         (-30*k2^4*(k2^2 - k3^2)^3*(k2^4 + 2*k2^2*k3^2 - k3^4) + 
          k1^10*(6*k2^4 - 15*k2^2*k3^2 + 70*k3^4) + 
          k1^8*(18*k2^6 + 6*k2^4*k3^2 + 95*k2^2*k3^4 - 280*k3^6) + 
          k1^2*(k2^2 - k3^2)^2*(54*k2^8 - 75*k2^6*k3^2 - 37*k2^4*k3^4 - 
            190*k2^2*k3^6 + 70*k3^8) + k1^6*(-60*k2^8 + 150*k2^6*k3^2 - 
            117*k2^4*k3^4 - 475*k2^2*k3^6 + 420*k3^8) + 
          k1^4*(12*k2^10 - 36*k2^8*k3^2 - 143*k2^6*k3^4 - 390*k2^4*k3^6 + 
            725*k2^2*k3^8 - 280*k3^10))) - 8*f1^2*k1^2*k2^2*k3^2*
       (-(f1*k2^2*(k2^2 - k3^2)*(3*k1^4 + 3*k2^4 + k2^2*k3^2 - 4*k3^4 + 
           k1^2*(-6*k2^2 + k3^2))) + 4*(-1 + F^2)*k3^2*(k1^2 + k2^2 - k3^2)*
         ((7*(c2 - c4)*k1^2*k2^2)/Sqrt[2] + 
          ((c2 + c4)*(k1^4 + k1^2*(6*k2^2 - 2*k3^2) + (k2^2 - k3^2)^2))/
           Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^6*k1^7*k2^7*k3^4) - 
  (Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*(k1^4 + (k2^2 - k3^2)^2 - 
     2*k1^2*(k2^2 + k3^2))*(35*b1^3*(-1 + F^2)^2*f1*k1^2*k3^4*
      (3*k1^2 + 4*k2^2 - 3*k3^2)*(k1^2 + k2^2 - k3^2)^2 + 
     b1^2*(-1 + F^2)*(16*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k2^6*k3^2*
        (k2^2 - k3^2) - 56*f1^2*k1^2*k2^4*(k1^4*(5*k2^2 - 6*k3^2) + 
         5*(k2^3 - k2*k3^2)^2 - 2*k1^2*(5*k2^4 - 9*k2^2*k3^2 + 3*k3^4)) - 
       (-1 + F^2)*f1*(41*k1^10*k3^2 + k1^8*(-140*k2^4 + 111*k2^2*k3^2 - 
           42*k3^4) - 110*k3^2*(k2^2 - k3^2)^3*(k2^4 + 2*k2^2*k3^2 - k3^4) + 
         k1^6*(140*k2^6 - 187*k2^4*k3^2 + 115*k2^2*k3^4 - 150*k3^6) - 
         k1^2*(k2^2 - k3^2)^2*(140*k2^6 - 118*k2^4*k3^2 + 265*k2^2*k3^4 - 
           109*k3^6) + k1^4*(140*k2^8 - 645*k2^6*k3^2 + 582*k2^4*k3^4 - 
           341*k2^2*k3^6 + 152*k3^8))) + 8*f1^2*k1^2*k2^2*
      (2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*k2^2*(k1^6 - (k2^2 - k3^2)^3 + 
         k1^4*(-3*k2^2 + 7*k3^2) + k1^2*(3*k2^4 - 10*k2^2*k3^2 + 7*k3^4)) + 
       k3^2*(14*Sqrt[2]*(c2 - c4)*(-1 + F^2)*k1^2*k2^2*(k1^2 - k2^2 + k3^2) + 
         f1*(k2^2 - k3^2)*(3*k1^4 - 4*k2^4 + k2^2*k3^2 + 3*k3^4 + 
           k1^2*(k2^2 - 6*k3^2)))) + 
     2*b1*f1*(14*f1^2*k1^2*k2^4*k3^2*(3*k1^4 - 5*(k2^2 - k3^2)^2 - 
         2*k1^2*(k2^2 + k3^2)) + (-1 + F^2)*f1*(k1^10*(6*k2^2 - 3*k3^2) - 
         3*k1^8*(20*k2^4 + k2^2*k3^2 - 7*k3^4) - 5*(k2^2 - k3^2)^4*
          (8*k2^4 + 3*k2^2*k3^2 + 3*k3^4) + k1^6*(72*k2^6 - 32*k2^4*k3^2 - 
           48*k2^2*k3^4 - 30*k3^6) + k1^2*(k2^2 - k3^2)^2*
          (50*k2^6 - 85*k2^4*k3^2 - 12*k2^2*k3^4 + 33*k3^6) - 
         2*k1^4*(14*k2^8 - 67*k2^6*k3^2 + 61*k2^4*k3^4 - 39*k2^2*k3^6 + 
           3*k3^8)) + (-1 + F^2)^2*(35*Sqrt[2]*(c2 - c4)*k1^2*k3^4*
          (k1^2 + 2*k2^2 - 2*k3^2)*(k1^2 + k2^2 - k3^2)^2 + 
         ((c2 + c4)*(5*k1^10*k3^2 + k1^8*(-24*k2^4 + 10*k2^2*k3^2 + 
              40*k3^4) + k1^6*(32*k2^6 - 58*k2^4*k3^2 + 240*k2^2*k3^4 - 
              210*k3^6) + 10*(k2^2 - k3^2)^3*(4*k2^6 + k2^4*k3^2 - 
              4*k2^2*k3^4 + k3^6) + 2*k1^4*(24*k2^8 - 70*k2^6*k3^2 + 
              201*k2^4*k3^4 - 290*k2^2*k3^6 + 135*k3^8) - 
            k1^2*(96*k2^10 - 309*k2^8*k3^2 + 244*k2^6*k3^4 + 134*k2^4*k3^6 - 
              260*k2^2*k3^8 + 95*k3^10)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(224*F^6*k1^7*k2^3*k3^6) + 
  (Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*(k1^4 + (k2^2 - k3^2)^2 - 
     2*k1^2*(k2^2 + k3^2))*(35*b1^3*(-1 + F^2)^2*f1*k1^2*k2^2*k3^4*
      (k1^2 + k2^2 - k3^2)^2*(k2^2 + k3^2) - b1^2*(-1 + F^2)*
      (16*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^6*k2^4*k3^2*(k2^2 - k3^2) + 
       56*f1^2*k1^2*k2^2*(k2^2 - k3^2)*(k1^4*(5*k2^4 + 3*k2^2*k3^2 + 
           5*k3^4) - 2*k1^2*(5*k2^6 - 2*k2^4*k3^2 - 2*k2^2*k3^4 + 5*k3^6) + 
         5*(k2^8 - k2^6*k3^2 - k2^2*k3^6 + k3^8)) + 
       (-1 + F^2)*f1*(35*k1^8*k3^2*(k2^4 + k2^2*k3^2 - 2*k3^4) - 
         5*k1^6*(28*k2^8 - 9*k2^6*k3^2 + 30*k2^4*k3^4 + 35*k2^2*k3^6 - 
           56*k3^8) - 70*(k2^2 - k3^2)^3*(2*k2^8 + 2*k2^6*k3^2 + 
           3*k2^4*k3^4 + 2*k2^2*k3^6 - k3^8) + 
         7*k1^4*(20*k2^10 - 9*k2^8*k3^2 - 85*k2^6*k3^4 + 49*k2^4*k3^6 + 
           85*k2^2*k3^8 - 60*k3^10) + k1^2*(140*k2^12 - 689*k2^10*k3^2 + 
           444*k2^8*k3^4 + 326*k2^6*k3^6 + 304*k2^4*k3^8 - 805*k2^2*k3^10 + 
           280*k3^12))) + 8*f1^2*k2^2*(k2^2 - k3^2)*
      (((c2 + c4)*(-1 + F^2)*(k1^10 - 3*k1^8*(k2^2 + k3^2) + 
          k1^6*(-2*k2^4 + 15*k2^2*k3^2 - 2*k3^4) - 15*k1^2*(k2^2 - k3^2)^2*
           (k2^4 + 3*k2^2*k3^2 + k3^4) + 5*(k2^2 - k3^2)^2*
           (k2^6 + 6*k2^4*k3^2 + 6*k2^2*k3^4 + k3^6) + 
          k1^4*(14*k2^6 - 17*k2^4*k3^2 - 17*k2^2*k3^4 + 14*k3^6)))/Sqrt[2] + 
       k2^2*k3^2*(f1*k1^2*(4*k1^4 - 3*(k2^2 - k3^2)^2 - k1^2*(k2^2 + k3^2)) + 
         (7*(c2 - c4)*(-1 + F^2)*(k1^6 - 5*k1^2*(k2^2 - k3^2)^2 - 
            k1^4*(k2^2 + k3^2) + 5*(k2^2 - k3^2)^2*(k2^2 + k3^2)))/
          Sqrt[2])) + 2*b1*f1*(((c2 + c4)*(-1 + F^2)^2*
         (k1^10*(4*k2^4 - 9*k2^2*k3^2 + 10*k3^4) + 
          k1^8*(28*k2^6 + 22*k2^2*k3^4 - 50*k3^6) - 
          2*k1^6*(44*k2^8 - 41*k2^6*k3^2 + 51*k2^4*k3^4 + 31*k2^2*k3^6 - 
            50*k3^8) - 10*(k2^2 - k3^2)^3*(2*k2^8 + 2*k2^6*k3^2 + 
            13*k2^4*k3^4 + 2*k2^2*k3^6 - k3^8) + 5*k1^2*(k2^2 - k3^2)^2*
           (4*k2^8 - 13*k2^6*k3^2 - 62*k2^4*k3^4 - 9*k2^2*k3^6 + 10*k3^8) + 
          4*k1^4*(14*k2^10 - 6*k2^8*k3^2 - 80*k2^6*k3^4 + 61*k2^4*k3^6 + 
            36*k2^2*k3^8 - 25*k3^10)))/Sqrt[2] - 
       2*k2^2*((35*(c2 - c4)*(-1 + F^2)^2*k2^2*k3^4*(k1^2 + 2*k2^2 - 2*k3^2)*
           (k1^2 + k2^2 - k3^2)^2)/Sqrt[2] - 7*f1^2*k1^2*k2^2*k3^2*
          (k2^2 - k3^2)*(3*k1^4 - 5*(k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2)) + 
         (-1 + F^2)*f1*(k2^2 - k3^2)*(9*k1^8*(k2^2 + k3^2) - 
           k1^6*(6*k2^4 + k2^2*k3^2 + 6*k3^4) - k1^2*(k2^2 - k3^2)^2*
            (58*k2^4 + 93*k2^2*k3^2 + 58*k3^4) + 
           4*k1^4*(5*k2^6 - 6*k2^4*k3^2 - 6*k2^2*k3^4 + 5*k3^6) + 
           35*(k2^10 - k2^8*k3^2 - k2^2*k3^8 + k3^10)))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(224*F^6*k1^5*k2^7*k3^6), 
 -1/1792*(f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
     (28*b1^3*(-1 + F^2)^3*k1^4*k2^4*k3^4 + b1^2*(-1 + F^2)^2*
       (3*(-1 + F^2)*k1^10*k2^2 + 336*(-1 + F^2)*k2^6*(k2^2 - k3^2)^3 + 
        k1^8*(60*(-1 + F^2)*k2^4 - 66*(-1 + F^2)*k2^2*k3^2 + 
          49*(-4 + 4*F^2 - 9*f1)*k3^4) + k1^6*(66*(-1 + F^2)*k2^6 - 
          162*(-1 + F^2)*k2^4*k3^2 + (-67 + 67*F^2 - 56*f1)*k2^2*k3^4 + 
          882*f1*k3^6) + k1^2*(k2^2 - k3^2)*(51*(-1 + F^2)*k2^8 + 
          501*(-1 + F^2)*k2^6*k3^2 + 2*(358 - 358*F^2 + 441*f1)*k2^4*k3^4 + 
          14*(-50 + 50*F^2 - 63*f1)*k2^2*k3^6 - 392*(-1 + F^2)*k3^8) + 
        k1^4*(-420*(-1 + F^2)*k2^8 + 882*(-1 + F^2)*k2^6*k3^2 + 
          (730 - 730*F^2 + 1127*f1)*k2^4*k3^4 + 2*(-544 + 544*F^2 - 441*f1)*
           k2^2*k3^6 - 147*(-4 + 4*F^2 + 3*f1)*k3^8)) + 
      8*f1*k1^2*(-14*f1^2*k1^2*k2^4*k3^4 + Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*
         k3^4*(3*k1^6 + k1^4*(7*k2^2 - 9*k3^2) + 
          k1^2*(11*k2^4 - 22*k2^2*k3^2 + 9*k3^4) + 
          3*(k2^6 - 5*k2^4*k3^2 + 5*k2^2*k3^4 - k3^6)) + 
        (-1 + F^2)*f1*k2^2*(3*k1^6*(k2^2 - 2*k3^2) - 3*(k2^2 - k3^2)^2*
           (3*k2^4 + 3*k2^2*k3^2 + 8*k3^4) + k1^4*(-15*k2^4 - 3*k2^2*k3^2 + 
            16*k3^4) + 7*k1^2*(3*k2^6 - 3*k2^2*k3^4 + 2*k3^6))) + 
      b1*(-1 + F^2)*(56*f1^2*k1^2*k2^2*k3^4*(7*k1^4 - 21*(k2^2 - k3^2)^2 + 
          6*k1^2*(-2*k2^2 + k3^2)) + 8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k3^4*
         (-4*k1^8 + k1^6*(3*k2^2 - 2*k3^2) + 14*k3^2*(-k2^2 + k3^2)^3 + 
          k1^4*(20*k2^4 - 52*k2^2*k3^2 + 30*k3^4) + 
          k1^2*(17*k2^6 - 78*k2^4*k3^2 + 99*k2^2*k3^4 - 38*k3^6)) + 
        (-1 + F^2)*f1*(117*k1^10*k3^2 + 336*k2^2*k3^2*(k2^2 - k3^2)^3*
           (2*k2^2 - k3^2) + 3*k1^8*(48*k2^4 - 24*k2^2*k3^2 - 145*k3^4) + 
          k1^6*(-144*k2^6 - 726*k2^4*k3^2 + 613*k2^2*k3^4 + 267*k3^6) + 
          k1^4*(-336*k2^8 + 288*k2^6*k3^2 + 1775*k2^4*k3^4 - 1686*k2^2*k3^6 + 
            303*k3^8) + 3*k1^2*(112*k2^10 - 29*k2^8*k3^2 + 21*k2^6*k3^4 - 
            439*k2^4*k3^6 + 419*k2^2*k3^8 - 84*k3^10))))*
     Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^8*k1^9*k2^7*k3^4) + 
  (f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (-7*b1^3*(-1 + F^2)^3*k1^2*k2^2*k3^2*(9*k1^6 - 30*k1^4*(k2^2 - k3^2) - 
       112*(k2^2 - k3^2)^3 + k1^2*(-147*k2^4 + 294*k2^2*k3^2 - 151*k3^4)) + 
     b1^2*(-1 + F^2)^2*k2^2*(70*(-1 + F^2)*k1^10 + 1232*(-1 + F^2)*k2^2*k3^2*
        (k2^2 - k3^2)^3 + k1^8*(-238*(-1 + F^2)*k2^2 + 
         (-274 + 274*F^2 + 147*f1)*k3^2) + k1^6*(-966*(-1 + F^2)*k2^4 + 
         (-1727 + 1727*F^2 + 2478*f1)*k2^2*k3^2 - 6*(-145 + 145*F^2 + 84*f1)*
          k3^4) + k1^2*(k2^2 - k3^2)*(1568*(-1 + F^2)*k2^6 + 
         (2305 - 2305*F^2 + 3136*f1)*k2^4*k3^2 + (-2369 + 2369*F^2 - 3626*f1)*
          k2^2*k3^4 + 2*(552 - 552*F^2 + 245*f1)*k3^6) + 
       k1^4*(686*(-1 + F^2)*k2^6 - 7*(-204 + 204*F^2 - 745*f1)*k2^4*k3^2 + 
         42*(-32 + 32*F^2 - 149*f1)*k2^2*k3^4 + (370 - 370*F^2 + 847*f1)*
          k3^6)) - b1*(-1 + F^2)*(-56*f1^2*k1^2*k2^6*
        (7*k1^4 + 6*k1^2*(k2^2 - 2*k3^2) - 21*(k2^2 - k3^2)^2) + 
       14*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k1^2*k2^2*k3^2*
        (5*k1^6 - 6*k1^4*(k2^2 - k3^2) - 63*k1^2*(k2^2 - k3^2)^2 - 
         56*(k2^2 - k3^2)^3) + 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*
        (5*k1^10 - 56*k2^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^3 + 
         k1^8*(-28*k2^2 + 46*k3^2) + k1^6*(-58*k2^4 + 103*k2^2*k3^2 - 
           39*k3^4) + 4*k1^4*(47*k2^6 - 172*k2^4*k3^2 + 210*k2^2*k3^4 - 
           83*k3^6) + k1^2*(29*k2^8 - 573*k2^6*k3^2 + 1383*k2^4*k3^4 - 
           1187*k2^2*k3^6 + 348*k3^8)) + (-1 + F^2)*f1*
        (147*k1^10*k3^2 + k1^8*(96*k2^4 + 685*k2^2*k3^2 - 924*k3^4) - 
         112*(k2^2 - k3^2)^3*(4*k2^6 + 12*k2^4*k3^2 - 2*k2^2*k3^4 - 3*k3^6) + 
         k1^6*(256*k2^6 + 489*k2^4*k3^2 - 2877*k2^2*k3^4 + 2226*k3^6) - 
         k1^4*(544*k2^8 + 69*k2^6*k3^2 + 2346*k2^4*k3^4 - 5219*k2^2*k3^6 + 
           2604*k3^8) + k1^2*(192*k2^10 - 2788*k2^8*k3^2 + 3531*k2^6*k3^4 + 
           1497*k2^4*k3^6 - 3923*k2^2*k3^8 + 1491*k3^10))) + 
     8*f1*k1^2*k2^2*(-14*f1^2*k1^2*k2^4*k3^2 - (-1 + F^2)*f1*
        (k1^6*(6*k2^2 - 3*k3^2) + 3*(k2^2 - k3^2)^2*(8*k2^4 + 3*k2^2*k3^2 + 
           3*k3^4) + k1^4*(-16*k2^4 + 3*k2^2*k3^2 + 15*k3^4) - 
         7*k1^2*(2*k2^6 - 3*k2^4*k3^2 + 3*k3^6)) + 
       (-1 + F^2)^2*(7*Sqrt[2]*(c2 - c4)*k1^2*k3^4*(5*k1^2 + 6*k2^2 - 
           6*k3^2) + ((c2 + c4)*(5*k1^6*k3^2 + 2*k1^4*(4*k2^4 - 6*k2^2*k3^2 + 
              27*k3^4) + k1^2*(-32*k2^6 + 17*k2^4*k3^2 + 78*k2^2*k3^4 - 
              67*k3^6) + 6*(4*k2^8 - 3*k2^6*k3^2 - 5*k2^4*k3^4 + 
              5*k2^2*k3^6 - k3^8)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(1792*F^8*k1^9*k2^5*k3^6) + 
  (f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (-7*b1^3*(-1 + F^2)^3*k1^2*k2^4*k3^2*(k1^4 + 18*k1^2*(k2^2 - k3^2) + 
       21*(k2^2 - k3^2)^2) - 7*b1^2*(-1 + F^2)^2*
      ((-1 + F^2)*k1^8*k2^2*(10*k2^2 - k3^2) + 56*(-1 + F^2)*(k2^2 - k3^2)^3*
        (4*k2^6 + 3*k2^4*k3^2 + k3^6) - 3*k1^4*(k2^2 - k3^2)*
        (46*(-1 + F^2)*k2^6 + (39 - 39*F^2 - 46*f1)*k2^4*k3^2 - 
         7*(-1 + F^2)*k2^2*k3^4 - 42*f1*k3^6) + 7*k1^2*(k2^2 - k3^2)^2*
        (14*(-1 + F^2)*k2^6 + (-46 + 46*F^2 + 27*f1)*k2^4*k3^2 + 
         3*(-4 + 4*F^2 + 3*f1)*k3^6) + k1^6*(-34*(-1 + F^2)*k2^6 + 
         57*f1*k2^4*k3^2 + 2*(-11 + 11*F^2 + 4*f1)*k2^2*k3^4 + 
         7*(4 - 4*F^2 + 9*f1)*k3^6)) + b1*(-1 + F^2)*
      (14*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k2^4*k3^2*
        (-5*k1^6 + 6*k1^4*(k2^2 - k3^2) + 63*k1^2*(k2^2 - k3^2)^2 + 
         56*(k2^2 - k3^2)^3) - 56*f1^2*k1^2*k2^2*(k2^2 - k3^2)*
        (7*k1^4*(k2^2 + k3^2) - 21*(k2^2 - k3^2)^2*(k2^2 + k3^2) + 
         6*k1^2*(k2^4 - 3*k2^2*k3^2 + k3^4)) + 2*Sqrt[2]*(c2 + c4)*
        (-1 + F^2)^2*(k1^10*(k2^2 + 2*k3^2) + k1^8*(12*k2^4 - 19*k2^2*k3^2 + 
           36*k3^4) + k1^6*(46*k2^6 - 102*k2^4*k3^2 + 103*k2^2*k3^4 - 
           92*k3^6) - 7*k1^2*(k2^2 - k3^2)^2*(k2^6 - 76*k2^4*k3^2 - 6*k3^6) + 
         28*(k2^2 - k3^2)^3*(4*k2^6 + 13*k2^4*k3^2 + k3^6) + 
         k1^4*(-132*k2^8 + 233*k2^6*k3^2 - 24*k2^4*k3^4 - 117*k2^2*k3^6 + 
           40*k3^8)) + (-1 + F^2)*f1*(-784*k2^2*k3^2*(k2^2 - k3^2)^3*
          (k2^2 + 2*k3^2) + k1^8*(64*k2^4 + 295*k2^2*k3^2 + 177*k3^4) + 
         k1^6*(32*k2^6 + 1037*k2^4*k3^2 - 1574*k2^2*k3^4 - 867*k3^6) + 
         3*k1^4*(128*k2^8 - 245*k2^6*k3^2 - 1245*k2^4*k3^4 + 961*k2^2*k3^6 + 
           401*k3^8) - k1^2*(928*k2^10 + 1029*k2^8*k3^2 - 804*k2^6*k3^4 - 
           4390*k2^4*k3^6 + 2724*k2^2*k3^8 + 513*k3^10))) + 
     2*f1*(((c2 + c4)*(-1 + F^2)^2*(39*k1^10*k3^2 - 448*k2^2*k3^2*
           (k2^2 - 3*k3^2)*(k2^2 - k3^2)^3 + 4*k1^8*(16*k2^4 - 15*k2^2*k3^2 - 
            45*k3^4) + 7*k1^2*(k2^2 - k3^2)^2*(32*k2^6 + 37*k2^4*k3^2 + 
            468*k2^2*k3^4 + 9*k3^6) + k1^6*(32*k2^6 - 298*k2^4*k3^2 + 
            646*k2^2*k3^4 + 306*k3^6) - 4*k1^4*(80*k2^8 - 183*k2^6*k3^2 - 
            552*k2^4*k3^4 + 598*k2^2*k3^6 + 57*k3^8)))/Sqrt[2] + 
       2*k2^2*(84*f1^2*k1^4*k2^2*k3^2*(k2^2 - k3^2) + 4*(-1 + F^2)*f1*k1^2*
          (k2^2 - k3^2)*(4*k1^6 + 3*k1^2*k2^2*k3^2 - 13*k1^4*(k2^2 + k3^2) + 
           9*(k2^2 - k3^2)^2*(k2^2 + k3^2)) + (7*(c2 - c4)*(-1 + F^2)^2*k3^2*
           (49*k1^6*k3^2 - 56*(k2^2 - 2*k3^2)*(k2^2 - k3^2)^3 + 
            273*k1^2*(-(k2^2*k3) + k3^3)^2 + 6*k1^4*(4*k2^4 + 31*k2^2*k3^2 - 
              35*k3^4)))/Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(1792*F^8*k1^7*k2^7*k3^6), 
 ((-1 + F^2)*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (-(b1^2*(-1 + F^2)^2*k1^2*k2^2*(3*(-1 + F^2)*k1^6 - 
        48*(-1 + F^2)*k2^4*(k2^2 - k3^2) + k1^2*(-15*(-1 + F^2)*k2^4 - 
          2*(-2 + 2*F^2 + 21*f1)*k3^4))) + 
     f1*k1^2*(-56*f1^2*k1^2*k2^2*k3^4 + 8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k3^4*
        (k1^2 + 2*k2^2 - 2*k3^2)*(k1^2 - k3^2) + (-1 + F^2)*f1*
        (9*k1^6*k3^2 + 48*k2^2*k3^2*(2*k2^4 - 3*k2^2*k3^2 + k3^4) + 
         k1^4*(-48*k2^4 - 30*k2^2*k3^2 + 3*k3^4) + 
         k1^2*(48*k2^6 - 75*k2^4*k3^2 + 109*k2^2*k3^4 - 12*k3^6))) + 
     b1*(-1 + F^2)*(-8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^6*
        (k1^2 + 2*k2^2 - 2*k3^2) + 7*f1^2*k1^2*k3^4*
        (39*k1^4 + k1^2*(88*k2^2 - 90*k3^2) + 45*(k2^2 - k3^2)^2) + 
       (-1 + F^2)*f1*(6*k1^10 + k1^8*(81*k2^2 - 75*k3^2) + 
         360*k2^4*(k2^2 - k3^2)^3 + k1^6*(-39*k2^4 - 78*k2^2*k3^2 + 
           61*k3^4) - k1^4*(453*k2^6 - 1023*k2^4*k3^2 + 437*k2^2*k3^4 + 
           44*k3^6) + 3*k1^2*(31*k2^8 + 106*k2^6*k3^2 - 237*k2^4*k3^4 + 
           64*k2^2*k3^6 + 36*k3^8))))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(1792*F^10*k1^11*k2^7*k3^4) + 
  ((-1 + F^2)*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (-(b1^2*(-1 + F^2)^2*k1^2*k2^2*(42*(-1 + F^2 - 5*f1)*k1^6 + 
        28*k1^4*((-4 + 4*F^2 - 7*f1)*k2^2 - 4*(-1 + F^2 - 3*f1)*k3^2) + 
        2*(k2^2 - k3^2)*(88*(-1 + F^2)*k2^2*k3^2 + 
          21*f1*(80*k2^4 - 133*k2^2*k3^2 + 53*k3^4)) + 
        k1^2*(67*(-1 + F^2)*k2^2*k3^2 + 14*f1*(189*k2^4 - 304*k2^2*k3^2 + 
            124*k3^4)))) + b1*(-1 + F^2)*
      (-7*f1^2*k1^2*k2^2*(97*k1^4*k3^2 + 225*(-(k2^2*k3) + k3^3)^2 + 
         k1^2*(-8*k2^4 + 322*k2^2*k3^2 - 304*k3^4)) + 
       2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k2^2*
        (3*k1^6 + 8*k1^4*(k2^2 - k3^2) + k1^2*(-7*k2^4 + 5*k2^2*k3^2) - 
         8*(3*k2^6 - 5*k2^4*k3^2 + 2*k2^2*k3^4)) - 
       (-1 + F^2)*f1*(12*k1^10 - 3*k1^8*(54*k2^2 - 53*k3^2) + 
         120*k2^2*(k2^2 - k3^2)^3*(12*k2^2 - k3^2) - 
         2*k1^6*(350*k2^4 - 658*k2^2*k3^2 + 333*k3^4) + 
         k1^4*(-230*k2^6 + 1763*k2^4*k3^2 - 2203*k2^2*k3^4 + 807*k3^6) + 
         k1^2*(1336*k2^8 - 1775*k2^6*k3^2 - 418*k2^4*k3^4 + 1169*k2^2*k3^6 - 
           312*k3^8))) + f1*k1^2*(56*f1^2*k1^2*k2^6 - 
       14*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k1^2*k2^2*k3^2*
        (3*k1^2 + 8*k2^2 - 8*k3^2) - 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*
        (3*k1^6 - 2*k1^4*(k2^2 - 5*k3^2) + k1^2*(-25*k2^4 + 75*k2^2*k3^2 - 
           48*k3^4) + 8*(3*k2^6 - 5*k2^4*k3^2 + 2*k2^2*k3^4)) + 
       (-1 + F^2)*f1*(39*k1^6*k3^2 + k1^4*(-48*k2^4 + 119*k2^2*k3^2 - 
           126*k3^4) + k1^2*(-52*k2^4*k3^2 - 153*k2^2*k3^4 + 135*k3^6) - 
         16*(4*k2^8 + 8*k2^6*k3^2 - 14*k2^4*k3^4 - k2^2*k3^6 + 3*k3^8))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(1792*F^10*k1^11*k2^5*k3^6) - 
  ((-1 + F^2)*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (-7*b1^2*(-1 + F^2)^2*k1^2*k2^2*(4*(-4 + 4*F^2 + 21*f1)*k1^2*k2^2*
        (k2^2 - k3^2) + k1^4*(6*(-1 + F^2 - f1)*k2^2 + (-1 + F^2 + 2*f1)*
          k3^2) + 162*f1*(k2^3 - k2*k3^2)^2) - b1*(-1 + F^2)*f1*
      (840*(-1 + F^2)*k2^2*(k2^2 - k3^2)^3*(2*k2^2 + k3^2) + 
       2*(-1 + F^2)*k1^8*(10*k2^2 + k3^2) + 
       k1^6*((386 - 386*F^2 + 112*f1)*k2^4 + 5*(-50 + 50*F^2 + 77*f1)*k2^2*
          k3^2 + 13*(-11 + 11*F^2 - 21*f1)*k3^4) + 3*k1^2*(k2^2 - k3^2)*
        (2*(-191 + 191*F^2 - 84*f1)*k2^6 + 3*(-100 + 100*F^2 + 217*f1)*k2^4*
          k3^2 - 14*(-47 + 47*F^2 + 42*f1)*k2^2*k3^4 + (-8 + 8*F^2 + 105*f1)*
          k3^6) + k1^4*(-4*(-223 + 223*F^2 + 28*f1)*k2^6 + 
         (-2169 + 2169*F^2 + 1442*f1)*k2^4*k3^2 - 56*(-19 + 19*F^2 + 35*f1)*
          k2^2*k3^4 + 3*(59 - 59*F^2 + 210*f1)*k3^6)) + 
     2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*
      (-(b1*(-1 + F^2)*k1^4*(2*k1^4*(k2^2 - 2*k3^2) + 
          16*k2^4*(-k2^2 + k3^2) + k1^2*(-6*k2^4 - 9*k2^2*k3^2 + 8*k3^4))) + 
       f1*(2*k1^10 + k1^8*(26*k2^2 - 27*k3^2) + 120*k2^2*(k2^2 - k3^2)^3*
          (k2^2 + 3*k3^2) + 3*k1^2*(5*k2^2 + 202*k3^2)*(k2^3 - k2*k3^2)^2 + 
         k1^6*(9*k2^4 - 63*k2^2*k3^2 + 52*k3^4) - 
         3*k1^4*(52*k2^6 - 141*k2^4*k3^2 + 80*k2^2*k3^4 + 9*k3^6))) + 
     f1*(14*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k2^2*k3^2*
        (-2*k1^6 + 22*k1^4*(k2^2 - k3^2) + 81*k1^2*(k2^2 - k3^2)^2 + 
         60*(k2^2 - k3^2)^3) - 56*f1^2*k1^4*k2^2*(k2^2 - k3^2)*
        (k1^2 - 4*(k2^2 + k3^2)) + (-1 + F^2)*f1*k1^2*
        (12*k1^6*k3^2 + k1^4*(-128*k2^4 + 115*k2^2*k3^2 - 3*k3^4) + 
         k1^2*(16*k2^6 - 85*k2^4*k3^2 + 78*k2^2*k3^4 - 9*k3^6) - 
         48*(3*k2^6*k3^2 - 5*k2^4*k3^4 + 2*k2^2*k3^6))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(1792*F^10*k1^9*k2^7*k3^6), 
 ((-1 + F^2)^2*f1^2*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^4*
    (b1*(-1 + F^2)*(9*(-1 + F^2)*k1^6 - 120*(-1 + F^2)*k2^4*(k2^2 - k3^2) + 
       k1^2*(-45*(-1 + F^2)*k2^4 + (12 - 12*F^2 - 35*f1)*k3^4)) + 
     f1*(-9*(-1 + F^2)*k1^6 + 54*(-1 + F^2)*k1^4*k2^2 - 
       120*(-1 + F^2)*k2^4*(k2^2 - k3^2) + k1^2*(75*(-1 + F^2)*k2^4 - 
         120*(-1 + F^2)*k2^2*k3^2 + (12 - 12*F^2 - 35*f1)*k3^4)))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(7168*F^12*k1^11*k2^7*k3^4) + 
  ((-1 + F^2)^2*f1^2*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^4*
    (252*b1^2*(-1 + F^2)^2*k1^2*k2^2*k3^2 + b1*(-1 + F^2)*
      (108*(-1 + F^2)*k1^6 + k1^4*((-240 + 240*F^2 + 637*f1)*k2^2 - 
         240*(-1 + F^2)*k3^2) + 5*k2^2*(k2^2 - k3^2)*
        ((-192 + 192*F^2 + 1925*f1)*k2^2 + (16 - 16*F^2 - 1925*f1)*k3^2) + 
       k1^2*(42*(-8 + 8*F^2 + 185*f1)*k2^4 - 2*(-15 + 15*F^2 + 3584*f1)*k2^2*
          k3^2)) - 2*f1*(54*(-1 + F^2)*k1^6 + 6*(-1 + F^2)*k1^4*
        (25*k2^2 - 29*k3^2) - 40*(-1 + F^2)*k2^2*(12*k2^4 - 13*k2^2*k3^2 + 
         k3^4) + k1^2*(-88*(-1 + F^2)*k2^4 - 5*(-37 + 37*F^2 + 35*f1)*k2^2*
          k3^2 + 120*(-1 + F^2)*k3^4)))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(14336*F^12*k1^11*k2^5*k3^6) - 
  ((-1 + F^2)^2*f1^2*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^4*
    (140*f1^2*k1^2*(-16*k2^4 + 9*k1^2*k3^2 + 28*k2^2*k3^2 - 12*k3^4) + 
     8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*(6*k1^4 + 40*k2^2*(-k2^2 + k3^2) - 
       3*k1^2*(6*k2^2 + k3^2)) + 28*b1*(-1 + F^2)^2*k1^2*
      (3*k1^2*(6*k2^2 + k3^2) + 40*(k2^4 - k2^2*k3^2)) - 
     (-1 + F^2)*f1*(96*k1^6 - k1^4*(6*(12 + 217*b1)*k2^2 + 
         (12 - 497*b1)*k3^2) - 5*(k2^2 - k3^2)*(6*(32 + 385*b1)*k2^4 - 
         (96 + 2695*b1)*k2^2*k3^2 + 385*b1*k3^4) - 
       2*k1^2*(10*(26 + 511*b1)*k2^4 - (188 + 6335*b1)*k2^2*k3^2 + 
         1225*b1*k3^4)))*Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(28672*F^12*k1^9*k2^7*k3^6), 
 -1/224*((-7*b1^3*(-1 + F^2)*k1^2*k2^2*k3^4*((-3 + 3*F^2 - 2*f1)*k1^8 + 
        4*(-2 + 2*F^2 - f1)*k1^6*(k2^2 - k3^2) - (-1 + F^2 - 2*f1)*
         (k2^2 - k3^2)^4 + 2*k1^4*((-3 + 3*F^2 + 8*f1)*k2^4 - 
          6*(-1 + F^2)*k2^2*k3^2 + 3*(-1 + F^2)*k3^4) + 
        4*k1^2*(k2^2 - k3^2)*((-4 + 4*F^2 - 3*f1)*k2^4 - 2*f1*k2^2*k3^2 + 
          f1*k3^4)) - 8*f1^2*k1^2*k2^2*k3^4*(k1^2 + k2^2 - k3^2)^2*
       (7*Sqrt[2]*(c2 - c4)*k1^2*k2^2 + ((c2 + c4)*(k1^4 + (k2^2 - k3^2)^2 + 
           2*k1^2*(6*k2^2 - k3^2)))/Sqrt[2]) + 
      b1^2*(2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*k3^4*
         (k1^10 + k1^8*(4*k2^2 - 3*k3^2) + 2*k1^6*(k2^2 - k3^2)^2 - 
          3*k1^2*(k2^2 - k3^2)^4 + k3^2*(k2^2 - k3^2)^4 + 
          2*k1^4*(k2^2 - k3^2)^2*(6*k2^2 + k3^2)) + 14*f1^2*k1^2*k2^2*k3^4*
         (k1^8 + k1^6*(6*k2^2 - 2*k3^2) + 4*k1^4*k2^2*(-3*k2^2 + k3^2) + 
          (k2^2 - k3^2)^3*(3*k2^2 + k3^2) + 2*k1^2*(k2^6 + 3*k2^4*k3^2 - 
            5*k2^2*k3^4 + k3^6)) + (-1 + F^2)*f1*
         (k2^2*(k2^2 - k3^2)^5*(3*k2^4 + 11*k3^4) + 
          k1^12*(3*k2^4 + 3*k2^2*k3^2 + 14*k3^4) - 2*k1^2*(k2^2 - k3^2)^4*
           (9*k2^6 - 25*k2^2*k3^4 + 7*k3^6) - 2*k1^10*
           (9*k2^6 - 39*k2^2*k3^4 + 35*k3^6) + 5*k1^8*(9*k2^8 - 9*k2^6*k3^2 + 
            37*k2^4*k3^4 - 65*k2^2*k3^6 + 28*k3^8) - 
          4*k1^6*(15*k2^10 - 30*k2^8*k3^2 - 65*k2^6*k3^4 + 139*k2^4*k3^6 - 
            122*k2^2*k3^8 + 35*k3^10) + k1^4*(45*k2^12 - 135*k2^10*k3^2 + 
            376*k2^8*k3^4 - 614*k2^6*k3^6 + 597*k2^4*k3^8 - 339*k2^2*k3^10 + 
            70*k3^12))) + b1*f1*k3^2*
       (f1*k2^2*(3*k1^12 + (k2^2 - k3^2)^5*(3*k2^2 + 4*k3^2) + 
          k1^10*(6*k2^2 + 29*k3^2) + k1^8*(-51*k2^4 + 153*k2^2*k3^2 - 
            94*k3^4) + k1^2*(k2^2 - k3^2)^3*(6*k2^4 + 51*k2^2*k3^2 - k3^4) - 
          k1^4*(k2^2 - k3^2)^2*(51*k2^4 - 76*k2^2*k3^2 + 17*k3^4) + 
          k1^6*(84*k2^6 + 66*k2^4*k3^2 - 232*k2^2*k3^4 + 82*k3^6)) - 
        4*(-1 + F^2)*k3^2*((7*(c2 - c4)*k1^2*k2^2*(k1^8 + 
             4*k1^6*(k2^2 - k3^2) + 4*k1^2*(k2^2 - k3^2)^3 + 
             (k2^2 - k3^2)^4 + 2*k1^4*(11*k2^4 - 6*k2^2*k3^2 + 3*k3^4)))/
           Sqrt[2] + ((c2 + c4)*(k1^12 + k1^10*(11*k2^2 - 6*k3^2) + 
             5*k1^4*(7*k2^2 - 3*k3^2)*(k2^2 - k3^2)^3 + 
             k1^2*(11*k2^2 - 6*k3^2)*(k2^2 - k3^2)^4 + (k2^2 - k3^2)^6 + 
             5*k1^8*(7*k2^4 - 10*k2^2*k3^2 + 3*k3^4) + 
             10*k1^6*(13*k2^6 - 12*k2^4*k3^2 + 9*k2^2*k3^4 - 2*k3^6)))/
           Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^4*k1^6*k2^6*k3^4) + 
  ((8*f1^2*k1^2*k2^4*k3^2*(k1^2 - k2^2 + k3^2)^2*
      (7*Sqrt[2]*(c2 - c4)*k1^2*k3^2 + 
       ((c2 + c4)*(k1^4 - 2*k1^2*(k2^2 - 6*k3^2) + (k2^2 - k3^2)^2))/
        Sqrt[2]) + 7*b1^3*(-1 + F^2)*k1^2*k2^4*k3^2*
      ((-3 + 3*F^2 - 2*f1)*k1^8 - 4*(-2 + 2*F^2 - f1)*k1^6*(k2^2 - k3^2) - 
       (-1 + F^2 - 2*f1)*(k2^2 - k3^2)^4 + 2*k1^4*(3*(-1 + F^2)*k2^4 - 
         6*(-1 + F^2)*k2^2*k3^2 + (-3 + 3*F^2 + 8*f1)*k3^4) - 
       4*k1^2*(k2^2 - k3^2)*(4*(-1 + F^2)*k3^4 + 
         f1*(k2^4 - 2*k2^2*k3^2 - 3*k3^4))) - 
     b1^2*(2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^4*k3^2*
        (k1^10 + 2*k1^6*(k2^2 - k3^2)^2 - 3*k1^2*(k2^2 - k3^2)^4 + 
         k2^2*(k2^2 - k3^2)^4 + k1^8*(-3*k2^2 + 4*k3^2) + 
         2*k1^4*(k2^2 - k3^2)^2*(k2^2 + 6*k3^2)) + 14*f1^2*k1^2*k2^4*k3^2*
        (k1^8 - 2*k1^6*(k2^2 - 3*k3^2) + 4*k1^4*k3^2*(k2^2 - 3*k3^2) - 
         (k2^2 - k3^2)^3*(k2^2 + 3*k3^2) + 2*k1^2*(k2^6 - 5*k2^4*k3^2 + 
           3*k2^2*k3^4 + k3^6)) + (-1 + F^2)*f1*
        (k3^2*(-k2^2 + k3^2)^5*(11*k2^4 + 3*k3^4) + 
         k1^12*(14*k2^4 + 3*k2^2*k3^2 + 3*k3^4) - 
         2*k1^10*(35*k2^6 - 39*k2^4*k3^2 + 9*k3^6) - 2*k1^2*(k2^2 - k3^2)^4*
          (7*k2^6 - 25*k2^4*k3^2 + 9*k3^6) + 5*k1^8*(28*k2^8 - 65*k2^6*k3^2 + 
           37*k2^4*k3^4 - 9*k2^2*k3^6 + 9*k3^8) - 
         4*k1^6*(35*k2^10 - 122*k2^8*k3^2 + 139*k2^6*k3^4 - 65*k2^4*k3^6 - 
           30*k2^2*k3^8 + 15*k3^10) + k1^4*(70*k2^12 - 339*k2^10*k3^2 + 
           597*k2^8*k3^4 - 614*k2^6*k3^6 + 376*k2^4*k3^8 - 135*k2^2*k3^10 + 
           45*k3^12))) + b1*f1*k2^2*(2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*k2^2*
        (k1^12 + 5*k1^4*(3*k2^2 - 7*k3^2)*(k2^2 - k3^2)^3 - 
         k1^2*(6*k2^2 - 11*k3^2)*(k2^2 - k3^2)^4 + (k2^2 - k3^2)^6 + 
         k1^10*(-6*k2^2 + 11*k3^2) + 5*k1^8*(3*k2^4 - 10*k2^2*k3^2 + 
           7*k3^4) - 10*k1^6*(2*k2^6 - 9*k2^4*k3^2 + 12*k2^2*k3^4 - 
           13*k3^6)) - k3^2*(-14*Sqrt[2]*(c2 - c4)*(-1 + F^2)*k1^2*k2^2*
          (k1^8 - 4*k1^6*(k2^2 - k3^2) - 4*k1^2*(k2^2 - k3^2)^3 + 
           (k2^2 - k3^2)^4 + 2*k1^4*(3*k2^4 - 6*k2^2*k3^2 + 11*k3^4)) + 
         f1*(3*k1^12 - (k2^2 - k3^2)^5*(4*k2^2 + 3*k3^2) + 
           k1^10*(29*k2^2 + 6*k3^2) + k1^8*(-94*k2^4 + 153*k2^2*k3^2 - 
             51*k3^4) + k1^2*(k2^2 - k3^2)^3*(k2^4 - 51*k2^2*k3^2 - 6*k3^4) - 
           k1^4*(k2^2 - k3^2)^2*(17*k2^4 - 76*k2^2*k3^2 + 51*k3^4) + 
           k1^6*(82*k2^6 - 232*k2^4*k3^2 + 66*k2^2*k3^4 + 84*k3^6)))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(224*F^4*k1^6*k2^4*k3^6) + 
  ((-7*b1^3*(-1 + F^2)*k2^2*k3^2*(-4*(-2 + 2*F^2 - 3*f1)*k1^6*(k2^2 - k3^2)^2*
        (k2^2 + k3^2) + 4*f1*k1^2*(k2^2 - k3^2)^4*(k2^2 + k3^2) + 
       (-3 + 3*F^2 - 4*f1)*k1^8*(k2^4 + k3^4) + 6*(-1 + F^2 - 2*f1)*k1^4*
        (k2^2 - k3^2)^2*(k2^4 + k3^4) - (-1 + F^2)*(k2^2 - k3^2)^4*
        (k2^4 + k3^4)) + 2*f1^2*k2^2*k3^2*(k1^4 - (k2^2 - k3^2)^2)^2*
      (7*Sqrt[2]*(c2 - c4)*k2^2*k3^2 + 
       ((c2 + c4)*(k1^4 + k2^4 + 12*k2^2*k3^2 + k3^4 - 2*k1^2*(k2^2 + k3^2)))/
        Sqrt[2]) + 2*b1^2*(14*f1^2*k1^2*k2^2*k3^2*
        (-3*k1^4*(k2^2 - k3^2)^2*(k2^2 + k3^2) - (k2^2 - k3^2)^4*
          (k2^2 + k3^2) + k1^6*(k2^4 + 4*k2^2*k3^2 + k3^4) + 
         k1^2*(k2^2 - k3^2)^2*(3*k2^4 - 4*k2^2*k3^2 + 3*k3^4)) - 
       ((c2 + c4)*(-1 + F^2)^2*k2^2*k3^2*(-k1^12 + 8*k1^10*(k2^2 + k3^2) + 
          24*k1^6*(k2^2 - k3^2)^2*(k2^2 + k3^2) + (k2^2 - k3^2)^4*
           (k2^4 + k3^4) - 7*k1^8*(3*k2^4 - 4*k2^2*k3^2 + 3*k3^4) - 
          k1^4*(k2^2 - k3^2)^2*(11*k2^4 - 2*k2^2*k3^2 + 11*k3^4)))/Sqrt[2] + 
       (-1 + F^2)*f1*(-7*(k2^2 - k3^2)^4*(k2^2 + k3^2)^2*(k2^4 - k2^2*k3^2 + 
           k3^4) + k1^10*(7*k2^6 + 15*k2^4*k3^2 + 15*k2^2*k3^4 + 7*k3^6) + 
         2*k1^6*(k2^2 - k3^2)^2*(35*k2^6 + 52*k2^4*k3^2 + 52*k2^2*k3^4 + 
           35*k3^6) + k1^2*(k2^2 - k3^2)^4*(35*k2^6 + 57*k2^4*k3^2 + 
           57*k2^2*k3^4 + 35*k3^6) - 5*k1^8*(7*k2^8 + 5*k2^6*k3^2 + 
           5*k2^2*k3^6 + 7*k3^8) - 2*k1^4*(k2^2 - k3^2)^2*
          (35*k2^8 + 16*k2^6*k3^2 + 16*k2^2*k3^6 + 35*k3^8))) + 
     b1*f1*(2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*(k1^12*(k2^4 + k2^2*k3^2 + k3^4) - 
         6*k1^2*(k2^2 - k3^2)^4*(k2^6 + 5*k2^4*k3^2 + 5*k2^2*k3^4 + k3^6) - 
         2*k1^10*(3*k2^6 + k2^4*k3^2 + k2^2*k3^4 + 3*k3^6) + 
         15*k1^8*(k2^8 + k3^8) + (k2^2 - k3^2)^4*(k2^8 + 6*k2^6*k3^2 + 
           6*k2^2*k3^6 + k3^8) + 5*k1^4*(k2^2 - k3^2)^2*
          (3*k2^8 + 7*k2^6*k3^2 + 7*k2^2*k3^6 + 3*k3^8) - 
         20*k1^6*(k2^10 - k2^6*k3^4 - k2^4*k3^6 + k3^10)) + 
       k2^2*k3^2*(14*Sqrt[2]*(c2 - c4)*(-1 + F^2)*
          (-4*k1^6*(k2^2 - k3^2)^2*(k2^2 + k3^2) - 4*k1^2*(k2^2 - k3^2)^4*
            (k2^2 + k3^2) + k1^8*(k2^4 + k3^4) + 6*k1^4*(k2^2 - k3^2)^2*
            (k2^4 + k3^4) + (k2^2 - k3^2)^4*(k2^4 + k3^4)) + 
         f1*(23*k1^10*(k2^2 + k3^2) - 2*k1^6*(k2^2 - k3^2)^2*(k2^2 + k3^2) - 
           5*k1^2*(k2^2 - k3^2)^4*(k2^2 + k3^2) - 7*(k2^2 - k3^2)^4*
            (k2^2 + k3^2)^2 + k1^8*(-43*k2^4 + 42*k2^2*k3^2 - 43*k3^4) + 
           2*k1^4*(k2^2 - k3^2)^2*(17*k2^4 - 14*k2^2*k3^2 + 17*k3^4)))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(224*F^4*k1^4*k2^6*k3^6), 
 -1/896*((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (-70*b1^3*(-1 + F^2)^2*f1*k1^2*k2^2*(k1^2 - k2^2)*k3^4*
       (k1^2 + k2^2 - k3^2)^3 + b1*f1*(56*f1^2*k1^2*k2^4*k3^4*
         (k1^6 + 9*k1^4*(k2^2 - k3^2) - 5*(k2^2 - k3^2)^3 + 
          k1^2*(-9*k2^4 + 6*k2^2*k3^2 + 3*k3^4)) + Sqrt[2]*(c2 + c4)*
         (-1 + F^2)^2*k3^4*(15*k1^12 + k1^10*(8*k2^2 - 90*k3^2) + 
          15*(k2^2 - k3^2)^4*(k2^4 - 4*k2^2*k3^2 + k3^4) + 
          k1^4*(k2^2 - k3^2)^2*(73*k2^4 - 302*k2^2*k3^2 + 225*k3^4) + 
          k1^8*(-87*k2^4 - 152*k2^2*k3^2 + 225*k3^4) + 2*k1^2*(k2^2 - k3^2)^2*
           (44*k2^6 - 177*k2^4*k3^2 + 154*k2^2*k3^4 - 45*k3^6) - 
          4*k1^6*(20*k2^6 + 33*k2^4*k3^2 - 132*k2^2*k3^4 + 75*k3^6)) + 
        (-1 + F^2)*f1*k2^2*(3*k1^12*(k2^2 + 2*k3^2) - 15*(k2^2 - k3^2)^5*
           (3*k2^4 + 3*k2^2*k3^2 + 8*k3^4) - 2*k1^10*(57*k2^4 - 
            51*k2^2*k3^2 + 203*k3^4) + 2*k1^2*(k2^2 - k3^2)^3*
           (39*k2^6 - 36*k2^4*k3^2 - 210*k2^2*k3^4 + 95*k3^6) + 
          k1^8*(381*k2^6 - 288*k2^4*k3^2 - 897*k2^2*k3^4 + 1012*k3^6) - 
          4*k1^6*(111*k2^8 - 75*k2^6*k3^2 + 200*k2^4*k3^4 - 423*k2^2*k3^6 + 
            195*k3^8) + k1^4*(141*k2^10 + 6*k2^8*k3^2 - 1070*k2^6*k3^4 + 
            2020*k2^4*k3^6 - 1335*k2^2*k3^8 + 238*k3^10))) + 
      b1^2*(-1 + F^2)*(16*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k2^4*k3^6*
         (k1^4 - 3*(k2^2 - k3^2)^2) - 28*f1^2*k1^2*k2^2*k3^4*
         (5*k1^8 - 4*k1^6*k2^2 + 5*(k2^2 - k3^2)^3*(k2^2 + 3*k3^2) + 
          k1^4*(-50*k2^4 + 72*k2^2*k3^2 - 30*k3^4) - 
          4*k1^2*(k2^6 - 18*k2^4*k3^2 + 27*k2^2*k3^4 - 10*k3^6)) + 
        (-1 + F^2)*f1*(3*k1^12*(k2^4 + 10*k2^2*k3^2 - 35*k3^4) + 
          45*(k2^3 - k2*k3^2)^4*(k2^4 + 2*k2^2*k3^2 - k3^4) + 
          3*k1^10*(12*k2^6 + 24*k2^4*k3^2 - 50*k2^2*k3^4 + 175*k3^6) + 
          k1^8*(-129*k2^8 + 18*k2^6*k3^2 + 435*k2^4*k3^4 + 860*k2^2*k3^6 - 
            1050*k3^8) - k1^2*(k2^2 - k3^2)^3*(132*k2^8 - 180*k2^6*k3^2 - 
            26*k2^4*k3^4 - 275*k2^2*k3^6 + 105*k3^8) + 
          2*k1^6*(48*k2^10 - 276*k2^8*k3^2 + 506*k2^6*k3^4 + 187*k2^4*k3^6 - 
            990*k2^2*k3^8 + 525*k3^10) + 3*k1^4*(27*k2^12 + 14*k2^10*k3^2 + 
            159*k2^8*k3^4 + 16*k2^6*k3^6 - 651*k2^4*k3^8 + 610*k2^2*k3^10 - 
            175*k3^12))) + 8*f1^2*k1^2*k2^2*k3^2*
       (f1*k2^2*(3*k1^8 + 3*k1^2*(k2^2 - k3^2)^2*(6*k2^2 - k3^2) + 
          k1^6*(-6*k2^2 + k3^2) - 3*(k2^2 - k3^2)^3*(3*k2^2 + 4*k3^2) + 
          k1^4*(-6*k2^4 + 19*k2^2*k3^2 - 13*k3^4)) + 4*(-1 + F^2)*k3^2*
         ((7*(c2 - c4)*k1^2*k2^2*(3*k1^4 + k1^2*(8*k2^2 - 6*k3^2) + 
             3*(k2^2 - k3^2)^2))/Sqrt[2] + 
          ((c2 + c4)*(3*k1^8 + k1^6*(23*k2^2 - 12*k3^2) + 
             k1^2*(23*k2^2 - 12*k3^2)*(k2^2 - k3^2)^2 + 3*(k2^2 - k3^2)^4 + 
             2*k1^4*(25*k2^4 - 29*k2^2*k3^2 + 9*k3^4)))/Sqrt[2])))*
     Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^6*k1^8*k2^8*k3^4) + 
  ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (70*b1^3*(-1 + F^2)^2*f1*k1^2*k3^4*(2*k1^2 + 3*k2^2 - 2*k3^2)*
      (k1^2 + k2^2 - k3^2)^3 + b1^2*(-1 + F^2)*
      (-16*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k2^6*k3^2*
        (k1^4 - 3*(k2^2 - k3^2)^2) + 28*f1^2*k1^2*k2^4*
        (5*k1^8 - 4*k1^6*k3^2 - 5*(k2^2 - k3^2)^3*(3*k2^2 + k3^2) + 
         k1^4*(-30*k2^4 + 72*k2^2*k3^2 - 50*k3^4) + 
         4*k1^2*(10*k2^6 - 27*k2^4*k3^2 + 18*k2^2*k3^4 - k3^6)) - 
       (-1 + F^2)*f1*(38*k1^12*k3^2 + k1^10*(350*k2^4 + 222*k2^2*k3^2 - 
           89*k3^4) + 165*k3^2*(k2^2 - k3^2)^4*(-k2^4 - 2*k2^2*k3^2 + k3^4) - 
         k1^2*(k2^2 - k3^2)^3*(210*k2^6 - 324*k2^4*k3^2 + 675*k2^2*k3^4 - 
           317*k3^6) - k1^8*(840*k2^6 - 1135*k2^4*k3^2 + 162*k2^2*k3^4 + 
           139*k3^6) + k1^6*(420*k2^8 - 896*k2^6*k3^2 + 862*k2^4*k3^4 - 
           792*k2^2*k3^6 + 406*k3^8) + 8*k1^4*(35*k2^10 - 231*k2^8*k3^2 + 
           281*k2^6*k3^4 - 101*k2^4*k3^6 + 24*k2^2*k3^8 - 8*k3^10))) - 
     8*f1^2*k1^2*k2^2*(2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*k2^2*
        (3*k1^8 - k1^2*(12*k2^2 - 23*k3^2)*(k2^2 - k3^2)^2 + 
         3*(k2^2 - k3^2)^4 + k1^6*(-12*k2^2 + 23*k3^2) + 
         2*k1^4*(9*k2^4 - 29*k2^2*k3^2 + 25*k3^4)) + 
       k3^2*(14*Sqrt[2]*(c2 - c4)*(-1 + F^2)*k1^2*k2^2*
          (3*k1^4 + 3*(k2^2 - k3^2)^2 + k1^2*(-6*k2^2 + 8*k3^2)) + 
         f1*(3*k1^8 + k1^6*(k2^2 - 6*k3^2) - 3*k1^2*(k2^2 - 6*k3^2)*
            (k2^2 - k3^2)^2 + 3*(k2^2 - k3^2)^3*(4*k2^2 + 3*k3^2) + 
           k1^4*(-13*k2^4 + 19*k2^2*k3^2 - 6*k3^4)))) + 
     b1*f1*(-56*f1^2*k1^2*k2^4*k3^2*(k1^6 - 9*k1^4*(k2^2 - k3^2) + 
         5*(k2^2 - k3^2)^3 + 3*k1^2*(k2^4 + 2*k2^2*k3^2 - 3*k3^4)) - 
       (-1 + F^2)*f1*(3*k1^12*(2*k2^2 + k3^2) + 15*(k2^2 - k3^2)^5*
          (8*k2^4 + 3*k2^2*k3^2 + 3*k3^4) - 2*k1^10*(203*k2^4 - 
           51*k2^2*k3^2 + 57*k3^4) - 2*k1^2*(k2^2 - k3^2)^3*
          (95*k2^6 - 210*k2^4*k3^2 - 36*k2^2*k3^4 + 39*k3^6) + 
         k1^8*(1012*k2^6 - 897*k2^4*k3^2 - 288*k2^2*k3^4 + 381*k3^6) - 
         4*k1^6*(195*k2^8 - 423*k2^6*k3^2 + 200*k2^4*k3^4 - 75*k2^2*k3^6 + 
           111*k3^8) + k1^4*(238*k2^10 - 1335*k2^8*k3^2 + 2020*k2^6*k3^4 - 
           1070*k2^4*k3^6 + 6*k2^2*k3^8 + 141*k3^10)) + 
       2*(-1 + F^2)^2*(35*Sqrt[2]*(c2 - c4)*k1^2*k3^4*(k1^2 + 3*k2^2 - 
           3*k3^2)*(k1^2 + k2^2 - k3^2)^3 + 
         ((c2 + c4)*(5*k1^12*k3^2 + k1^10*(52*k2^4 + 30*k2^2*k3^2 + 
              30*k3^4) + k1^4*(k2^2 - k3^2)^2*(152*k2^6 - 193*k2^4*k3^2 + 
              570*k2^2*k3^4 - 525*k3^6) + k1^8*(-148*k2^6 + 157*k2^4*k3^2 + 
              300*k2^2*k3^4 - 295*k3^6) + 15*(k2^2 - k3^2)^4*
             (4*k2^6 + k2^4*k3^2 - 4*k2^2*k3^4 + k3^6) - 
            2*k1^2*(k2^2 - k3^2)^2*(94*k2^8 - 227*k2^6*k3^2 + 79*k2^4*k3^4 + 
              95*k2^2*k3^6 - 65*k3^8) + 4*k1^6*(18*k2^8 - 67*k2^6*k3^2 + 
              230*k2^4*k3^4 - 345*k2^2*k3^6 + 160*k3^8)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(896*F^6*k1^8*k2^4*k3^6) + 
  ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (-70*b1^3*(-1 + F^2)^2*f1*k1^2*k2^2*k3^4*(k1^2 + k2^2 - k3^2)^3*
      (k2^2 + k3^2) + 2*b1*f1*(35*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k2^4*k3^4*
        (k1^2 + 3*k2^2 - 3*k3^2)*(k1^2 + k2^2 - k3^2)^3 + 
       28*f1^2*k1^2*k2^4*k3^2*(-9*k1^4*(k2^2 - k3^2)^2 + 5*(k2^2 - k3^2)^4 + 
         k1^6*(k2^2 + k3^2) + 3*k1^2*(k2^2 - k3^2)^2*(k2^2 + k3^2)) - 
       (-1 + F^2)*f1*k2^2*(-6*k1^6*(k2^2 - k3^2)^2*(9*k2^4 + 19*k2^2*k3^2 + 
           9*k3^4) + k1^10*(89*k2^4 - 39*k2^2*k3^2 + 89*k3^4) + 
         k1^2*(k2^2 - k3^2)^4*(173*k2^4 + 313*k2^2*k3^2 + 173*k3^4) + 
         k1^8*(-125*k2^6 + 103*k2^4*k3^2 + 103*k2^2*k3^4 - 125*k3^6) - 
         105*(k2^2 - k3^2)^4*(k2^6 + k2^4*k3^2 + k2^2*k3^4 + k3^6) + 
         2*k1^4*(k2^2 - k3^2)^2*(11*k2^6 + 25*k2^4*k3^2 + 25*k2^2*k3^4 + 
           11*k3^6)) + ((c2 + c4)*(-1 + F^2)^2*
         (k1^12*(2*k2^4 + 12*k2^2*k3^2 - 15*k3^4) + 
          k1^10*(72*k2^6 + 32*k2^4*k3^2 - 38*k2^2*k3^4 + 90*k3^6) + 
          k1^8*(-278*k2^8 + 118*k2^6*k3^2 + 73*k2^4*k3^4 + 122*k2^2*k3^6 - 
            225*k3^8) + 15*(k2^2 - k3^2)^4*(2*k2^8 + 2*k2^6*k3^2 + 
            13*k2^4*k3^4 + 2*k2^2*k3^6 - k3^8) - 10*k1^2*(k2^2 - k3^2)^3*
           (4*k2^8 - 12*k2^6*k3^2 - 63*k2^4*k3^4 - 8*k2^2*k3^6 + 9*k3^8) - 
          k1^4*(k2^2 - k3^2)^2*(138*k2^8 + 76*k2^6*k3^2 - 809*k2^4*k3^4 - 
            62*k2^2*k3^6 + 225*k3^8) + 4*k1^6*(88*k2^10 - 120*k2^8*k3^2 + 
            144*k2^6*k3^4 - 100*k2^4*k3^6 - 87*k2^2*k3^8 + 75*k3^10)))/
        Sqrt[2]) - b1^2*(-1 + F^2)*(16*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^6*
        k2^4*k3^2*(k1^4 - 3*(k2^2 - k3^2)^2) + 112*f1^2*k1^2*k2^2*
        (-5*(k2^2 - k3^2)^4*(k2^4 + k2^2*k3^2 + k3^4) - 
         3*k1^4*(k2^2 - k3^2)^2*(5*k2^4 + 3*k2^2*k3^2 + 5*k3^4) + 
         5*k1^6*(k2^6 + k3^6) + 3*k1^2*(k2^2 - k3^2)^2*
          (5*k2^6 - 2*k2^4*k3^2 - 2*k2^2*k3^4 + 5*k3^6)) - 
       (-1 + F^2)*f1*(k1^10*(81*k2^4*k3^2 + 70*k2^2*k3^4 - 105*k3^6) - 
         105*(k2^2 - k3^2)^4*(2*k2^8 + 2*k2^6*k3^2 + 3*k2^4*k3^4 + 
           2*k2^2*k3^6 - k3^8) + k1^8*(350*k2^8 + 386*k2^6*k3^2 + k2^4*k3^4 - 
           350*k2^2*k3^6 + 525*k3^8) + 2*k1^4*(k2^2 - k3^2)^2*
          (210*k2^8 + 52*k2^6*k3^2 - 683*k2^4*k3^4 - 140*k2^2*k3^6 + 
           525*k3^8) + k1^2*(k2^2 - k3^2)^2*(280*k2^10 - 1087*k2^8*k3^2 - 
           280*k2^6*k3^4 + 488*k2^4*k3^6 + 980*k2^2*k3^8 - 525*k3^10) - 
         6*k1^6*(140*k2^10 - 121*k2^8*k3^2 + 94*k2^6*k3^4 - 86*k2^4*k3^6 - 
           210*k2^2*k3^8 + 175*k3^10))) + 4*f1^2*k2^2*
      (((c2 + c4)*(-1 + F^2)*(k1^12*(k2^2 + k3^2) - 
          14*k1^10*(k2^4 - k2^2*k3^2 + k3^4) - 4*k1^6*(k2^2 - k3^2)^2*
           (k2^4 + 28*k2^2*k3^2 + k3^4) + 10*k1^2*(k2^2 - k3^2)^4*
           (5*k2^4 + 17*k2^2*k3^2 + 5*k3^4) - 15*(k2^2 - k3^2)^4*
           (k2^6 + 6*k2^4*k3^2 + 6*k2^2*k3^4 + k3^6) + 
          k1^8*(31*k2^6 - 16*k2^4*k3^2 - 16*k2^2*k3^4 + 31*k3^6) - 
          k1^4*(k2^2 - k3^2)^2*(49*k2^6 - 67*k2^4*k3^2 - 67*k2^2*k3^4 + 
            49*k3^6)))/Sqrt[2] + k2^2*k3^2*
        (2*f1*k1^2*(4*k1^8 - 15*k1^4*(k2^2 - k3^2)^2 + 9*(k2^2 - k3^2)^4 - 
           k1^6*(k2^2 + k3^2) + 3*k1^2*(k2^2 - k3^2)^2*(k2^2 + k3^2)) + 
         (7*(c2 - c4)*(-1 + F^2)*(-12*k1^6*(k2^2 - k3^2)^2 + 
            20*k1^2*(k2^2 - k3^2)^4 + k1^8*(k2^2 + k3^2) + 
            6*k1^4*(k2^2 - k3^2)^2*(k2^2 + k3^2) - 15*(k2^2 - k3^2)^4*
             (k2^2 + k3^2)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(896*F^6*k1^6*k2^8*k3^6), 
 (f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (140*b1^3*(-1 + F^2)^3*k1^4*k2^4*k3^4*(k1^2 + k2^2 - k3^2) - 
     b1^2*(-1 + F^2)^2*(15*(-1 + F^2)*k1^12*k2^2 - 420*(-1 + F^2)*k2^6*
        (k2^2 - k3^2)^4 + k1^10*(-33*(-1 + F^2)*k2^4 + 75*(-1 + F^2)*k2^2*
          k3^2 + 245*(2 - 2*F^2 + 3*f1)*k3^4) - 
       5*k1^8*(30*(-1 + F^2)*k2^6 - 72*(-1 + F^2)*k2^4*k3^2 + 
         7*(-33 + 33*F^2 - 29*f1)*k2^2*k3^4 - 49*(-4 + 4*F^2 - 9*f1)*k3^6) - 
       5*k1^2*(k2^2 - k3^2)^2*(57*(-1 + F^2)*k2^8 + 135*(-1 + F^2)*k2^6*
          k3^2 + 2*(95 - 95*F^2 + 147*f1)*k2^4*k3^4 + 42*(-4 + 4*F^2 - 7*f1)*
          k2^2*k3^6 - 98*(-1 + F^2)*k3^8) + k1^6*(-18*(-1 + F^2)*k2^8 + 
         150*(-1 + F^2)*k2^6*k3^2 + (817 - 817*F^2 - 1841*f1)*k2^4*k3^4 + 
         5*(-41 + 41*F^2 - 56*f1)*k2^2*k3^6 + 2205*f1*k3^8) + 
       5*k1^4*(k2^2 - k3^2)*(159*(-1 + F^2)*k2^8 - 369*(-1 + F^2)*k2^6*k3^2 + 
         (-122 + 122*F^2 - 539*f1)*k2^4*k3^4 + 4*(85 - 85*F^2 + 147*f1)*k2^2*
          k3^6 + 49*(-4 + 4*F^2 + 3*f1)*k3^8)) + 
     b1*(-1 + F^2)*(56*f1^2*k1^2*k2^2*k3^4*(15*k1^6 + 
         k1^4*(29*k2^2 - 35*k3^2) - 35*(k2^2 - k3^2)^3 - 
         15*k1^2*(3*k2^4 - 4*k2^2*k3^2 + k3^4)) - 4*Sqrt[2]*(c2 + c4)*
        (-1 + F^2)^2*k3^4*(20*k1^10 + 5*k1^8*(8*k2^2 - 9*k3^2) + 
         35*k3^2*(k2^2 - k3^2)^4 - 2*k1^6*(3*k2^4 - 8*k2^2*k3^2 + 10*k3^4) - 
         10*k1^2*(k2^2 - k3^2)^2*(5*k2^4 - 20*k2^2*k3^2 + 12*k3^4) + 
         k1^4*(-60*k2^6 + 286*k2^4*k3^2 - 340*k2^2*k3^4 + 130*k3^6)) - 
       (-1 + F^2)*f1*(9*k1^12*(4*k2^2 - 15*k3^2) - 420*k2^2*k3^2*
          (k2^2 - k3^2)^4*(2*k2^2 - k3^2) + k1^10*(-36*k2^4 - 411*k2^2*k3^2 + 
           960*k3^4) - 6*k1^8*(60*k2^6 - 215*k2^4*k3^2 - 97*k2^2*k3^4 + 
           275*k3^6) - 5*k1^2*(k2^2 - k3^2)^2*(84*k2^8 + 219*k2^6*k3^2 - 
           68*k2^4*k3^4 - 247*k2^2*k3^6 + 84*k3^8) + 
         2*k1^6*(132*k2^8 + 645*k2^6*k3^2 - 1851*k2^4*k3^4 + 524*k2^2*k3^6 + 
           270*k3^8) + 3*k1^4*(172*k2^10 - 537*k2^8*k3^2 - 646*k2^6*k3^4 + 
           2026*k2^4*k3^6 - 1250*k2^2*k3^8 + 235*k3^10))) + 
     4*f1*k1^2*(-28*f1^2*k1^2*k2^4*k3^4*(k1^2 + 5*k2^2 - 5*k3^2) + 
       (-1 + F^2)*f1*k2^2*(3*k1^8*(k2^2 + 2*k3^2) - 15*(k2^2 - k3^2)^3*
          (3*k2^4 + 3*k2^2*k3^2 + 8*k3^4) + k1^6*(24*k2^4 - 96*k2^2*k3^2 + 
           62*k3^4) - 2*k1^4*(51*k2^6 - 72*k2^4*k3^2 - 28*k2^2*k3^4 + 
           39*k3^6) + 2*k1^2*(60*k2^8 - 72*k2^6*k3^2 - 49*k2^4*k3^4 + 
           116*k2^2*k3^6 - 55*k3^8)) + 2*(-1 + F^2)^2*k3^4*
        (28*Sqrt[2]*(c2 - c4)*k1^4*k2^4 + 
         ((c2 + c4)*(15*k1^8 + k1^6*(26*k2^2 - 60*k3^2) + 15*(k2^2 - k3^2)^2*
             (k2^4 - 4*k2^2*k3^2 + k3^4) + 2*k1^4*(47*k2^4 - 71*k2^2*k3^2 + 
              45*k3^4) + k1^2*(66*k2^6 - 212*k2^4*k3^2 + 206*k2^2*k3^4 - 
              60*k3^6)))/Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(3584*F^8*k1^10*k2^8*k3^4) - 
  (f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (-35*b1^3*(-1 + F^2)^3*k1^2*k2^2*k3^2*(3*k1^8 + 9*k1^6*(k2^2 - k3^2) - 
       28*(k2^2 - k3^2)^4 + k1^4*(-15*k2^4 + 30*k2^2*k3^2 - 19*k3^4) + 
       k1^2*(-49*k2^6 + 147*k2^4*k3^2 - 151*k2^2*k3^4 + 53*k3^6)) + 
     b1^2*(-1 + F^2)^2*k2^2*(70*(-1 + F^2)*k1^12 + 1540*(-1 + F^2)*k2^2*k3^2*
        (k2^2 - k3^2)^4 + k1^10*(280*(-1 + F^2)*k2^2 + 
         (-22 + 22*F^2 - 315*f1)*k3^2) - 5*k1^8*(196*(-1 + F^2)*k2^4 - 
         3*(-135 + 135*F^2 + 49*f1)*k2^2*k3^2 + (-232 + 232*F^2 - 399*f1)*
          k3^4) + k1^6*(-1680*(-1 + F^2)*k2^6 + 131*(-33 + 33*F^2 + 49*f1)*
          k2^4*k3^2 - 35*(-89 + 89*F^2 + 72*f1)*k2^2*k3^4 + 
         (-1112 + 1112*F^2 - 3535*f1)*k3^6) + 5*k1^4*(k2^2 - k3^2)*
        (294*(-1 + F^2)*k2^6 + (663 - 663*F^2 + 1589*f1)*k2^4*k3^2 + 
         (-915 + 915*F^2 - 1316*f1)*k2^2*k3^4 + (314 - 314*F^2 - 469*f1)*
          k3^6) + 5*k1^2*(k2^2 - k3^2)^2*(392*(-1 + F^2)*k2^6 + 
         (393 - 393*F^2 + 784*f1)*k2^4*k3^2 + (-607 + 607*F^2 - 686*f1)*k2^2*
          k3^4 - 2*(-171 + 171*F^2 + 49*f1)*k3^6)) - 
     b1*(-1 + F^2)*(70*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k1^2*k2^2*k3^2*
        (k1^8 + 5*k1^6*(k2^2 - k3^2) - 3*k1^4*(k2^2 - k3^2)^2 - 
         21*k1^2*(k2^2 - k3^2)^3 - 14*(k2^2 - k3^2)^4) + 
       56*f1^2*k1^2*k2^6*(15*k1^6 + 35*(k2^2 - k3^2)^3 + 
         k1^4*(-35*k2^2 + 29*k3^2) - 15*k1^2*(k2^4 - 4*k2^2*k3^2 + 3*k3^4)) + 
       2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*(5*k1^12 - 
         70*k2^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^4 + 
         5*k1^10*(3*k2^2 + 5*k3^2) - 5*k1^8*(24*k2^4 - 67*k2^2*k3^2 + 
           43*k3^4) + k1^6*(-42*k2^6 + 147*k2^4*k3^2 - 110*k2^2*k3^4 + 
           25*k3^6) - 5*k1^2*(k2^2 - k3^2)^2*(17*k2^6 + 118*k2^4*k3^2 - 
           213*k2^2*k3^4 + 90*k3^6) + k1^4*(405*k2^8 - 1787*k2^6*k3^2 + 
           2945*k2^4*k3^4 - 2205*k2^2*k3^6 + 610*k3^8)) - 
       (-1 + F^2)*f1*(3*k1^12*(12*k2^2 - 35*k3^2) + 
         k1^10*(24*k2^4 - 1076*k2^2*k3^2 + 945*k3^4) + 140*(k2^2 - k3^2)^4*
          (4*k2^6 + 12*k2^4*k3^2 - 2*k2^2*k3^4 - 3*k3^6) - 
         2*k1^8*(64*k2^6 + 805*k2^4*k3^2 - 2305*k2^2*k3^4 + 1575*k3^6) - 
         2*k1^6*(556*k2^8 - 994*k2^6*k3^2 - 2520*k2^4*k3^4 + 5303*k2^2*k3^6 - 
           2625*k3^8) - 5*k1^2*(k2^2 - k3^2)^2*(96*k2^8 - 976*k2^6*k3^2 + 
           373*k2^4*k3^4 + 684*k2^2*k3^6 - 441*k3^8) + 
         k1^4*(1100*k2^10 + 803*k2^8*k3^2 + 382*k2^6*k3^4 - 11026*k2^4*k3^6 + 
           13466*k2^2*k3^8 - 4725*k3^10))) + 4*f1*k1^2*k2^2*
      (28*f1^2*k1^2*k2^4*k3^2*(k1^2 - 5*k2^2 + 5*k3^2) - 
       (-1 + F^2)*f1*(3*k1^8*(2*k2^2 + k3^2) + 15*(k2^2 - k3^2)^3*
          (8*k2^4 + 3*k2^2*k3^2 + 3*k3^4) + k1^6*(62*k2^4 - 96*k2^2*k3^2 + 
           24*k3^4) - 2*k1^4*(39*k2^6 - 28*k2^4*k3^2 - 72*k2^2*k3^4 + 
           51*k3^6) - 2*k1^2*(55*k2^8 - 116*k2^6*k3^2 + 49*k2^4*k3^4 + 
           72*k2^2*k3^6 - 60*k3^8)) + 2*(-1 + F^2)^2*
        (7*Sqrt[2]*(c2 - c4)*k1^2*k3^2*(10*k1^4*k3^2 + 
           15*(-(k2^2*k3) + k3^3)^2 + k1^2*(-4*k2^4 + 25*k2^2*k3^2 - 
             25*k3^4)) + ((c2 + c4)*(10*k1^8*k3^2 + 
            k1^6*(4*k2^4 - 5*k2^2*k3^2 + 95*k3^4) + 
            k1^4*(52*k2^6 - 149*k2^4*k3^2 + 330*k2^2*k3^4 - 275*k3^6) + 
            15*(k2^2 - k3^2)^2*(4*k2^6 + k2^4*k3^2 - 4*k2^2*k3^4 + k3^6) + 
            k1^2*(-116*k2^8 + 217*k2^6*k3^2 + 49*k2^4*k3^4 - 305*k2^2*k3^6 + 
              155*k3^8)))/Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^8*k1^10*k2^6*k3^6) + 
  (f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (-35*b1^3*(-1 + F^2)^3*k1^2*k2^4*k3^2*(k1^6 - 9*k1^2*(k2^2 - k3^2)^2 - 
       7*(k2^2 - k3^2)^3 + k1^4*(-k2^2 + k3^2)) + 
     b1^2*(-1 + F^2)^2*(35*(-1 + F^2)*k1^10*k2^2*(2*k2^2 + k3^2) + 
       490*(-1 + F^2)*(k2^2 - k3^2)^4*(4*k2^6 + 3*k2^4*k3^2 + k3^6) - 
       35*k1^6*(k2^2 - k3^2)*(28*(-1 + F^2)*k2^6 - 3*(-1 + F^2 + 19*f1)*k2^4*
          k3^2 + (13 - 13*F^2 - 8*f1)*k2^2*k3^4 + 7*(-4 + 4*F^2 - 9*f1)*
          k3^6) + k1^8*(280*(-1 + F^2)*k2^6 + (253 - 253*F^2 + 441*f1)*k2^4*
          k3^2 + 35*(-5 + 5*F^2 + 8*f1)*k2^2*k3^4 + 245*(2 - 2*F^2 + 3*f1)*
          k3^6) + 245*k1^2*(k2^2 - k3^2)^3*(6*(-1 + F^2)*k2^6 + 
         (-14 + 14*F^2 + 9*f1)*k2^4*k3^2 + (-4 + 4*F^2 + 3*f1)*k3^6) + 
       k1^4*(-1680*(-1 + F^2)*k2^10 + (-4843 + 4843*F^2 + 2415*f1)*k2^8*
          k3^2 - 105*(-41 + 41*F^2 + 46*f1)*k2^6*k3^4 + 
         3*(-331 + 331*F^2 + 1540*f1)*k2^4*k3^6 + 245*(-1 + F^2 - 18*f1)*k2^2*
          k3^8 + 2205*f1*k3^10)) + b1*(-1 + F^2)*
      (70*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k2^4*k3^2*
        (k1^8 + 5*k1^6*(k2^2 - k3^2) - 3*k1^4*(k2^2 - k3^2)^2 - 
         21*k1^2*(k2^2 - k3^2)^3 - 14*(k2^2 - k3^2)^4) - 
       56*f1^2*k1^2*k2^2*(-35*k1^4*(k2^2 - k3^2)^2*(k2^2 + k3^2) + 
         35*(k2^2 - k3^2)^4*(k2^2 + k3^2) - 15*k1^2*(k2^2 - k3^2)^2*
          (k2^4 - 3*k2^2*k3^2 + k3^4) + 3*k1^6*(5*k2^4 - 3*k2^2*k3^2 + 
           5*k3^4)) + (-1 + F^2)*f1*(980*k2^2*k3^2*(k2^2 - k3^2)^4*
          (k2^2 + 2*k3^2) + k1^10*(52*k2^4 - 273*k2^2*k3^2 - 75*k3^4) - 
         4*k1^4*(k2^2 - k3^2)^2*(294*k2^6 - 631*k2^4*k3^2 - 2231*k2^2*k3^4 - 
           705*k3^6) - 4*k1^8*(98*k2^6 + 272*k2^4*k3^2 - 257*k2^2*k3^4 - 
           285*k3^6) + 2*k1^6*(88*k2^8 - 765*k2^6*k3^2 + 3415*k2^4*k3^4 - 
           1277*k2^2*k3^6 - 1485*k3^8) + 5*k1^2*(k2^2 - k3^2)^2*
          (268*k2^8 + 807*k2^6*k3^2 + 307*k2^4*k3^4 - 1055*k2^2*k3^6 - 
           183*k3^8)) + 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*
        (5*k1^12*(k2^2 - k3^2) + k1^10*(-7*k2^4 + 18*k2^2*k3^2 - 50*k3^4) - 
         35*(k2^2 - k3^2)^4*(4*k2^6 + 13*k2^4*k3^2 + k3^6) - 
         35*k1^2*(k2^2 - k3^2)^3*(k2^6 + 24*k2^4*k3^2 + 2*k3^6) + 
         5*k1^4*(k2^2 - k3^2)^2*(45*k2^6 - 40*k2^4*k3^2 - 21*k2^2*k3^4 + 
           13*k3^6) + k1^8*(-10*k2^6 + 22*k2^4*k3^2 - 190*k2^2*k3^4 + 
           215*k3^6) - 5*k1^6*(14*k2^8 - 57*k2^6*k3^2 + 79*k2^4*k3^4 - 
           88*k2^2*k3^6 + 52*k3^8))) + 
     2*f1*(((c2 + c4)*(-1 + F^2)^2*(3*k1^12*(8*k2^2 - 15*k3^2) + 
          560*k2^2*k3^2*(k2^2 - 3*k3^2)*(k2^2 - k3^2)^4 + 
          k1^10*(-8*k2^4 - 133*k2^2*k3^2 + 285*k3^4) + 5*k1^4*(k2^2 - k3^2)^2*
           (104*k2^6 - 185*k2^4*k3^2 - 1296*k2^2*k3^4 - 93*k3^6) - 
          35*k1^2*(k2^2 - k3^2)^3*(8*k2^6 + 15*k2^4*k3^2 + 156*k2^2*k3^4 + 
            3*k3^6) - 2*k1^8*(48*k2^6 - 213*k2^4*k3^2 + 53*k2^2*k3^4 + 
            345*k3^6) - 10*k1^6*(16*k2^8 - 81*k2^6*k3^2 + 376*k2^4*k3^4 - 
            230*k2^2*k3^6 - 81*k3^8)))/Sqrt[2] - 
       2*k2^2*(-42*f1^2*k1^4*k2^2*k3^2*(k1^4 - 5*(k2^2 - k3^2)^2) + 
         (7*(c2 - c4)*(-1 + F^2)^2*k3^2*(245*k1^6*k3^2*(k2^2 - k3^2) + 
            455*k1^2*k3^2*(k2^2 - k3^2)^3 - 70*(k2^2 - 2*k3^2)*
             (k2^2 - k3^2)^4 + k1^8*(-6*k2^2 + 35*k3^2) + 
            15*k1^4*(k2^2 - k3^2)^2*(4*k2^2 + 35*k3^2)))/Sqrt[2] + 
         2*(-1 + F^2)*f1*k1^2*(4*k1^8*(k2^2 + k3^2) - 73*k1^4*(k2^2 - k3^2)^2*
            (k2^2 + k3^2) + 45*(k2^2 - k3^2)^4*(k2^2 + k3^2) - 
           3*k1^2*(k2^2 - k3^2)^2*(5*k2^4 - 7*k2^2*k3^2 + 5*k3^4) + 
           k1^6*(39*k2^4 - 73*k2^2*k3^2 + 39*k3^4)))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^8*k1^8*k2^8*k3^6), 
 ((-1 + F^2)*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (b1^2*(-1 + F^2)^2*k1^2*k2^2*(9*(-1 + F^2)*k1^8 + 
       21*(-1 + F^2)*k1^6*(k2^2 - k3^2) - 168*(-1 + F^2)*k2^4*
        (k2^2 - k3^2)^2 - 7*k1^2*(k2^2 - k3^2)*(15*(-1 + F^2)*k2^4 + 
         2*(-2 + 2*F^2 + 21*f1)*k3^4) + 3*k1^4*((-1 + F^2)*k2^4 - 
         2*(-2 + 2*F^2 + 49*f1)*k3^4)) + b1*(-1 + F^2)*
      (8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^6*
        (k1^4 + 7*k1^2*(k2^2 - k3^2) + 7*(k2^2 - k3^2)^2) - 
       7*f1^2*k1^2*k3^4*(63*k1^6 + k1^4*(307*k2^2 - 273*k3^2) + 
         105*(k2^2 - k3^2)^3 + 7*k1^2*(43*k2^4 - 88*k2^2*k3^2 + 45*k3^4)) + 
       (-1 + F^2)*f1*(12*k1^12 + k1^10*(-69*k2^2 + 93*k3^2) - 
         630*(k2^3 - k2*k3^2)^4 - 10*k1^8*(30*k2^4 - 63*k2^2*k3^2 + 
           25*k3^4) - 21*k1^2*(k2^2 - k3^2)^2*(23*k2^6 + 31*k2^4*k3^2 - 
           26*k2^2*k3^4 - 12*k3^6) + k1^6*(360*k2^6 - 408*k2^4*k3^2 - 
           156*k2^2*k3^4 + 89*k3^6) + k1^4*(942*k2^8 - 3702*k2^6*k3^2 + 
           3615*k2^4*k3^4 - 707*k2^2*k3^6 - 196*k3^8))) + 
     f1*k1^2*(56*f1^2*k1^2*k2^2*k3^4*(3*k1^2 + 7*k2^2 - 7*k3^2) - 
       8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k3^4*(k1^6 + 9*k1^4*(k2^2 - k3^2) - 
         7*(-(k2^2*k3) + k3^3)^2 + k1^2*(8*k2^4 - 25*k2^2*k3^2 + 15*k3^4)) - 
       (-1 + F^2)*f1*(168*k2^2*k3^2*(k2^2 - k3^2)^2*(2*k2^2 - k3^2) + 
         3*k1^8*(8*k2^2 + 17*k3^2) - k1^6*(24*k2^4 + 147*k2^2*k3^2 + 
           46*k3^4) - k1^4*(144*k2^6 + 27*k2^4*k3^2 - 458*k2^2*k3^4 + 
           89*k3^6) + 3*k1^2*(48*k2^8 - 63*k2^6*k3^2 + 136*k2^4*k3^4 - 
           149*k2^2*k3^6 + 28*k3^8))))*Plin[((26 + F*(-17 + 6*F))*k1)/
      (15*qo)]*Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/
   (3584*F^10*k1^12*k2^8*k3^4) + 
  ((-1 + F^2)*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (b1^2*(-1 + F^2)^2*k1^2*k2^2*(14*(-1 + F^2 - 7*f1)*k1^8 + 
       14*k1^6*(21*(-1 + F^2 - 5*f1)*k2^2 + (21 - 21*F^2 + 97*f1)*k3^2) + 
       k1^4*(98*(-4 + 4*F^2 - 7*f1)*k2^4 + 3*(253 - 253*F^2 + 784*f1)*k2^2*
          k3^2 + 56*(-7 + 7*F^2 - 16*f1)*k3^4) + 14*(k2^2 - k3^2)^2*
        (44*(-1 + F^2)*k2^2*k3^2 + 21*f1*(20*k2^4 - 31*k2^2*k3^2 + 
           11*k3^4)) + 7*k1^2*(k2^2 - k3^2)*(67*(-1 + F^2)*k2^2*k3^2 + 
         14*f1*(63*k2^4 - 89*k2^2*k3^2 + 35*k3^4))) + 
     b1*(-1 + F^2)*(-2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k2^2*
        (k1^8 + 21*k1^6*(k2^2 - k3^2) - 28*(3*k2^2 - 2*k3^2)*
          (k2^3 - k2*k3^2)^2 + k1^4*(31*k2^4 - 57*k2^2*k3^2 + 28*k3^4) - 
         7*k1^2*(7*k2^6 - 12*k2^4*k3^2 + 5*k2^2*k3^4)) + 
       7*f1^2*k1^2*k2^2*(93*k1^6*k3^2 + 525*k3^2*(k2^2 - k3^2)^3 + 
         k1^4*(8*k2^4 + 679*k2^2*k3^2 - 577*k3^4) - 
         7*k1^2*(8*k2^6 - 169*k2^4*k3^2 + 304*k2^2*k3^4 - 143*k3^6)) + 
       (-1 + F^2)*f1*(42*k1^12 + 3*k1^10*(38*k2^2 - 7*k3^2) + 
         210*k2^2*(k2^2 - k3^2)^4*(12*k2^2 - k3^2) + 
         k1^8*(-790*k2^4 + 1315*k2^2*k3^2 - 651*k3^4) + 
         7*k1^2*(k2^2 - k3^2)^2*(476*k2^6 - 155*k2^4*k3^2 - 211*k2^2*k3^4 + 
           66*k3^6) + k1^6*(-1894*k2^6 + 5615*k2^4*k3^2 - 5209*k2^2*k3^4 + 
           1659*k3^6) + k1^4*(140*k2^8 + 3728*k2^6*k3^2 - 8056*k2^4*k3^4 + 
           5855*k2^2*k3^6 - 1491*k3^8))) + 
     f1*k1^2*(56*f1^2*k1^2*k2^6*(3*k1^2 - 7*k2^2 + 7*k3^2) + 
       14*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k1^2*k2^2*k3^2*
        (k1^4 + k1^2*(21*k2^2 - 17*k3^2) + 28*(k2^2 - k3^2)^2) + 
       2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*
        (k1^8 + k1^6*(23*k2^2 - 15*k3^2) + 28*(3*k2^2 - 2*k3^2)*
          (k2^3 - k2*k3^2)^2 + k1^4*(-53*k2^4 + 133*k2^2*k3^2 - 74*k3^4) + 
         k1^2*(-47*k2^6 + 312*k2^4*k3^2 - 429*k2^2*k3^4 + 172*k3^6)) - 
       (-1 + F^2)*f1*(3*k1^8*(8*k2^2 + 35*k3^2) + 
         k1^6*(302*k2^2*k3^2 - 483*k3^4) - 9*k1^4*(16*k2^6 - 45*k2^4*k3^2 + 
           126*k2^2*k3^4 - 91*k3^6) - 56*(k2^2 - k3^2)^2*
          (4*k2^6 + 12*k2^4*k3^2 - 2*k2^2*k3^4 - 3*k3^6) + 
         k1^2*(64*k2^8 - 684*k2^6*k3^2 + 189*k2^4*k3^4 + 1040*k2^2*k3^6 - 
           609*k3^8))))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^10*k1^12*k2^6*k3^6) - 
  ((-1 + F^2)*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (7*b1^2*(-1 + F^2)^2*k1^2*k2^2*(378*f1*k2^2*(k2^2 - k3^2)^3 + 
       7*k1^4*(k2^2 - k3^2)*(6*(-1 + F^2 - f1)*k2^2 + (-1 + F^2 + 2*f1)*
          k3^2) + k1^6*(2*(-1 + F^2 - 15*f1)*k2^2 + 3*(-1 + F^2 + 2*f1)*
          k3^2) + 14*(-4 + 4*F^2 + 21*f1)*k1^2*(k2^3 - k2*k3^2)^2) + 
     b1*(-1 + F^2)*f1*(1470*(-1 + F^2)*k2^2*(k2^2 - k3^2)^4*(2*k2^2 + k3^2) + 
       2*(-1 + F^2)*k1^10*(37*k2^2 + 22*k3^2) + 
       k1^8*(26*(-1 + F^2)*k2^4 + (-48 + 48*F^2 + 637*f1)*k2^2*k3^2 + 
         (-89 + 89*F^2 - 441*f1)*k3^4) + 21*k1^2*(k2^2 - k3^2)^2*
        (4*(-39 + 39*F^2 - 14*f1)*k2^6 + (-52 + 52*F^2 + 217*f1)*k2^4*k3^2 - 
         196*(-1 + F^2 + f1)*k2^2*k3^4 + (-4 + 4*F^2 + 35*f1)*k3^6) + 
       k1^6*((1630 - 1630*F^2 + 784*f1)*k2^6 + (-2729 + 2729*F^2 + 1911*f1)*
          k2^4*k3^2 - 7*(-75 + 75*F^2 + 658*f1)*k2^2*k3^4 + 
         (562 - 562*F^2 + 1911*f1)*k3^6) + 
       k1^4*(-2*(-835 + 835*F^2 + 196*f1)*k2^8 + (-6863 + 6863*F^2 + 5439*f1)*
          k2^6*k3^2 + (7999 - 7999*F^2 - 11907*f1)*k2^4*k3^4 + 
         (-2509 + 2509*F^2 + 9065*f1)*k2^2*k3^6 + 15*(-23 + 23*F^2 - 147*f1)*
          k3^8)) + f1*(98*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k2^2*k3^2*
        (k1^8 + 2*k1^6*(k2^2 - k3^2) - 11*k1^4*(k2^2 - k3^2)^2 - 
         27*k1^2*(k2^2 - k3^2)^3 - 15*(k2^2 - k3^2)^4) + 
       56*f1^2*k1^4*k2^2*(7*k1^2*(k2^2 - k3^2)^2 + k1^4*(k2^2 + k3^2) - 
         14*(k2^2 - k3^2)^2*(k2^2 + k3^2)) - (-1 + F^2)*f1*k1^2*
        (-168*k2^2*k3^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^2 + 
         k1^8*(64*k2^2 + 68*k3^2) + k1^6*(24*k2^4 + 73*k2^2*k3^2 - 
           101*k3^4) + k1^2*(k2^2 - k3^2)^2*(80*k2^4 - 459*k2^2*k3^2 + 
           63*k3^4) - 2*k1^4*(224*k2^6 - 335*k2^4*k3^2 + 84*k2^2*k3^4 + 
           15*k3^6))) + 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*
      (b1*(-1 + F^2)*k1^4*(k1^6*(6*k2^2 - 4*k3^2) - 56*k2^4*(k2^2 - k3^2)^2 + 
         k1^4*(12*k2^4 - 45*k2^2*k3^2 + 28*k3^4) - 
         7*k1^2*(6*k2^6 - k2^4*k3^2 - 9*k2^2*k3^4 + 4*k3^6)) + 
       f1*(4*k1^12 - 3*k1^10*(4*k2^2 - 9*k3^2) - 210*k2^2*(k2^2 - k3^2)^4*
          (k2^2 + 3*k3^2) - 21*k1^2*k2^2*(k2^2 - k3^2)^3*(5*k2^2 + 64*k3^2) + 
         k1^8*(-103*k2^4 + 216*k2^2*k3^2 - 129*k3^4) + 
         21*k1^4*(k2^2 - k3^2)^2*(17*k2^4 - 37*k2^2*k3^2 - 3*k3^4) + 
         7*k1^6*(3*k2^6 + 19*k2^4*k3^2 - 45*k2^2*k3^4 + 23*k3^6))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^10*k1^10*k2^8*k3^6), 
 -1/14336*((-1 + F^2)^2*f1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^
      4*(-8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^4*(k1^2 - 2*k3^2) - 
      315*f1^2*k1^2*k3^4*(k1^2 + k2^2 - k3^2) - (-1 + F^2)*f1*
       (33*k1^8 + 3*k1^6*(5*k2^2 - 27*k3^2) + 540*k2^4*(k2^2 - k3^2)^2 + 
        k1^4*(-429*k2^4 + 438*k2^2*k3^2 + 44*k3^4) - 
        3*k1^2*(45*k2^6 - 257*k2^4*k3^2 + 160*k2^2*k3^4 + 36*k3^6)) + 
      b1*(-1 + F^2)*(33*(-1 + F^2)*k1^8 + 81*(-1 + F^2)*k1^6*(k2^2 - k3^2) - 
        540*(-1 + F^2)*k2^4*(k2^2 - k3^2)^2 + k1^4*(-9*(-1 + F^2)*k2^4 + 
          (16 - 16*F^2 - 315*f1)*k3^4) - 3*k1^2*(151*(-1 + F^2)*k2^6 - 
          135*(-1 + F^2)*k2^4*k3^2 + 3*(-12 + 12*F^2 + 35*f1)*k2^2*k3^4 - 
          3*(-12 + 12*F^2 + 35*f1)*k3^6)))*
     Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^12*k1^12*k2^8*k3^4) - 
  ((-1 + F^2)^2*f1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^4*
    (42*f1^2*k1^2*k2^2*k3^2*(43*k1^2 + 75*(k2^2 - k3^2)) + 
     28*b1^2*(-1 + F^2)^2*k1^2*k2^2*k3^2*(37*k1^2 + 81*(k2^2 - k3^2)) + 
     b1*(-1 + F^2)*(132*(-1 + F^2)*k1^8 + 
       243*k1^6*((-4 + 4*F^2 - 7*f1)*k2^2 - 4*(-1 + F^2)*k3^2) + 
       15*((-288 + 288*F^2 + 1925*f1)*k2^2 + (24 - 24*F^2 - 1925*f1)*k3^2)*
        (k2^3 - k2*k3^2)^2 + k1^4*((-1480 + 1480*F^2 + 5733*f1)*k2^4 + 
         (2302 - 2302*F^2 - 2555*f1)*k2^2*k3^2 + 1080*(-1 + F^2)*k3^4) + 
       k1^2*(189*(-16 + 16*F^2 + 185*f1)*k2^6 - 
         2*(-1471 + 1471*F^2 + 32256*f1)*k2^4*k3^2 + 
         9*(-30 + 30*F^2 + 3283*f1)*k2^2*k3^4)) - 
     2*(-1 + F^2)*f1*(66*k1^8 + k1^6*(508*k2^2 - 552*k3^2) - 
       180*(12*k2^2 - k3^2)*(k2^3 - k2*k3^2)^2 + 
       k1^4*(722*k2^4 - 1785*k2^2*k3^2 + 978*k3^4) + 
       k1^2*(-1216*k2^6 + 195*k2^4*k3^2 + 1337*k2^2*k3^4 - 492*k3^6)) - 
     32*(-1 + F^2)^2*k1^2*k2^2*((-7*(c2 - c4)*k1^2*k3^2)/Sqrt[2] + 
       ((c2 + c4)*(-6*k2^4 + 4*k2^2*k3^2 + k1^2*(4*k2^2 - 6*k3^2)))/Sqrt[2]))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(28672*F^12*k1^12*k2^6*k3^6) + 
  ((-1 + F^2)^2*f1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^4*
    (140*f1^2*k1^2*(81*k1^2*k3^2*(k2^2 - k3^2) - 18*(4*k2^2 - 3*k3^2)*
        (k2^2 - k3^2)^2 + k1^4*(8*k2^2 + 27*k3^2)) + 
     8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*(22*k1^6 + 
       k1^4*(32*k2^2 - 65*k3^2) - 180*(k2^3 - k2*k3^2)^2 - 
       27*k1^2*(6*k2^4 - 5*k2^2*k3^2 - k3^4)) + 4*b1*(-1 + F^2)^2*k1^2*
      (k1^4*(154*k2^2 + 61*k3^2) + 189*k1^2*(6*k2^4 - 5*k2^2*k3^2 - k3^4) + 
       12*(109*k2^6 - 211*k2^4*k3^2 + 105*k2^2*k3^4 + k3^6)) - 
     (-1 + F^2)*f1*(352*k1^8 - 3*k1^4*(k2^2 - k3^2)*((304 + 3906*b1)*k2^2 + 
         3*(12 - 497*b1)*k3^2) + k1^6*(2*(516 + 707*b1)*k2^2 - 
         (908 + 105*b1)*k3^2) - 15*(k2^2 - k3^2)^2*(6*(48 + 385*b1)*k2^4 - 
         (144 + 2695*b1)*k2^2*k3^2 + 385*b1*k3^4) - 
       3*k1^2*(30*(44 + 511*b1)*k2^6 - 3*(704 + 11445*b1)*k2^4*k3^2 + 
         8*(103 + 2835*b1)*k2^2*k3^4 - 3675*b1*k3^6)))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(57344*F^12*k1^10*k2^8*k3^6), 
 (Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (7*b1^3*(-1 + F^2)^2*f1*k1^2*k2^2*(k1^2 - k2^2)*k3^4*
      (5*k1^8 + 20*k1^6*(k2^2 - k3^2) + 20*k1^2*(k2^2 - k3^2)^3 + 
       5*(k2^2 - k3^2)^4 + 2*k1^4*(7*k2^4 - 30*k2^2*k3^2 + 15*k3^4)) + 
     2*b1*f1*(14*f1^2*k1^2*k2^4*k3^4*(5*k1^8 - 18*k1^4*(k2^2 - k3^2)^2 + 
         5*(k2^2 - k3^2)^4 + 4*k1^6*(-3*k2^2 + k3^2) + 4*k1^2*(k2^2 - k3^2)^2*
          (5*k2^2 + k3^2)) + Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k3^4*
        (-3*k1^14 - 3*k1^12*(k2^2 - 7*k3^2) + k1^10*(23*k2^4 + 42*k2^2*k3^2 - 
           63*k3^4) - 3*(k2^2 - k3^2)^5*(k2^4 - 4*k2^2*k3^2 + k3^4) - 
         k1^4*(k2^2 - k3^2)^3*(37*k2^4 - 96*k2^2*k3^2 + 63*k3^4) - 
         k1^2*(k2^2 - k3^2)^3*(23*k2^6 - 93*k2^4*k3^2 + 75*k2^2*k3^4 - 
           21*k3^6) + k1^8*(107*k2^6 + 17*k2^4*k3^2 - 165*k2^2*k3^4 + 
           105*k3^6) + k1^6*(131*k2^8 - 60*k2^6*k3^2 - 266*k2^4*k3^4 + 
           300*k2^2*k3^6 - 105*k3^8)) + (-1 + F^2)*f1*k2^2*
        (-3*k1^14*(k2^2 - 2*k3^2) - 3*k1^12*(7*k2^4 + 3*k2^2*k3^2 - 
           40*k3^4) + 3*(k2^2 - k3^2)^6*(3*k2^4 + 3*k2^2*k3^2 + 8*k3^4) + 
         k1^10*(141*k2^6 - 144*k2^4*k3^2 + 527*k2^2*k3^4 - 490*k3^6) - 
         k1^2*(k2^2 - k3^2)^4*(9*k2^6 - 24*k2^4*k3^2 - 129*k2^2*k3^4 + 
           46*k3^6) - k1^4*(k2^2 - k3^2)^2*(87*k2^8 - 51*k2^6*k3^2 - 
           495*k2^4*k3^4 + 435*k2^2*k3^6 - 88*k3^8) + 
         k1^8*(-285*k2^8 + 501*k2^6*k3^2 + 605*k2^4*k3^4 - 1405*k2^2*k3^6 + 
           664*k3^8) + k1^6*(255*k2^10 - 594*k2^8*k3^2 + 1046*k2^6*k3^4 - 
           1664*k2^4*k3^6 + 1323*k2^2*k3^8 - 366*k3^10))) + 
     b1^2*(-1 + F^2)*(-32*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k2^4*k3^6*
        (k2^2 - k3^2)*(k1^4 - (k2^2 - k3^2)^2) + 56*f1^2*k1^2*k2^2*k3^4*
        (2*k1^10 + k1^8*(6*k2^2 - 5*k3^2) + (k2^2 - k3^2)^4*
          (2*k2^2 + 3*k3^2) + k1^6*(-8*k2^4 + 4*k2^2*k3^2) + 
         2*k1^2*(k2^2 - k3^2)^2*(3*k2^4 + 8*k2^2*k3^2 - 5*k3^4) + 
         k1^4*(-8*k2^6 + 50*k2^4*k3^2 - 36*k2^2*k3^4 + 10*k3^6)) - 
       (-1 + F^2)*f1*(3*k1^14*(2*k2^4 + 5*k2^2*k3^2 - 14*k3^4) + 
         18*k2^4*(k2^2 - k3^2)^5*(k2^4 + 2*k2^2*k3^2 - k3^4) + 
         k1^12*(-42*k2^6 + 48*k2^4*k3^2 - 69*k2^2*k3^4 + 252*k3^6) + 
         k1^10*(102*k2^8 - 243*k2^6*k3^2 + 229*k2^4*k3^4 + 400*k2^2*k3^6 - 
           630*k3^8) - k1^2*(k2^2 - k3^2)^4*(78*k2^8 - 99*k2^6*k3^2 + 
           19*k2^4*k3^4 - 106*k2^2*k3^6 + 42*k3^8) - 
         2*k1^8*(45*k2^10 - 117*k2^8*k3^2 - 574*k2^6*k3^4 + 85*k2^4*k3^6 + 
           605*k2^2*k3^8 - 420*k3^10) + k1^4*(k2^2 - k3^2)^2*
          (114*k2^10 + 96*k2^8*k3^2 + 473*k2^6*k3^4 + 338*k2^4*k3^6 - 
           601*k2^2*k3^8 + 252*k3^10) - k1^6*(30*k2^12 + 279*k2^10*k3^2 - 
           1928*k2^8*k3^4 + 560*k2^6*k3^6 + 1228*k2^4*k3^8 - 
           1695*k2^2*k3^10 + 630*k3^12))) - 16*f1^2*k1^2*k2^2*k3^2*
      (k1^2 + k2^2 - k3^2)*(f1*k2^2*(k2^2 - k3^2)*
        (3*k1^6 + k1^4*(-9*k2^2 + 4*k3^2) - (k2^2 - k3^2)^2*
          (3*k2^2 + 4*k3^2) + k1^2*(9*k2^4 - 6*k2^2*k3^2 - 3*k3^4)) + 
       4*(-1 + F^2)*k3^2*((7*(c2 - c4)*k1^2*k2^2*(k1^4 + 
            k1^2*(4*k2^2 - 2*k3^2) + (k2^2 - k3^2)^2))/Sqrt[2] + 
         ((c2 + c4)*(k1^8 + k1^6*(8*k2^2 - 4*k3^2) + (k2^2 - k3^2)^4 + 
            4*k1^2*(k2^2 - k3^2)^2*(2*k2^2 - k3^2) + 
            k1^4*(24*k2^4 - 20*k2^2*k3^2 + 6*k3^4)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(448*F^6*k1^7*k2^7*k3^4) + 
  (Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (7*b1^3*(-1 + F^2)^2*f1*k1^2*k3^4*(7*k1^10 + 5*k1^8*(8*k2^2 - 7*k3^2) + 
       5*k1^2*(11*k2^2 - 7*k3^2)*(k2^2 - k3^2)^3 + (12*k2^2 - 7*k3^2)*
        (k2^2 - k3^2)^4 + 2*k1^6*(37*k2^4 - 80*k2^2*k3^2 + 35*k3^4) + 
       2*k1^4*(50*k2^6 - 143*k2^4*k3^2 + 120*k2^2*k3^4 - 35*k3^6)) - 
     b1^2*(-1 + F^2)*(32*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k2^6*k3^2*
        (k2^2 - k3^2)*(k1^4 - (k2^2 - k3^2)^2) + 56*f1^2*k1^2*k2^4*
        (2*k1^10 + 4*k1^6*k3^2*(k2^2 - 2*k3^2) + (k2^2 - k3^2)^4*
          (3*k2^2 + 2*k3^2) + k1^8*(-5*k2^2 + 6*k3^2) - 
         2*k1^2*(k2^2 - k3^2)^2*(5*k2^4 - 8*k2^2*k3^2 - 3*k3^4) + 
         2*k1^4*(5*k2^6 - 18*k2^4*k3^2 + 25*k2^2*k3^4 - 4*k3^6)) + 
       (-1 + F^2)*f1*(k1^14*k3^2 + k1^12*(-196*k2^4 + 97*k2^2*k3^2 - 
           8*k3^4) - 66*k3^2*(k2^2 - k3^2)^5*(k2^4 + 2*k2^2*k3^2 - k3^4) - 
         k1^2*(k2^2 - k3^2)^4*(84*k2^6 - 206*k2^4*k3^2 + 381*k2^2*k3^4 - 
           193*k3^6) + k1^10*(700*k2^6 - 832*k2^4*k3^2 - 157*k2^2*k3^4 - 
           49*k3^6) + k1^4*(k2^2 - k3^2)^2*(140*k2^8 - 975*k2^6*k3^2 + 
           54*k2^4*k3^4 + 225*k2^2*k3^6 - 116*k3^8) - 
         2*k1^8*(420*k2^8 - 836*k2^6*k3^2 + 779*k2^4*k3^4 + 124*k2^2*k3^6 - 
           95*k3^8) + k1^6*(280*k2^10 - 607*k2^8*k3^2 + 514*k2^6*k3^4 - 
           1480*k2^4*k3^6 + 542*k2^2*k3^8 - 145*k3^10))) + 
     16*f1^2*k1^2*k2^2*(k1^2 - k2^2 + k3^2)*
      (2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*k2^2*(k1^8 - 4*k1^6*(k2^2 - 2*k3^2) - 
         4*k1^2*(k2^2 - 2*k3^2)*(k2^2 - k3^2)^2 + (k2^2 - k3^2)^4 + 
         k1^4*(6*k2^4 - 20*k2^2*k3^2 + 24*k3^4)) + 
       k3^2*(14*Sqrt[2]*(c2 - c4)*(-1 + F^2)*k1^2*k2^2*
          (k1^4 - 2*k1^2*(k2^2 - 2*k3^2) + (k2^2 - k3^2)^2) + 
         f1*(k2^2 - k3^2)*(-3*k1^6 + (k2^2 - k3^2)^2*(4*k2^2 + 3*k3^2) + 
           k1^4*(-4*k2^2 + 9*k3^2) + 3*k1^2*(k2^4 + 2*k2^2*k3^2 - 
             3*k3^4)))) - 2*b1*f1*(14*f1^2*k1^2*k2^4*k3^2*
        (5*k1^8 + 4*k1^6*(k2^2 - 3*k3^2) - 18*k1^4*(k2^2 - k3^2)^2 + 
         5*(k2^2 - k3^2)^4 + 4*k1^2*(k2^2 - k3^2)^2*(k2^2 + 5*k3^2)) + 
       (-1 + F^2)*f1*(k1^14*(6*k2^2 - 3*k3^2) + 
         3*k1^12*(40*k2^4 - 3*k2^2*k3^2 - 7*k3^4) + 3*(k2^2 - k3^2)^6*
          (8*k2^4 + 3*k2^2*k3^2 + 3*k3^4) - k1^2*(k2^2 - k3^2)^4*
          (46*k2^6 - 129*k2^4*k3^2 - 24*k2^2*k3^4 + 9*k3^6) + 
         k1^10*(-490*k2^6 + 527*k2^4*k3^2 - 144*k2^2*k3^4 + 141*k3^6) + 
         k1^8*(664*k2^8 - 1405*k2^6*k3^2 + 605*k2^4*k3^4 + 501*k2^2*k3^6 - 
           285*k3^8) + k1^4*(k2^2 - k3^2)^2*(88*k2^8 - 435*k2^6*k3^2 + 
           495*k2^4*k3^4 + 51*k2^2*k3^6 - 87*k3^8) + 
         k1^6*(-366*k2^10 + 1323*k2^8*k3^2 - 1664*k2^6*k3^4 + 
           1046*k2^4*k3^6 - 594*k2^2*k3^8 + 255*k3^10)) - 
       (-1 + F^2)^2*(7*Sqrt[2]*(c2 - c4)*k1^2*k3^4*
          (k1^10 + 10*k1^8*(k2^2 - k3^2) + 40*k1^4*(k2^2 - k3^2)^3 + 
           25*k1^2*(k2^2 - k3^2)^4 + 6*(k2^2 - k3^2)^5 + 
           2*k1^6*(7*k2^4 - 30*k2^2*k3^2 + 15*k3^4)) + 
         ((c2 + c4)*(k1^14*k3^2 + 2*k1^12*(-12*k2^4 + 8*k2^2*k3^2 + k3^4) + 
            2*k1^4*(k2^2 - k3^2)^3*(60*k2^6 - 66*k2^4*k3^2 + 129*k2^2*k3^4 - 
              127*k3^6) + k1^10*(96*k2^6 - 125*k2^4*k3^2 + 66*k2^2*k3^4 - 
              89*k3^6) + 6*(k2^2 - k3^2)^5*(4*k2^6 + k2^4*k3^2 - 
              4*k2^2*k3^4 + k3^6) - 2*k1^8*(60*k2^8 - 119*k2^6*k3^2 + 
              33*k2^4*k3^4 + 325*k2^2*k3^6 - 155*k3^8) - k1^2*(k2^2 - k3^2)^3*
             (96*k2^8 - 245*k2^6*k3^2 + 111*k2^4*k3^4 + 53*k2^2*k3^6 - 
              47*k3^8) + k1^6*(-57*k2^8*k3^2 + 828*k2^6*k3^4 - 
              1686*k2^4*k3^6 + 1340*k2^2*k3^8 - 425*k3^10)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(448*F^6*k1^7*k2^3*k3^6) + 
  (Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (-7*b1^3*(-1 + F^2)^2*f1*k1^2*k2^2*k3^4*(5*k1^8*(k2^2 + k3^2) + 
       20*k1^2*(k2^2 - k3^2)^3*(k2^2 + k3^2) + 5*(k2^2 - k3^2)^4*
        (k2^2 + k3^2) + 20*k1^6*(k2^4 - k3^4) + 
       k1^4*(46*k2^6 - 46*k2^4*k3^2 - 30*k2^2*k3^4 + 30*k3^6)) + 
     b1^2*(-1 + F^2)*(-32*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^6*k2^4*k3^2*
        (k2^2 - k3^2)*(k1^4 - (k2^2 - k3^2)^2) + 56*f1^2*k1^2*k2^2*
        (k2^2 - k3^2)*(5*(k2^2 - k3^2)^4*(k2^4 + k2^2*k3^2 + k3^4) + 
         6*k1^4*(k2^2 - k3^2)^2*(5*k2^4 + 3*k2^2*k3^2 + 5*k3^4) + 
         k1^8*(5*k2^4 + 9*k2^2*k3^2 + 5*k3^4) - 20*k1^6*(k2^6 + k3^6) - 
         4*k1^2*(k2^2 - k3^2)^2*(5*k2^6 - 2*k2^4*k3^2 - 2*k2^2*k3^4 + 
           5*k3^6)) + (-1 + F^2)*f1*(7*k1^12*k3^2*(k2^4 + 5*k2^2*k3^2 - 
           6*k3^4) - 42*(k2^2 - k3^2)^5*(2*k2^8 + 2*k2^6*k3^2 + 3*k2^4*k3^4 + 
           2*k2^2*k3^6 - k3^8) + 5*k1^4*(k2^2 - k3^2)^3*
          (56*k2^8 + 15*k2^6*k3^2 - 160*k2^4*k3^4 - 21*k2^2*k3^6 + 
           126*k3^8) + k1^10*(-196*k2^8 - 57*k2^6*k3^2 + 162*k2^4*k3^4 - 
           189*k2^2*k3^6 + 252*k3^8) + k1^8*(700*k2^10 - 474*k2^8*k3^2 - 
           896*k2^6*k3^4 - 72*k2^4*k3^6 + 700*k2^2*k3^8 - 630*k3^10) + 
         k1^2*(k2^2 - k3^2)^3*(140*k2^10 - 545*k2^8*k3^2 - 161*k2^6*k3^4 + 
           253*k2^4*k3^6 + 469*k2^2*k3^8 - 252*k3^10) - 
         2*k1^6*(420*k2^12 - 735*k2^10*k3^2 + 424*k2^8*k3^4 - 662*k2^6*k3^6 - 
           56*k2^4*k3^8 + 805*k2^2*k3^10 - 420*k3^12))) - 
     8*f1^2*k2^2*(k2^2 - k3^2)*(-k1^4 + (k2^2 - k3^2)^2)*
      (((c2 + c4)*(-1 + F^2)*(k1^10 - k1^8*(k2^2 + k3^2) + 
          k1^6*(-6*k2^4 + 7*k2^2*k3^2 - 6*k3^4) - k1^2*(k2^2 - k3^2)^2*
           (11*k2^4 + 41*k2^2*k3^2 + 11*k3^4) + 3*(k2^2 - k3^2)^2*
           (k2^6 + 6*k2^4*k3^2 + 6*k2^2*k3^4 + k3^6) + 
          k1^4*(14*k2^6 + k2^4*k3^2 + k2^2*k3^4 + 14*k3^6)))/Sqrt[2] + 
       k2^2*k3^2*(2*f1*k1^2*(4*k1^4 - 3*(k2^2 - k3^2)^2 - 
           k1^2*(k2^2 + k3^2)) + (7*(c2 - c4)*(-1 + F^2)*
           (k1^6 - 5*k1^2*(k2^2 - k3^2)^2 + k1^4*(k2^2 + k3^2) + 
            3*(k2^2 - k3^2)^2*(k2^2 + k3^2)))/Sqrt[2])) + 
     2*b1*f1*(((c2 + c4)*(-1 + F^2)^2*(k1^14*(4*k2^4 + k2^2*k3^2 - 6*k3^4) + 
          k1^12*(-60*k2^6 + 18*k2^4*k3^2 + 42*k3^6) + 
          k1^10*(228*k2^8 - 233*k2^6*k3^2 + 38*k2^4*k3^4 + 27*k2^2*k3^6 - 
            126*k3^8) + 6*(k2^2 - k3^2)^5*(2*k2^8 + 2*k2^6*k3^2 + 
            13*k2^4*k3^4 + 2*k2^2*k3^6 - k3^8) - 6*k1^4*(k2^2 - k3^2)^3*
           (14*k2^8 + 7*k2^6*k3^2 - 87*k2^4*k3^4 - 3*k2^2*k3^6 + 21*k3^8) - 
          k1^2*(k2^2 - k3^2)^4*(20*k2^8 - 57*k2^6*k3^2 - 318*k2^4*k3^4 - 
            37*k2^2*k3^6 + 42*k3^8) - 2*k1^8*(190*k2^10 - 278*k2^8*k3^2 - 
            93*k2^6*k3^4 + 105*k2^4*k3^6 + 85*k2^2*k3^8 - 105*k3^10) + 
          k1^6*(300*k2^12 - 641*k2^10*k3^2 + 558*k2^8*k3^4 - 886*k2^6*k3^6 + 
            280*k2^4*k3^8 + 375*k2^2*k3^10 - 210*k3^12)))/Sqrt[2] + 
       2*k2^2*(7*f1^2*k1^2*k2^2*k3^2*(k2^2 - k3^2)*(5*k1^8 - 
           18*k1^4*(k2^2 - k3^2)^2 + 5*(k2^2 - k3^2)^4 + 
           4*k1^6*(k2^2 + k3^2) + 4*k1^2*(k2^2 - k3^2)^2*(k2^2 + k3^2)) + 
         (7*(c2 - c4)*(-1 + F^2)^2*k2^2*k3^4*(k1^10 + 10*k1^8*(k2^2 - k3^2) + 
            40*k1^4*(k2^2 - k3^2)^3 + 25*k1^2*(k2^2 - k3^2)^4 + 
            6*(k2^2 - k3^2)^5 + 2*k1^6*(7*k2^4 - 30*k2^2*k3^2 + 15*k3^4)))/
          Sqrt[2] + (-1 + F^2)*f1*(k2^2 - k3^2)*(39*k1^12*(k2^2 + k3^2) + 
           6*k1^6*(k2^2 - k3^2)^2*(12*k2^4 + 13*k2^2*k3^2 + 12*k3^4) - 
           k1^2*(k2^2 - k3^2)^4*(32*k2^4 + 67*k2^2*k3^2 + 32*k3^4) - 
           k1^10*(104*k2^4 + 19*k2^2*k3^2 + 104*k3^4) + 21*(k2^2 - k3^2)^4*
            (k2^6 + k2^4*k3^2 + k2^2*k3^4 + k3^6) - k1^4*(k2^2 - k3^2)^2*
            (43*k2^6 - 11*k2^4*k3^2 - 11*k2^2*k3^4 + 43*k3^6) + 
           k1^8*(47*k2^6 - 49*k2^4*k3^2 - 49*k2^2*k3^4 + 47*k3^6)))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(448*F^6*k1^5*k2^7*k3^6), 
 (f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (56*b1^3*(-1 + F^2)^3*k1^4*k2^4*k3^4*(7*k1^4 + 10*k1^2*(k2^2 - k3^2) + 
       5*(k2^2 - k3^2)^2) - b1^2*(-1 + F^2)^2*(15*(-1 + F^2)*k1^14*k2^2 - 
       336*(-1 + F^2)*k2^6*(k2^2 - k3^2)^5 + 
       3*k1^12*(6*(-1 + F^2)*k2^4 + 20*(-1 + F^2)*k2^2*k3^2 - 
         49*(-4 + 4*F^2 - 5*f1)*k3^4) + k1^10*(21*(-1 + F^2)*k2^6 + 
         516*(-1 + F^2)*k2^4*k3^2 + 10*(221 - 221*F^2 + 203*f1)*k2^2*k3^4 + 
         980*(-2 + 2*F^2 - 3*f1)*k3^6) - k1^2*(k2^2 - k3^2)^3*
        (429*(-1 + F^2)*k2^8 + 627*(-1 + F^2)*k2^6*k3^2 + 
         6*(138 - 138*F^2 + 245*f1)*k2^4*k3^4 + 14*(-46 + 46*F^2 - 105*f1)*
          k2^2*k3^6 - 392*(-1 + F^2)*k3^8) - 
       2*k1^8*(162*(-1 + F^2)*k2^8 - 300*(-1 + F^2)*k2^6*k3^2 + 
         (-1676 + 1676*F^2 + 595*f1)*k2^4*k3^4 + 10*(215 - 215*F^2 + 203*f1)*
          k2^2*k3^6 + 245*(-4 + 4*F^2 - 9*f1)*k3^8) + 5*k1^4*(k2^2 - k3^2)^2*
        (186*(-1 + F^2)*k2^8 - 480*(-1 + F^2)*k2^6*k3^2 + 
         (54 - 54*F^2 - 637*f1)*k2^4*k3^4 + 6*(52 - 52*F^2 + 147*f1)*k2^2*
          k3^6 + 49*(-4 + 4*F^2 + 3*f1)*k3^8) + 
       k1^6*(105*(-1 + F^2)*k2^10 - 600*(-1 + F^2)*k2^8*k3^2 - 
         4*(-403 + 403*F^2 + 1190*f1)*k2^6*k3^4 + 
         4*(-643 + 643*F^2 + 1841*f1)*k2^4*k3^6 + 5*(93 - 93*F^2 + 112*f1)*
          k2^2*k3^8 - 2940*f1*k3^10)) + b1*(-1 + F^2)*
      (56*f1^2*k1^2*k2^2*k3^4*(5*k1^8 + 12*k1^6*(6*k2^2 - 5*k3^2) - 
         35*(k2^2 - k3^2)^4 - 20*k1^2*(k2^2 - k3^2)^2*(4*k2^2 - k3^2) + 
         2*k1^4*(7*k2^4 - 58*k2^2*k3^2 + 35*k3^4)) + 8*Sqrt[2]*(c2 + c4)*
        (-1 + F^2)^2*k3^4*(-11*k1^12 + 14*k3^2*(-k2^2 + k3^2)^5 + 
         k1^10*(-40*k2^2 + 41*k3^2) + k1^8*(-54*k2^4 + 98*k2^2*k3^2 - 
           40*k3^4) + k1^2*(k2^2 - k3^2)^3*(24*k2^4 - 103*k2^2*k3^2 + 
           59*k3^4) + k1^6*(-8*k2^6 + 6*k2^4*k3^2 + 32*k2^2*k3^4 - 30*k3^6) + 
         k1^4*(25*k2^8 - 212*k2^6*k3^2 + 402*k2^4*k3^4 - 300*k2^2*k3^6 + 
           85*k3^8)) + (-1 + F^2)*f1*(75*k1^14*k3^2 + 336*k2^2*k3^2*
          (k2^2 - k3^2)^5*(2*k2^2 - k3^2) + k1^12*(-144*k2^4 + 
           666*k2^2*k3^2 - 1075*k3^4) + k1^10*(144*k2^6 - 87*k2^4*k3^2 - 
           2873*k2^2*k3^4 + 3130*k3^6) + k1^8*(96*k2^8 - 3204*k2^6*k3^2 + 
           2370*k2^4*k3^4 + 4136*k2^2*k3^6 - 3270*k3^8) - 
         k1^4*(k2^2 - k3^2)^2*(720*k2^8 - 2058*k2^6*k3^2 - 2549*k2^4*k3^4 + 
           3144*k2^2*k3^6 - 905*k3^8) + k1^2*(k2^2 - k3^2)^3*
          (336*k2^8 + 1551*k2^6*k3^2 - 920*k2^4*k3^4 - 907*k2^2*k3^6 + 
           420*k3^8) + k1^6*(288*k2^10 - 1011*k2^8*k3^2 + 7006*k2^6*k3^4 - 
           5668*k2^4*k3^6 + 522*k2^2*k3^8 + 655*k3^10))) + 
     16*f1*k1^2*(14*f1^2*k1^2*k2^4*k3^4*(k1^4 - 2*k1^2*(k2^2 - k3^2) - 
         5*(k2^2 - k3^2)^2) - (-1 + F^2)*f1*k2^2*(3*k1^10*(k2^2 - 2*k3^2) + 
         k1^8*(-9*k2^4 + 3*k2^2*k3^2 + 4*k3^4) + 5*(k2^2 - k3^2)^4*
          (3*k2^4 + 3*k2^2*k3^2 + 8*k3^4) + k1^6*(-6*k2^6 + 60*k2^4*k3^2 - 
           80*k2^2*k3^4 + 40*k3^6) - k1^2*(k2^2 - k3^2)^2*
          (45*k2^6 - 24*k2^4*k3^2 - 57*k2^2*k3^4 + 50*k3^6) + 
         2*k1^4*(21*k2^8 - 63*k2^6*k3^2 + 39*k2^4*k3^4 + 17*k2^2*k3^6 - 
           14*k3^8)) + 2*(-1 + F^2)^2*k3^4*(28*Sqrt[2]*(c2 - c4)*k1^4*k2^4*
          (k1^2 + k2^2 - k3^2) + ((c2 + c4)*(5*k1^10 + 
            k1^8*(11*k2^2 - 25*k3^2) + 5*(k2^2 - k3^2)^3*
             (k2^4 - 4*k2^2*k3^2 + k3^4) + k1^2*(k2^2 - k3^2)^2*
             (31*k2^4 - 66*k2^2*k3^2 + 25*k3^4) + 
            k1^6*(52*k2^4 - 68*k2^2*k3^2 + 50*k3^4) + 
            2*k1^4*(32*k2^6 - 76*k2^4*k3^2 + 69*k2^2*k3^4 - 25*k3^6)))/
          Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(1792*F^8*k1^9*k2^7*k3^4) + 
  (f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (7*b1^3*(-1 + F^2)^3*k1^2*k2^2*k3^2*(3*k1^10 + 60*k1^8*(k2^2 - k3^2) - 
       112*(k2^2 - k3^2)^5 + 2*k1^6*(53*k2^4 - 90*k2^2*k3^2 + 25*k3^4) - 
       5*k1^2*(k2^2 - k3^2)^2*(49*k2^4 - 98*k2^2*k3^2 + 57*k3^4) - 
       20*k1^4*(5*k2^6 - 15*k2^4*k3^2 + 19*k2^2*k3^4 - 9*k3^6)) + 
     b1^2*(-1 + F^2)^2*k2^2*(14*(-1 + F^2)*k1^14 - 1232*(-1 + F^2)*k2^2*k3^2*
        (k2^2 - k3^2)^5 + k1^12*(-378*(-1 + F^2)*k2^2 + 
         19*(2 - 2*F^2 + 21*f1)*k3^2) + k1^10*(-1092*(-1 + F^2)*k2^4 - 
         35*(-11 + 11*F^2 - 36*f1)*k2^2*k3^2 + 2*(-394 + 394*F^2 - 1715*f1)*
          k3^4) - k1^4*(k2^2 - k3^2)^2*(1666*(-1 + F^2)*k2^6 + 
         (3898 - 3898*F^2 + 6825*f1)*k2^4*k3^2 + 
         2*(-3629 + 3629*F^2 - 1365*f1)*k2^2*k3^4 + 
         (2706 - 2706*F^2 - 6055*f1)*k3^6) - k1^2*(k2^2 - k3^2)^3*
        (1568*(-1 + F^2)*k2^6 + (751 - 751*F^2 + 3136*f1)*k2^4*k3^2 + 
         (-2663 + 2663*F^2 - 1862*f1)*k2^2*k3^4 - 2*(-860 + 860*F^2 + 637*f1)*
          k3^6) + 2*k1^8*(1022*(-1 + F^2)*k2^6 + (2872 - 2872*F^2 - 791*f1)*
          k2^4*k3^2 + 30*(-80 + 80*F^2 - 133*f1)*k2^2*k3^4 + 
         (934 - 934*F^2 + 4585*f1)*k3^6) + 2*k1^6*(875*(-1 + F^2)*k2^8 + 
         (2987 - 2987*F^2 - 4578*f1)*k2^6*k3^2 + 56*(-37 + 37*F^2 + 55*f1)*
          k2^4*k3^4 + (19 - 19*F^2 + 7070*f1)*k2^2*k3^6 + 
         (-59 + 59*F^2 - 5460*f1)*k3^8)) - b1*(-1 + F^2)*
      (56*f1^2*k1^2*k2^6*(5*k1^8 + 20*k1^2*(k2^2 - 4*k3^2)*(k2^2 - k3^2)^2 - 
         35*(k2^2 - k3^2)^4 + k1^6*(-60*k2^2 + 72*k3^2) + 
         2*k1^4*(35*k2^4 - 58*k2^2*k3^2 + 7*k3^4)) + 14*Sqrt[2]*(c2 - c4)*
        (-1 + F^2)^2*k1^2*k2^2*k3^2*(k1^10 - 20*k1^8*(k2^2 - k3^2) + 
         20*k1^4*(k2^2 - k3^2)^3 + 105*k1^2*(k2^2 - k3^2)^4 + 
         56*(k2^2 - k3^2)^5 - 2*k1^6*(33*k2^4 - 50*k2^2*k3^2 + 25*k3^4)) + 
       2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*
        (k1^14 + 56*k2^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^5 + 
         k1^12*(-34*k2^2 + 6*k3^2) - 3*k1^10*(15*k2^4 + 49*k2^2*k3^2 - 
           50*k3^4) + 4*k1^8*(71*k2^6 - 242*k2^4*k3^2 + 255*k2^2*k3^4 - 
           100*k3^6) + k1^2*(k2^2 - k3^2)^3*(181*k2^6 + 404*k2^4*k3^2 - 
           881*k2^2*k3^4 + 376*k3^6) + k1^6*(-41*k2^8 + 102*k2^6*k3^2 - 
           216*k2^4*k3^4 + 210*k2^2*k3^6 - 55*k3^8) + 
         k1^4*(-514*k2^10 + 2738*k2^8*k3^2 - 5628*k2^6*k3^4 + 
           5900*k2^4*k3^6 - 3170*k2^2*k3^8 + 674*k3^10)) - 
       (-1 + F^2)*f1*(21*k1^14*k3^2 + k1^12*(-48*k2^4 + 833*k2^2*k3^2 - 
           462*k3^4) - 112*(k2^2 - k3^2)^5*(4*k2^6 + 12*k2^4*k3^2 - 
           2*k2^2*k3^4 - 3*k3^6) + k1^10*(-320*k2^6 + 2622*k2^4*k3^2 - 
           4515*k2^2*k3^4 + 2331*k3^6) + k1^2*(k2^2 - k3^2)^3*
          (640*k2^8 - 5340*k2^6*k3^2 + 1873*k2^4*k3^4 + 3104*k2^2*k3^6 - 
           2037*k3^8) - 2*k1^8*(368*k2^8 - 1269*k2^6*k3^2 + 4292*k2^4*k3^4 - 
           6137*k2^2*k3^6 + 2730*k3^8) - k1^4*(k2^2 - k3^2)^2*
          (1456*k2^8 + 2763*k2^6*k3^2 + 1736*k2^4*k3^4 - 9473*k2^2*k3^6 + 
           5166*k3^8) + k1^6*(2368*k2^10 - 9335*k2^8*k3^2 + 726*k2^6*k3^4 + 
           18052*k2^4*k3^6 - 20638*k2^2*k3^8 + 7035*k3^10))) - 
     16*f1*k1^2*k2^2*(14*f1^2*k1^2*k2^4*k3^2*(k1^4 + 2*k1^2*(k2^2 - k3^2) - 
         5*(k2^2 - k3^2)^2) + (-1 + F^2)*f1*(k1^10*(6*k2^2 - 3*k3^2) - 
         5*(k2^2 - k3^2)^4*(8*k2^4 + 3*k2^2*k3^2 + 3*k3^4) + 
         k1^8*(-4*k2^4 - 3*k2^2*k3^2 + 9*k3^4) + 
         k1^6*(-40*k2^6 + 80*k2^4*k3^2 - 60*k2^2*k3^4 + 6*k3^6) + 
         k1^2*(k2^2 - k3^2)^2*(50*k2^6 - 57*k2^4*k3^2 - 24*k2^2*k3^4 + 
           45*k3^6) + 2*k1^4*(14*k2^8 - 17*k2^6*k3^2 - 39*k2^4*k3^4 + 
           63*k2^2*k3^6 - 21*k3^8)) + (-1 + F^2)^2*
        (7*Sqrt[2]*(c2 - c4)*k1^2*k3^2*(5*k1^6*k3^2 + 
           10*k3^2*(k2^2 - k3^2)^3 + 4*k1^4*(2*k2^4 + 5*k2^2*k3^2 - 5*k3^4) + 
           k1^2*(-8*k2^6 + 33*k2^4*k3^2 - 50*k2^2*k3^4 + 25*k3^6)) + 
         ((c2 + c4)*(5*k1^10*k3^2 + k1^8*(-8*k2^4 + 10*k2^2*k3^2 + 40*k3^4) + 
            k1^6*(-16*k2^6 + 54*k2^4*k3^2 + 240*k2^2*k3^4 - 210*k3^6) + 
            10*(k2^2 - k3^2)^3*(4*k2^6 + k2^4*k3^2 - 4*k2^2*k3^4 + k3^6) - 
            k1^2*(k2^2 - k3^2)^2*(112*k2^6 - 117*k2^4*k3^2 - 70*k2^2*k3^4 + 
              95*k3^6) + k1^4*(96*k2^8 - 284*k2^6*k3^2 + 498*k2^4*k3^4 - 
              580*k2^2*k3^6 + 270*k3^8)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(1792*F^8*k1^9*k2^5*k3^6) + 
  (f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (-7*b1^3*(-1 + F^2)^3*k1^2*k2^4*k3^2*(5*k1^8 + 20*k1^6*(k2^2 - k3^2) - 
       60*k1^2*(k2^2 - k3^2)^3 - 35*(k2^2 - k3^2)^4 + 
       k1^4*(-26*k2^4 + 20*k2^2*k3^2 + 6*k3^4)) - 
     b1^2*(-1 + F^2)^2*(7*(-1 + F^2)*k1^12*k2^2*(2*k2^2 - 5*k3^2) - 
       392*(-1 + F^2)*(k2^2 - k3^2)^5*(4*k2^6 + 3*k2^4*k3^2 + k3^6) - 
       49*k1^2*(k2^2 - k3^2)^4*(34*(-1 + F^2)*k2^6 + 3*(-22 + 22*F^2 + 15*f1)*
          k2^4*k3^2 + 5*(-4 + 4*F^2 + 3*f1)*k3^6) - 
       7*k1^10*(54*(-1 + F^2)*k2^6 + 9*(-2 + 2*F^2 - 5*f1)*k2^4*k3^2 + 
         20*(-1 + F^2 + 4*f1)*k2^2*k3^4 + 21*(4 - 4*F^2 + 5*f1)*k3^6) - 
       2*k1^8*(546*(-1 + F^2)*k2^8 + (163 - 163*F^2 + 882*f1)*k2^6*k3^2 + 
         2*(-302 + 302*F^2 - 161*f1)*k2^4*k3^4 - 35*(-37 + 37*F^2 - 26*f1)*
          k2^2*k3^6 + 490*(-2 + 2*F^2 - 3*f1)*k3^8) + 
       14*k1^6*(146*(-1 + F^2)*k2^10 + (272 - 272*F^2 - 293*f1)*k2^8*k3^2 + 
         10*(-12 + 12*F^2 + 53*f1)*k2^6*k3^4 + 4*(-57 + 57*F^2 - 128*f1)*k2^4*
          k3^6 + 10*(33 - 33*F^2 + 59*f1)*k2^2*k3^8 + 35*(-4 + 4*F^2 - 9*f1)*
          k3^10) + k1^4*(k2^2 - k3^2)*(1750*(-1 + F^2)*k2^10 + 
         (5197 - 5197*F^2 - 3220*f1)*k2^8*k3^2 + 35*(-129 + 129*F^2 + 184*f1)*
          k2^6*k3^4 + (1207 - 1207*F^2 - 6160*f1)*k2^4*k3^6 - 
         245*(-1 + F^2 - 24*f1)*k2^2*k3^8 - 2940*f1*k3^10)) + 
     b1*(-1 + F^2)*(56*f1^2*k1^2*k2^2*(k2^2 - k3^2)*(5*k1^8*(k2^2 + k3^2) + 
         70*k1^4*(k2^2 - k3^2)^2*(k2^2 + k3^2) - 35*(k2^2 - k3^2)^4*
          (k2^2 + k3^2) + 20*k1^2*(k2^2 - k3^2)^2*(k2^4 - 3*k2^2*k3^2 + 
           k3^4) - 12*k1^6*(5*k2^4 - 3*k2^2*k3^2 + 5*k3^4)) - 
       14*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k2^4*k3^2*
        (k1^10 - 20*k1^8*(k2^2 - k3^2) + 20*k1^4*(k2^2 - k3^2)^3 + 
         105*k1^2*(k2^2 - k3^2)^4 + 56*(k2^2 - k3^2)^5 - 
         2*k1^6*(33*k2^4 - 50*k2^2*k3^2 + 25*k3^4)) + 
       2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*(k1^14*(5*k2^2 - 2*k3^2) + 
         k1^12*(-10*k2^4 + 27*k2^2*k3^2 - 60*k3^4) - 28*(k2^2 - k3^2)^5*
          (4*k2^6 + 13*k2^4*k3^2 + k3^6) - 7*k1^2*(k2^2 - k3^2)^4*
          (9*k2^6 + 116*k2^4*k3^2 + 10*k3^6) + k1^4*(k2^2 - k3^2)^3*
          (230*k2^6 - 227*k2^4*k3^2 - 91*k2^2*k3^4 + 68*k3^6) + 
         k1^10*(55*k2^6 + 96*k2^4*k3^2 - 342*k2^2*k3^4 + 302*k3^6) - 
         2*k1^8*(38*k2^8 + 65*k2^6*k3^2 + 168*k2^4*k3^4 - 445*k2^2*k3^6 + 
           270*k3^8) + k1^6*(-29*k2^10 + 458*k2^8*k3^2 - 800*k2^6*k3^4 + 
           1088*k2^4*k3^6 - 1015*k2^2*k3^8 + 410*k3^10)) + 
       (-1 + F^2)*f1*(784*k2^2*k3^2*(k2^2 - k3^2)^5*(k2^2 + 2*k3^2) + 
         k1^12*(128*k2^4 - 337*k2^2*k3^2 + 145*k3^4) - k1^4*(k2^2 - k3^2)^3*
          (1984*k2^6 - 4371*k2^4*k3^2 - 10866*k2^2*k3^4 - 3755*k3^6) + 
         k1^10*(496*k2^6 - 1337*k2^4*k3^2 + 642*k2^2*k3^4 + 395*k3^6) + 
         k1^2*(k2^2 - k3^2)^3*(1264*k2^8 + 4547*k2^6*k3^2 + 1279*k2^4*k3^4 - 
           5155*k2^2*k3^6 - 975*k3^8) - 2*k1^8*(416*k2^8 + 329*k2^6*k3^2 - 
           2655*k2^4*k3^4 + 59*k2^2*k3^6 + 1515*k3^8) + 
         2*k1^6*(464*k2^10 - 765*k2^8*k3^2 + 4848*k2^6*k3^4 - 
           6782*k2^4*k3^6 - 624*k2^2*k3^8 + 2635*k3^10))) - 
     2*f1*(((c2 + c4)*(-1 + F^2)^2*(25*k1^14*k3^2 - 448*k2^2*k3^2*
           (k2^2 - 3*k3^2)*(k2^2 - k3^2)^5 - 2*k1^12*(16*k2^4 - 
            99*k2^2*k3^2 + 115*k3^4) - 2*k1^4*(k2^2 - k3^2)^3*
           (272*k2^6 - 619*k2^4*k3^2 - 4278*k2^2*k3^4 - 275*k3^6) + 
          7*k1^2*(k2^2 - k3^2)^4*(32*k2^6 + 83*k2^4*k3^2 + 780*k2^2*k3^4 + 
            15*k3^6) + k1^10*(-32*k2^6 + 19*k2^4*k3^2 - 744*k2^2*k3^4 + 
            775*k3^6) + 4*k1^8*(16*k2^8 - 183*k2^6*k3^2 + 531*k2^4*k3^4 + 
            9*k2^2*k3^6 - 325*k3^8) + k1^6*(320*k2^10 - 1361*k2^8*k3^2 + 
            7608*k2^6*k3^4 - 11686*k2^4*k3^6 + 3720*k2^2*k3^8 + 1175*k3^10)))/
        Sqrt[2] + 2*k2^2*(-56*f1^2*k1^4*k2^2*k3^2*(k2^2 - k3^2)*
          (3*k1^4 - 5*(k2^2 - k3^2)^2) + 8*(-1 + F^2)*f1*k1^2*(k2^2 - k3^2)*
          (-4*k1^10 + 5*k1^8*(k2^2 + k3^2) - 28*k1^4*(k2^2 - k3^2)^2*
            (k2^2 + k3^2) + 15*(k2^2 - k3^2)^4*(k2^2 + k3^2) + 
           11*k1^6*(2*k2^4 - 3*k2^2*k3^2 + 2*k3^4) - k1^2*(k2^2 - k3^2)^2*
            (10*k2^4 - 11*k2^2*k3^2 + 10*k3^4)) + 
         (7*(c2 - c4)*(-1 + F^2)^2*k3^2*(7*k1^10*k3^2 + 455*k1^2*k3^2*
             (k2^2 - k3^2)^4 - 56*(k2^2 - 2*k3^2)*(k2^2 - k3^2)^5 + 
            20*k1^4*(k2^2 - k3^2)^3*(4*k2^2 + 35*k3^2) - 
            4*k1^8*(6*k2^4 - 41*k2^2*k3^2 + 35*k3^4) + 
            k1^6*(474*k2^4*k3^2 - 980*k2^2*k3^4 + 490*k3^6)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(1792*F^8*k1^7*k2^7*k3^6), 
 ((-1 + F^2)*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (-14*b1^3*(-1 + F^2)^3*k1^6*k2^2*(k1^2 + k2^2)*k3^4 + 
     2*b1^2*(-1 + F^2)^2*k1^2*k2^2*(3*(-1 + F^2)*k1^10 - 
       336*(-1 + F^2)*k2^4*(k2^2 - k3^2)^3 + 45*(-1 + F^2)*k1^8*
        (2*k2^2 - k3^2) + 6*k1^6*(16*(-1 + F^2)*k2^4 - 20*(-1 + F^2)*k2^2*
          k3^2 + (-10 + 10*F^2 - 147*f1)*k3^4) - 21*k1^2*(k2^2 - k3^2)^2*
        (15*(-1 + F^2)*k2^4 + 2*(-2 + 2*F^2 + 21*f1)*k3^4) + 
       k1^4*(30*(-1 + F^2)*k2^6 - 9*(-1 + F^2)*k2^4*k3^2 - 
         3*(-29 + 29*F^2 + 588*f1)*k2^2*k3^4 + 4*(-19 + 19*F^2 + 441*f1)*
          k3^6)) + 2*f1*k1^2*(56*f1^2*k1^2*k2^2*k3^4*
        (k1^4 + 2*k1^2*(11*k2^2 - 9*k3^2) + 21*(k2^2 - k3^2)^2) + 
       8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k3^4*
        (k1^8 + 14*k3^2*(k2^2 - k3^2)^3 + k1^6*(-10*k2^2 + 11*k3^2) + 
         k1^4*(-31*k2^4 + 74*k2^2*k3^2 - 39*k3^4) + 
         k1^2*(-20*k2^6 + 93*k2^4*k3^2 - 114*k2^2*k3^4 + 41*k3^6)) - 
       (-1 + F^2)*f1*(117*k1^10*k3^2 + 336*k2^2*k3^2*(k2^2 - k3^2)^3*
          (2*k2^2 - k3^2) + 3*k1^8*(48*k2^4 - 44*k2^2*k3^2 - 89*k3^4) + 
         3*k1^2*(k2^2 - k3^2)^2*(64*k2^6 + 99*k2^4*k3^2 + 187*k2^2*k3^4 - 
           84*k3^6) - 3*k1^6*(64*k2^6 + 234*k2^4*k3^2 - 339*k2^2*k3^4 + 
           23*k3^6) + k1^4*(-144*k2^8 + 324*k2^6*k3^2 + 1635*k2^4*k3^4 - 
           2062*k2^2*k3^6 + 471*k3^8))) - b1*(-1 + F^2)*
      (16*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^6*
        (k1^6 - 6*k1^4*(k2^2 - k3^2) - 21*k1^2*(k2^2 - k3^2)^2 - 
         14*(k2^2 - k3^2)^3) + 7*f1^2*k1^2*k3^4*(63*k1^8 + 
         4*k1^6*(278*k2^2 - 189*k3^2) + 84*k1^2*(14*k2^2 - 15*k3^2)*
          (k2^2 - k3^2)^2 + 315*(k2^2 - k3^2)^4 + 
         2*k1^4*(955*k2^4 - 1842*k2^2*k3^2 + 819*k3^4)) - 
       (-1 + F^2)*f1*(39*k1^14 - 1512*k2^4*(k2^2 - k3^2)^5 + 
         k1^12*(96*k2^2 + 90*k3^2) + k1^10*(-561*k2^4 + 1584*k2^2*k3^2 - 
           868*k3^4) - 6*k1^8*(184*k2^6 - 636*k2^4*k3^2 + 584*k2^2*k3^4 - 
           125*k3^6) - 21*k1^2*(k2^2 - k3^2)^3*(95*k2^6 + 73*k2^4*k3^2 - 
           68*k2^2*k3^4 - 36*k3^6) + k1^6*(2229*k2^8 - 6372*k2^6*k3^2 + 
           3126*k2^4*k3^4 + 296*k2^2*k3^6 - 207*k3^8) + 
         2*k1^4*(1116*k2^10 - 7389*k2^8*k3^2 + 12262*k2^6*k3^4 - 
           6633*k2^4*k3^6 + 168*k2^2*k3^8 + 476*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(3584*F^10*k1^11*k2^7*k3^4) + 
  ((-1 + F^2)*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (14*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^4*(k1^2 + k3^2) - 
     2*b1^2*(-1 + F^2)^2*k1^2*k2^2*(7*(-10 + 10*F^2 - 27*f1)*k1^10 - 
       7*k1^8*(12*(-1 + F^2 - 7*f1)*k2^2 + (15 - 15*F^2 + 37*f1)*k3^2) - 
       2*k1^6*(7*(-67 + 67*F^2 - 327*f1)*k2^4 + 2*(463 - 463*F^2 + 2037*f1)*
          k2^2*k3^2 + 14*(-31 + 31*F^2 - 63*f1)*k3^4) + 
       k1^4*(-196*(-4 + 4*F^2 - 7*f1)*k2^6 + 10*(-223 + 223*F^2 - 700*f1)*
          k2^4*k3^2 + 3*(727 - 727*F^2 + 1792*f1)*k2^2*k3^4 + 
         21*(-37 + 37*F^2 + 12*f1)*k3^6) - 7*(k2^2 - k3^2)^3*
        (176*(-1 + F^2)*k2^2*k3^2 + 63*f1*(16*k2^4 - 23*k2^2*k3^2 + 
           7*k3^4)) - 7*k1^2*(k2^2 - k3^2)^2*(201*(-1 + F^2)*k2^2*k3^2 + 
         7*f1*(189*k2^4 - 230*k2^2*k3^2 + 95*k3^4))) - 
     2*f1*k1^2*(56*f1^2*k1^2*k2^6*(k1^4 + 21*(k2^2 - k3^2)^2 + 
         k1^2*(-18*k2^2 + 22*k3^2)) + 14*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k1^2*
        k2^2*k3^2*(5*k1^6 - 56*(k2^2 - k3^2)^3 - 2*k1^4*(3*k2^2 + 7*k3^2) - 
         3*k1^2*(21*k2^4 - 34*k2^2*k3^2 + 13*k3^4)) + 
       (-1 + F^2)*f1*(147*k1^10*k3^2 + k1^8*(144*k2^4 + 545*k2^2*k3^2 - 
           924*k3^4) - 112*(k2^2 - k3^2)^3*(4*k2^6 + 12*k2^4*k3^2 - 
           2*k2^2*k3^4 - 3*k3^6) + k1^2*(k2^2 - k3^2)^2*
          (384*k2^6 - 2068*k2^4*k3^2 - 605*k2^2*k3^4 + 1491*k3^6) + 
         k1^6*(16*k2^6 + 669*k2^4*k3^2 - 2965*k2^2*k3^4 + 2226*k3^6) + 
         k1^4*(-320*k2^8 + 75*k2^6*k3^2 - 2598*k2^4*k3^4 + 5223*k2^2*k3^6 - 
           2604*k3^8)) + 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*
        (5*k1^10 - 4*k1^8*(7*k2^2 - 9*k3^2) - 56*k2^2*(3*k2^2 - 2*k3^2)*
          (k2^2 - k3^2)^3 + k1^6*(-74*k2^4 + 127*k2^2*k3^2 - 147*k3^4) + 
         2*k1^4*(126*k2^6 - 361*k2^4*k3^2 + 342*k2^2*k3^4 - 99*k3^6) + 
         k1^2*(-19*k2^8 - 537*k2^6*k3^2 + 1443*k2^4*k3^4 - 1247*k2^2*k3^6 + 
           360*k3^8))) + b1*(-1 + F^2)*
      (-7*f1^2*k1^2*k2^2*(33*k1^8*k3^2 - 1575*k3^2*(k2^2 - k3^2)^4 - 
         4*k1^6*(28*k2^4 + 279*k2^2*k3^2 - 160*k3^4) + 
         28*k1^2*(k2^2 - k3^2)^2*(12*k2^4 - 161*k2^2*k3^2 + 134*k3^4) - 
         2*k1^4*(48*k2^6 + 1921*k2^4*k3^2 - 3462*k2^2*k3^4 + 1425*k3^6)) + 
       (-1 + F^2)*f1*(42*k1^14 + k1^12*(646*k2^2 - 252*k3^2) + 
         504*k2^2*(k2^2 - k3^2)^5*(12*k2^2 - k3^2) + 
         k1^10*(740*k2^4 - 391*k2^2*k3^2 - 252*k3^4) + 7*k1^2*(k2^2 - k3^2)^3*
          (1496*k2^6 - 407*k2^4*k3^2 - 505*k2^2*k3^4 + 120*k3^6) + 
         k1^8*(-4732*k2^6 + 11308*k2^4*k3^2 - 9750*k2^2*k3^4 + 2688*k3^6) + 
         k1^6*(-6326*k2^8 + 27812*k2^6*k3^2 - 37560*k2^4*k3^4 + 
           21664*k2^2*k3^6 - 4662*k3^8) + 2*k1^4*(1099*k2^10 + 
           4574*k2^8*k3^2 - 16965*k2^6*k3^4 + 18506*k2^4*k3^6 - 
           8852*k2^2*k3^8 + 1638*k3^10)) + 4*(-1 + F^2)^2*k1^2*k2^2*
        (7*Sqrt[2]*(c2 - c4)*k1^6*k3^4 + 
         ((c2 + c4)*(10*k1^10 - 3*k1^8*(4*k2^2 - 5*k3^2) + 
            112*k2^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^3 + 
            42*k1^2*(7*k2^2 - 5*k3^2)*(k2^3 - k2*k3^2)^2 - 
            2*k1^6*(88*k2^4 - 134*k2^2*k3^2 + 57*k3^4) + 
            k1^4*(-164*k2^6 + 387*k2^4*k3^2 - 342*k2^2*k3^4 + 111*k3^6)))/
          Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^10*k1^11*k2^5*k3^6) - 
  ((-1 + F^2)*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (-14*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^4*(k2^2 + k3^2) - 
     14*b1^2*(-1 + F^2)^2*k1^2*k2^2*(-28*(-4 + 4*F^2 + 21*f1)*k1^2*k2^2*
        (k2^2 - k3^2)^3 - 567*f1*k2^2*(k2^2 - k3^2)^4 + 
       k1^8*((-10 + 10*F^2 + 9*f1)*k2^2 - (-1 + F^2 + 2*f1)*k3^2) - 
       3*k1^6*(4*(-1 + F^2 - 15*f1)*k2^4 + (-5 + 5*F^2 + 72*f1)*k2^2*k3^2 + 
         (5 - 5*F^2 - 12*f1)*k3^4) - 2*k1^4*((-67 + 67*F^2 - 59*f1)*k2^6 - 
         3*(-38 + 38*F^2 - 49*f1)*k2^4*k3^2 + (-43 + 43*F^2 - 105*f1)*k2^2*
          k3^4 + (-10 + 10*F^2 + 17*f1)*k3^6)) + 2*Sqrt[2]*(c2 + c4)*
      (-1 + F^2)^2*(f1*(13*k1^14 + 17*k1^12*(2*k2^2 + k3^2) - 
         504*k2^2*(k2^2 - k3^2)^5*(k2^2 + 3*k3^2) - 63*k1^2*k2^2*
          (k2^2 - k3^2)^4*(7*k2^2 + 62*k3^2) + 
         k1^10*(-19*k2^4 + 284*k2^2*k3^2 - 318*k3^4) + 
         21*k1^4*(k2^2 - k3^2)^3*(50*k2^4 - 133*k2^2*k3^2 - 9*k3^4) - 
         2*k1^8*(250*k2^6 - 693*k2^4*k3^2 + 876*k2^2*k3^4 - 361*k3^6) + 
         k1^6*(239*k2^8 + 62*k2^6*k3^2 - 1296*k2^4*k3^4 + 1730*k2^2*k3^6 - 
           623*k3^8)) + b1*(-1 + F^2)*k1^4*(-224*k2^4*(k2^2 - k3^2)^3 + 
         4*k1^8*(k2^2 + 2*k3^2) + 3*k1^6*(44*k2^4 - 39*k2^2*k3^2 + 16*k3^4) + 
         6*k1^4*(10*k2^6 - 61*k2^4*k3^2 + 75*k2^2*k3^4 - 28*k3^6) + 
         k1^2*(-260*k2^8 + 347*k2^6*k3^2 + 156*k2^4*k3^4 - 377*k2^2*k3^6 + 
           112*k3^8))) + 2*f1*(-56*f1^2*k1^4*k2^2*(k2^2 - k3^2)*
        (3*k1^6 - 21*k1^2*(k2^2 - k3^2)^2 - 6*k1^4*(k2^2 + k3^2) + 
         28*(k2^2 - k3^2)^2*(k2^2 + k3^2)) + 7*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*
        k2^2*k3^2*(7*k1^10 + 84*k1^8*(k2^2 - k3^2) - 
         308*k1^4*(k2^2 - k3^2)^3 - 567*k1^2*(k2^2 - k3^2)^4 - 
         252*(k2^2 - k3^2)^5 + 4*k1^6*(23*k2^4 - 40*k2^2*k3^2 + 21*k3^4)) - 
       (-1 + F^2)*f1*k1^2*(156*k1^10*k3^2 - 336*k2^2*k3^2*(3*k2^2 - 2*k3^2)*
          (k2^2 - k3^2)^3 + k1^8*(320*k2^4 + 39*k2^2*k3^2 - 447*k3^4) + 
         k1^2*(k2^2 - k3^2)^3*(256*k2^4 - 1305*k2^2*k3^2 + 189*k3^4) + 
         3*k1^6*(48*k2^6 - 45*k2^4*k3^2 - 82*k2^2*k3^4 + 79*k3^6) + 
         k1^4*(-944*k2^8 + 1653*k2^6*k3^2 - 183*k2^4*k3^4 - 769*k2^2*k3^6 + 
           243*k3^8))) - b1*(-1 + F^2)*(28*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*
        k1^6*k2^4*k3^4 + 7*f1^2*k1^2*(63*(k2^2 - k3^2)^4*
          (8*k2^4 - 23*k2^2*k3^2 + 5*k3^4) + 3*k1^8*(24*k2^4 - 43*k2^2*k3^2 + 
           21*k3^4) + 28*k1^2*(k2^2 - k3^2)^3*(8*k2^4 - 95*k2^2*k3^2 + 
           45*k3^4) - 84*k1^6*(13*k2^4*k3^2 - 22*k2^2*k3^4 + 9*k3^6) - 
         2*k1^4*(336*k2^8 + 487*k2^6*k3^2 - 2797*k2^4*k3^4 + 2793*k2^2*k3^6 - 
           819*k3^8)) - (-1 + F^2)*f1*(3528*k2^2*(k2^2 - k3^2)^5*
          (2*k2^2 + k3^2) + k1^12*(82*k2^2 + 59*k3^2) + 
         2*k1^10*(491*k2^4 + 67*k2^2*k3^2 - 87*k3^4) + 
         42*k1^2*(k2^2 - k3^2)^3*(263*k2^6 + 34*k2^4*k3^2 - 273*k2^2*k3^4 + 
           8*k3^6) - 12*k1^8*(27*k2^6 - 186*k2^4*k3^2 - 13*k2^2*k3^4 + 
           98*k3^6) + k1^6*(-7868*k2^8 + 20716*k2^6*k3^2 - 15862*k2^4*k3^4 + 
           264*k2^2*k3^6 + 2302*k3^8) - k1^4*(3422*k2^10 - 23065*k2^8*k3^2 + 
           45036*k2^6*k3^4 - 34466*k2^4*k3^6 + 8398*k2^2*k3^8 + 675*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^10*k1^9*k2^7*k3^6), 
 ((-1 + F^2)^2*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (-(b1^2*(-1 + F^2)^2*k1^4*(9*(-1 + F^2)*k1^4*k2^2 + 9*(-1 + F^2)*k2^6 - 
        2*(-2 + 2*F^2 + 21*f1)*k2^2*k3^4 + 3*k1^2*(2*(-1 + F^2)*k2^4 - 
          7*f1*k3^4))) - b1*(-1 + F^2)*f1*(24*(-1 + F^2)*k1^10 + 
       3*(-1 + F^2)*k1^8*(112*k2^2 - 79*k3^2) - 1440*(-1 + F^2)*k2^4*
        (k2^2 - k3^2)^3 + k1^6*(444*(-1 + F^2)*k2^4 - 630*(-1 + F^2)*k2^2*
          k3^2 + (-407 + 407*F^2 - 1092*f1)*k3^4) + 
       k1^4*(-192*(-1 + F^2)*k2^6 + 99*(-1 + F^2)*k2^4*k3^2 - 
         7*(-27 + 27*F^2 + 400*f1)*k2^2*k3^4 + 140*(-1 + F^2 + 18*f1)*k3^6) - 
       12*k1^2*(k2^2 - k3^2)*(167*(-1 + F^2)*k2^6 - 135*(-1 + F^2)*k2^4*
          k3^2 + 3*(-12 + 12*F^2 + 35*f1)*k2^2*k3^4 - 
         3*(-12 + 12*F^2 + 35*f1)*k3^6)) + 
     4*f1*(8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^4*(k1^2 - 2*k3^2)*
        (k1^2 + 2*k2^2 - 2*k3^2) + 7*f1^2*k1^2*k3^4*
        (42*k1^4 + k1^2*(74*k2^2 - 90*k3^2) + 45*(k2^2 - k3^2)^2) + 
       (-1 + F^2)*f1*(6*k1^10 + k1^8*(78*k2^2 - 66*k3^2) + 
         360*k2^4*(k2^2 - k3^2)^3 + k1^6*(-69*k2^4 - 108*k2^2*k3^2 + 
           92*k3^4) - 4*k1^4*(93*k2^6 - 225*k2^4*k3^2 + 69*k2^2*k3^4 + 
           28*k3^6) + 3*k1^2*(15*k2^8 + 154*k2^6*k3^2 - 285*k2^4*k3^4 + 
           80*k2^2*k3^6 + 36*k3^8))))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(7168*F^12*k1^11*k2^7*k3^4) - 
  ((-1 + F^2)^2*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (7*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^2 - 7*b1^2*(-1 + F^2)^2*k1^2*k2^2*
      (6*(-1 + F^2)*k1^6 + k1^4*(-6*(-1 + F^2)*k2^2 + (-2 + 2*F^2 - 107*f1)*
          k3^2) - 648*f1*(-(k2^2*k3) + k3^3)^2 + 
       k1^2*((-3 + 3*F^2 - 592*f1)*k2^2*k3^2 + 574*f1*k3^4)) + 
     b1*(-1 + F^2)*(7*f1^2*k2^2*(-211*k1^8 + 36*k1^2*(185*k2^2 - 142*k3^2)*
          (k2^2 - k3^2)^2 + 4125*(k2^2 - k3^2)^4 + 
         k1^6*(-972*k2^2 + 1412*k3^2) + 2*k1^4*(815*k2^4 - 730*k2^2*k3^2 - 
           17*k3^4)) - (-1 + F^2)*f1*(48*k1^10 - 480*k2^2*(k2^2 - k3^2)^3*
          (12*k2^2 - k3^2) + k1^8*(-600*k2^2 + 555*k3^2) + 
         k1^6*(-1904*k2^4 + 4081*k2^2*k3^2 - 1962*k3^4) + 
         k1^4*(-3008*k2^6 + 6012*k2^4*k3^2 - 4897*k2^2*k3^4 + 1431*k3^6) + 
         k1^2*(-6048*k2^8 + 11228*k2^6*k3^2 - 5720*k2^4*k3^4 + 
           540*k2^2*k3^6)) + 4*(-1 + F^2)^2*k1^4*k2^2*
        ((7*(c2 - c4)*k1^2*k3^2)/Sqrt[2] + 
         ((c2 + c4)*(3*k1^4 - 5*k2^4 + 3*k2^2*k3^2 - 6*k1^2*(k2^2 - k3^2)))/
          Sqrt[2])) + 4*f1*(7*f1^2*k1^2*k2^2*(60*k1^4*k3^2 + 
         225*(-(k2^2*k3) + k3^3)^2 - 2*k1^2*(8*k2^4 - 129*k2^2*k3^2 + 
           129*k3^4)) + (-1 + F^2)*f1*(12*k1^10 - 120*k1^8*(k2^2 - k3^2) + 
         120*k2^2*(k2^2 - k3^2)^3*(12*k2^2 - k3^2) + 
         k1^6*(-610*k2^4 + 1131*k2^2*k3^2 - 540*k3^4) + 
         k1^4*(-454*k2^6 + 2092*k2^4*k3^2 - 2170*k2^2*k3^4 + 672*k3^6) + 
         k1^2*(1400*k2^8 - 1823*k2^6*k3^2 - 466*k2^4*k3^4 + 1153*k2^2*k3^6 - 
           264*k3^8)) - 4*(-1 + F^2)^2*k1^2*k2^2*
        ((-7*(c2 - c4)*k1^2*k3^2*(3*k1^2 + 8*k2^2 - 8*k3^2))/Sqrt[2] + 
         Sqrt[2]*(c2 + c4)*(k1^4*(5*k2^2 - 9*k3^2) + 
           k1^2*(9*k2^4 - 35*k2^2*k3^2 + 24*k3^4) - 
           8*(3*k2^6 - 5*k2^4*k3^2 + 2*k2^2*k3^4)))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(7168*F^12*k1^11*k2^5*k3^6) + 
  ((-1 + F^2)^2*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (-14*b1*(-1 + F^2)^3*k1^4*k2^2*(b1^2*k2^2*k3^2 + 2*Sqrt[2]*(c2 - c4)*k2^2*
        k3^2 + b1*k1^2*(6*k2^2 - 3*k3^2) - 2*b1*k2^2*(3*k2^2 + k3^2)) + 
     56*f1^3*k1^2*(48*k1^6*k3^2 - 60*(4*k2^2 - 3*k3^2)*(k2^2 - k3^2)^3 + 
       405*k1^2*(-(k2^2*k3) + k3^3)^2 + 10*k1^4*(8*k2^4 + 19*k2^2*k3^2 - 
         27*k3^4)) - (-1 + F^2)*f1^2*(128*k1^10 + 
       k1^8*(30*(48 + 77*b1)*k2^2 - (1520 + 777*b1)*k3^2) - 
       15*(k2^2 - k3^2)^3*(6*(64 + 385*b1)*k2^4 - (192 + 2695*b1)*k2^2*k3^2 + 
         385*b1*k3^4) + 4*k1^6*(14*(48 + 101*b1)*k2^4 - (1100 + 1519*b1)*k2^2*
          k3^2 + 7*(68 + 15*b1)*k3^4) - 2*k1^4*(k2^2 - k3^2)*
        (14*(84 + 841*b1)*k2^4 - (792 + 16135*b1)*k2^2*k3^2 + 
         9*(-16 + 497*b1)*k3^4) - 12*k1^2*(k2^2 - k3^2)*
        (10*(62 + 511*b1)*k2^6 - (928 + 11445*b1)*k2^4*k3^2 + 
         20*(17 + 378*b1)*k2^2*k3^4 - 1225*b1*k3^6)) + 
     2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*
      (2*b1*(-1 + F^2)*k1^2*k2^2*(5*k1^4 + k1^2*(6*k2^2 - 3*k3^2) - 
         3*(k2^4 + 2*k2^2*k3^2)) + f1*(32*k1^8 + k1^6*(464*k2^2 - 353*k3^2) - 
         960*k2^2*(k2^2 - k3^2)^3 + k1^4*(32*k2^4 - 718*k2^2*k3^2 + 
           590*k3^4) - 3*k1^2*(432*k2^6 - 805*k2^4*k3^2 + 300*k2^2*k3^4 + 
           71*k3^6))) - 2*(-1 + F^2)^2*f1*k1^2*
      (14*Sqrt[2]*(c2 - c4)*k1^2*k2^2*k3^2*(-4*k2^2 + 3*k3^2) + 
       21*b1^2*k1^2*k3^2*(3*k2^4 + k3^4) + b1*(8*k1^6*(10*k2^2 + k3^2) + 
         k1^4*(-1400*k2^4 + 639*k2^2*k3^2 + 425*k3^4) - 
         k1^2*(4656*k2^6 - 8333*k2^4*k3^2 + 3066*k2^2*k3^4 + 783*k3^6) - 
         96*(39*k2^8 - 110*k2^6*k3^2 + 106*k2^4*k3^4 - 34*k2^2*k3^6 - 
           k3^8))))*Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(14336*F^12*k1^9*k2^7*k3^6), 
 -1/896*((7*b1^3*(-1 + F^2)^2*f1*k1^2*k2^2*(k1^2 - k2^2)*k3^4*
       (k1^10 + 5*k1^8*(k2^2 - k3^2) + 5*k1^2*(k2^2 - k3^2)^4 + 
        (k2^2 - k3^2)^5 - 2*k1^6*(3*k2^4 + 10*k2^2*k3^2 - 5*k3^4) - 
        2*k1^4*(3*k2^6 + 7*k2^4*k3^2 - 15*k2^2*k3^4 + 5*k3^6)) + 
      b1*f1*(28*f1^2*k1^2*k2^4*k3^4*(3*k1^10 + 5*k1^8*(k2^2 - k3^2) - 
          6*k1^4*(k2^2 - k3^2)^3 + (k2^2 - k3^2)^5 + k1^2*(k2^2 - k3^2)^3*
           (7*k2^2 + k3^2) - 2*k1^6*(5*k2^4 - 6*k2^2*k3^2 + k3^4)) - 
        Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k3^4*(k1^16 + 
          2*k1^14*(k2^2 - 4*k3^2) + (k2^2 - k3^2)^6*(k2^4 - 4*k2^2*k3^2 + 
            k3^4) + 2*k1^4*(k2^2 - k3^2)^4*(16*k2^4 - 25*k2^2*k3^2 + 
            14*k3^4) + k1^12*(-22*k2^2*k3^2 + 28*k3^4) + 
          2*k1^2*(k2^2 - k3^2)^4*(5*k2^6 - 20*k2^4*k3^2 + 15*k2^2*k3^4 - 
            4*k3^6) - 2*k1^6*(k2^2 - k3^2)^2*(73*k2^6 + 46*k2^4*k3^2 - 
            59*k2^2*k3^4 + 28*k3^6) - 2*k1^10*(29*k2^6 + 24*k2^4*k3^2 - 
            45*k2^2*k3^4 + 28*k3^6) + k1^8*(-98*k2^8 + 18*k2^6*k3^2 + 
            200*k2^4*k3^4 - 190*k2^2*k3^6 + 70*k3^8)) + 
        (-1 + F^2)*f1*k2^2*(3*k1^16*(k2^2 + 2*k3^2) + 2*k1^2*k3^2*
           (k2^2 - k3^2)^5*(6*k2^4 + 31*k2^2*k3^2 - 9*k3^4) + 
          (k2^2 - k3^2)^7*(3*k2^4 + 3*k2^2*k3^2 + 8*k3^4) + 
          2*k1^14*(6*k2^2*k3^2 + 23*k3^4) + k1^12*(-60*k2^6 + 24*k2^4*k3^2 + 
            342*k2^2*k3^4 - 298*k3^6) - 2*k1^4*(k2^2 - k3^2)^3*
           (30*k2^8 - 42*k2^6*k3^2 - 201*k2^4*k3^4 + 124*k2^2*k3^6 - 
            23*k3^8) + 2*k1^6*(k2^2 - k3^2)^2*(96*k2^8 - 198*k2^6*k3^2 + 
            353*k2^4*k3^4 - 352*k2^2*k3^6 + 117*k3^8) + 
          2*k1^10*(96*k2^8 - 198*k2^6*k3^2 + 507*k2^4*k3^4 - 688*k2^2*k3^6 + 
            299*k3^8) + k1^8*(-270*k2^10 + 876*k2^8*k3^2 + 470*k2^6*k3^4 - 
            2430*k2^4*k3^6 + 1904*k2^2*k3^8 - 550*k3^10))) + 
      b1^2*(-1 + F^2)*(8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k2^4*k3^6*
         (k1^4 - (k2^2 - k3^2)^2)^2 + 28*f1^2*k1^2*k2^2*k3^4*
         (k1^12 + k1^10*(6*k2^2 - 4*k3^2) + (k2^2 - k3^2)^5*(k2^2 + k3^2) + 
          2*k1^2*(k2^2 - k3^2)^3*(3*k2^4 + 3*k2^2*k3^2 - 2*k3^4) - 
          4*k1^6*k2^2*(11*k2^4 - 4*k2^2*k3^2 + k3^4) + 
          k1^8*(15*k2^4 - 12*k2^2*k3^2 + 5*k3^4) + 
          k1^4*(15*k2^8 + 16*k2^6*k3^2 - 50*k2^4*k3^4 + 24*k2^2*k3^6 - 
            5*k3^8)) + (-1 + F^2)*f1*(-3*k2^4*(k2^2 - k3^2)^6*
           (k2^4 + 2*k2^2*k3^2 - k3^4) + k1^16*(3*k2^4 - 3*k2^2*k3^2 + 
            7*k3^4) - k1^14*(18*k2^6 + 21*k2^4*k3^2 - 14*k2^2*k3^4 + 
            49*k3^6) + k1^2*(k2^2 - k3^2)^5*(18*k2^8 - 21*k2^6*k3^2 + 
            11*k2^4*k3^4 - 17*k2^2*k3^6 + 7*k3^8) + 
          k1^12*(42*k2^8 - 303*k2^6*k3^2 - 13*k2^4*k3^4 - 77*k2^2*k3^6 + 
            147*k3^8) + k1^10*(-42*k2^10 + 555*k2^8*k3^2 - 804*k2^6*k3^4 + 
            48*k2^4*k3^6 + 280*k2^2*k3^8 - 245*k3^10) - k1^4*(k2^2 - k3^2)^3*
           (42*k2^10 + 27*k2^8*k3^2 + 134*k2^6*k3^4 + 84*k2^4*k3^6 - 
            112*k2^2*k3^8 + 49*k3^10) + k1^8*(-189*k2^10*k3^2 - 
            545*k2^8*k3^4 + 758*k2^6*k3^6 + 256*k2^4*k3^8 - 525*k2^2*k3^10 + 
            245*k3^12) + k1^6*(42*k2^14 - 39*k2^12*k3^2 - 690*k2^10*k3^4 + 
            799*k2^8*k3^6 + 194*k2^6*k3^8 - 677*k2^4*k3^10 + 518*k2^2*k3^12 - 
            147*k3^14))) + 4*f1^2*k1^2*k2^2*k3^2*(k1^2 + k2^2 - k3^2)^2*
       (f1*k2^2*(k1^2 - k2^2 + k3^2)^2*(3*k1^4 + 3*k2^4 + k2^2*k3^2 - 
          4*k3^4 + k1^2*(-6*k2^2 + k3^2)) - 4*(-1 + F^2)*k3^2*
         ((7*(c2 - c4)*k1^2*k2^2*(k1^4 + k1^2*(6*k2^2 - 2*k3^2) + 
             (k2^2 - k3^2)^2))/Sqrt[2] + 
          ((c2 + c4)*(k1^8 + k1^6*(9*k2^2 - 4*k3^2) + k1^2*(9*k2^2 - 4*k3^2)*
              (k2^2 - k3^2)^2 + (k2^2 - k3^2)^4 + k1^4*(36*k2^4 - 22*k2^2*
                k3^2 + 6*k3^4)))/Sqrt[2])))*
     Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^6*k1^8*k2^8*k3^4) + 
  ((-7*b1^3*(-1 + F^2)^2*f1*k1^2*k3^4*(k1^12 + k1^10*(7*k2^2 - 6*k3^2) + 
       k1^2*(11*k2^2 - 6*k3^2)*(k2^2 - k3^2)^4 + (k2^2 - k3^2)^5*
        (2*k2^2 - k3^2) + k1^8*(4*k2^4 - 35*k2^2*k3^2 + 15*k3^4) + 
       2*k1^6*(7*k2^6 - 40*k2^4*k3^2 + 35*k2^2*k3^4 - 10*k3^6) + 
       k1^4*(25*k2^8 - 106*k2^6*k3^2 + 136*k2^4*k3^4 - 70*k2^2*k3^6 + 
         15*k3^8)) - b1^2*(-1 + F^2)*(8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*
        k2^6*k3^2*(k1^4 - (k2^2 - k3^2)^2)^2 + 28*f1^2*k1^2*k2^4*
        (k1^12 - (k2^2 - k3^2)^5*(k2^2 + k3^2) + k1^10*(-4*k2^2 + 6*k3^2) + 
         2*k1^2*(k2^2 - k3^2)^3*(2*k2^4 - 3*k2^2*k3^2 - 3*k3^4) - 
         4*k1^6*k3^2*(k2^4 - 4*k2^2*k3^2 + 11*k3^4) + 
         k1^8*(5*k2^4 - 12*k2^2*k3^2 + 15*k3^4) + 
         k1^4*(-5*k2^8 + 24*k2^6*k3^2 - 50*k2^4*k3^4 + 16*k2^2*k3^6 + 
           15*k3^8)) + (-1 + F^2)*f1*(3*k1^16*k3^2 + 11*k3^2*(k2^2 - k3^2)^6*
          (k2^4 + 2*k2^2*k3^2 - k3^4) - 2*k1^14*(21*k2^4 + 10*k2^2*k3^2 + 
           6*k3^4) + 2*k1^2*(k2^2 - k3^2)^5*(7*k2^6 - 25*k2^4*k3^2 + 
           41*k2^2*k3^4 - 22*k3^6) + 2*k1^12*(98*k2^6 - 388*k2^4*k3^2 + 
           15*k2^2*k3^4 + 13*k3^6) - 2*k1^4*(k2^2 - k3^2)^3*
          (14*k2^8 - 122*k2^6*k3^2 - 27*k2^4*k3^4 + 52*k2^2*k3^6 - 29*k3^8) - 
         2*k1^10*(175*k2^8 - 576*k2^6*k3^2 + 788*k2^4*k3^4 - 17*k2^2*k3^6 + 
           22*k3^8) + 2*k1^8*(140*k2^10 - 343*k2^8*k3^2 + 684*k2^6*k3^4 - 
           431*k2^4*k3^6 - 70*k2^2*k3^8 + 20*k3^10) + 
         2*k1^6*(-35*k2^12 + 54*k2^10*k3^2 + 70*k2^8*k3^4 + 90*k2^6*k3^6 - 
           201*k2^4*k3^8 + 16*k2^2*k3^10 + 6*k3^12))) + 
     4*f1^2*k1^2*k2^2*(k1^2 - k2^2 + k3^2)^2*
      (2*Sqrt[2]*(c2 + c4)*(-1 + F^2)*k2^2*(k1^8 - k1^2*(4*k2^2 - 9*k3^2)*
          (k2^2 - k3^2)^2 + (k2^2 - k3^2)^4 + k1^6*(-4*k2^2 + 9*k3^2) + 
         k1^4*(6*k2^4 - 22*k2^2*k3^2 + 36*k3^4)) - 
       k3^2*(f1*(k1^2 + k2^2 - k3^2)^2*(3*k1^4 - 4*k2^4 + k2^2*k3^2 + 
           3*k3^4 + k1^2*(k2^2 - 6*k3^2)) - 14*Sqrt[2]*(c2 - c4)*(-1 + F^2)*
          k1^2*k2^2*(k1^4 - 2*k1^2*(k2^2 - 3*k3^2) + (k2^2 - k3^2)^2))) + 
     b1*f1*(-28*f1^2*k1^2*k2^4*k3^2*(3*k1^10 - 5*k1^8*(k2^2 - k3^2) + 
         6*k1^4*(k2^2 - k3^2)^3 - (k2^2 - k3^2)^5 - k1^2*(k2^2 - k3^2)^3*
          (k2^2 + 7*k3^2) - 2*k1^6*(k2^4 - 6*k2^2*k3^2 + 5*k3^4)) - 
       (-1 + F^2)*f1*(3*k1^16*(2*k2^2 + k3^2) + 
         2*k1^14*(23*k2^4 + 6*k2^2*k3^2) + 2*k1^2*k2^2*(k2^2 - k3^2)^5*
          (9*k2^4 - 31*k2^2*k3^2 - 6*k3^4) - (k2^2 - k3^2)^7*
          (8*k2^4 + 3*k2^2*k3^2 + 3*k3^4) + k1^12*(-298*k2^6 + 
           342*k2^4*k3^2 + 24*k2^2*k3^4 - 60*k3^6) - 2*k1^4*(k2^2 - k3^2)^3*
          (23*k2^8 - 124*k2^6*k3^2 + 201*k2^4*k3^4 + 42*k2^2*k3^6 - 
           30*k3^8) + 2*k1^6*(k2^2 - k3^2)^2*(117*k2^8 - 352*k2^6*k3^2 + 
           353*k2^4*k3^4 - 198*k2^2*k3^6 + 96*k3^8) + 
         2*k1^10*(299*k2^8 - 688*k2^6*k3^2 + 507*k2^4*k3^4 - 198*k2^2*k3^6 + 
           96*k3^8) + k1^8*(-550*k2^10 + 1904*k2^8*k3^2 - 2430*k2^6*k3^4 + 
           470*k2^4*k3^6 + 876*k2^2*k3^8 - 270*k3^10)) - 
       2*(-1 + F^2)^2*(7*Sqrt[2]*(c2 - c4)*k1^2*k3^4*(k1^10*(k2^2 - k3^2) + 
           10*k1^4*(k2^2 - k3^2)^4 + 5*k1^2*(k2^2 - k3^2)^5 + 
           (k2^2 - k3^2)^6 + k1^8*(53*k2^4 - 10*k2^2*k3^2 + 5*k3^4) - 
           2*k1^6*(3*k2^6 + 7*k2^4*k3^2 - 15*k2^2*k3^4 + 5*k3^6)) + 
         ((c2 + c4)*(k1^14*(4*k2^4 + 3*k2^2*k3^2 - k3^4) + 
            k1^4*(k2^2 - k3^2)^4*(36*k2^6 - 43*k2^4*k3^2 + 46*k2^2*k3^4 - 
              49*k3^6) + (k2^2 - k3^2)^6*(4*k2^6 + k2^4*k3^2 - 4*k2^2*k3^4 + 
              k3^6) - k1^12*(20*k2^6 - 103*k2^4*k3^2 + 2*k2^2*k3^4 + 
              7*k3^6) - k1^6*(k2^2 - k3^2)^2*(20*k2^8 - 65*k2^6*k3^2 - 
              251*k2^4*k3^4 + 225*k2^2*k3^6 - 105*k3^8) - 
            k1^2*(k2^2 - k3^2)^4*(20*k2^8 - 53*k2^6*k3^2 + 27*k2^4*k3^4 + 
              5*k2^2*k3^6 - 7*k3^8) + k1^10*(36*k2^8 - 177*k2^6*k3^2 + 
              739*k2^4*k3^4 - 95*k2^2*k3^6 + 49*k3^8) - 
            k1^8*(20*k2^10 - 43*k2^8*k3^2 + 194*k2^6*k3^4 + 54*k2^4*k3^6 - 
              330*k2^2*k3^8 + 105*k3^10)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(896*F^6*k1^8*k2^4*k3^6) + 
  ((7*b1^3*(-1 + F^2)^2*f1*k1^2*k2^2*k3^4*(k1^10*(k2^2 + k3^2) + 
       5*k1^2*(k2^2 - k3^2)^4*(k2^2 + k3^2) + (k2^2 - k3^2)^5*(k2^2 + k3^2) + 
       2*k1^4*(k2^2 - k3^2)^2*(13*k2^4 - 5*k3^4) + 5*k1^8*(k2^4 - k3^4) - 
       2*k1^6*(51*k2^6 + 13*k2^4*k3^2 + 5*k2^2*k3^4 - 5*k3^6)) + 
     2*b1*f1*(14*f1^2*k1^2*k2^4*k3^2*(-5*k1^8*(k2^2 - k3^2)^2 + 
         6*k1^4*(k2^2 - k3^2)^4 - (k2^2 - k3^2)^6 + 3*k1^10*(k2^2 + k3^2) - 
         2*k1^6*(k2^2 - k3^2)^2*(k2^2 + k3^2) - k1^2*(k2^2 - k3^2)^4*
          (k2^2 + k3^2)) - 7*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k2^4*k3^4*
        (k1^10*(k2^2 - k3^2) + 10*k1^4*(k2^2 - k3^2)^4 + 
         5*k1^2*(k2^2 - k3^2)^5 + (k2^2 - k3^2)^6 + 
         k1^8*(53*k2^4 - 10*k2^2*k3^2 + 5*k3^4) - 
         2*k1^6*(3*k2^6 + 7*k2^4*k3^2 - 15*k2^2*k3^4 + 5*k3^6)) + 
       (-1 + F^2)*f1*k2^2*(23*k1^14*(k2^4 + k2^2*k3^2 + k3^4) + 
         k1^2*(k2^2 - k3^2)^6*(9*k2^4 + 23*k2^2*k3^2 + 9*k3^4) - 
         k1^6*(k2^2 - k3^2)^4*(75*k2^4 + 47*k2^2*k3^2 + 75*k3^4) + 
         k1^10*(k2^2 - k3^2)^2*(107*k2^4 + 65*k2^2*k3^2 + 107*k3^4) + 
         k1^12*(-89*k2^6 + 21*k2^4*k3^2 + 21*k2^2*k3^4 - 89*k3^6) - 
         7*(k2^2 - k3^2)^6*(k2^6 + k2^4*k3^2 + k2^2*k3^4 + k3^6) - 
         k1^8*(k2^2 - k3^2)^2*(5*k2^6 - 7*k2^4*k3^2 - 7*k2^2*k3^4 + 5*k3^6) + 
         k1^4*(k2^2 - k3^2)^4*(37*k2^6 - 21*k2^4*k3^2 - 21*k2^2*k3^4 + 
           37*k3^6)) + ((c2 + c4)*(-1 + F^2)^2*
         (k1^16*(2*k2^4 + k2^2*k3^2 + k3^4) - k1^14*(20*k2^6 + 17*k2^4*k3^2 + 
            7*k2^2*k3^4 + 8*k3^6) - (k2^2 - k3^2)^6*(2*k2^8 + 2*k2^6*k3^2 + 
            13*k2^4*k3^4 + 2*k2^2*k3^6 - k3^8) + k1^2*(k2^2 - k3^2)^5*
           (4*k2^8 - 11*k2^6*k3^2 - 64*k2^4*k3^4 - 7*k2^2*k3^6 + 8*k3^8) + 
          k1^4*(k2^2 - k3^2)^4*(20*k2^8 + 9*k2^6*k3^2 - 128*k2^4*k3^4 - 
            k2^2*k3^6 + 28*k3^8) + k1^12*(76*k2^8 - 165*k2^6*k3^2 - 
            4*k2^4*k3^4 + 13*k2^2*k3^6 + 28*k3^8) + 
          k1^10*(-148*k2^10 + 467*k2^8*k3^2 - 43*k2^6*k3^4 + 87*k2^4*k3^6 + 
            13*k2^2*k3^8 - 56*k3^10) + k1^8*(160*k2^12 - 479*k2^10*k3^2 - 
            466*k2^8*k3^4 + 248*k2^6*k3^6 - 120*k2^4*k3^8 - 85*k2^2*k3^10 + 
            70*k3^12) + k1^6*(-92*k2^14 + 285*k2^12*k3^2 - 205*k2^10*k3^4 + 
            302*k2^8*k3^6 - 418*k2^6*k3^8 + 45*k2^4*k3^10 + 139*k2^2*k3^12 - 
            56*k3^14)))/Sqrt[2]) + b1^2*(-1 + F^2)*
      (-8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^6*k2^4*k3^2*
        (k1^4 - (k2^2 - k3^2)^2)^2 + 56*f1^2*k1^2*k2^2*
        (-((k2^2 - k3^2)^6*(k2^4 + k2^2*k3^2 + k3^4)) - 
         2*k1^4*(k2^2 - k3^2)^4*(5*k2^4 + 3*k2^2*k3^2 + 5*k3^4) - 
         k1^8*(k2^2 - k3^2)^2*(5*k2^4 + 9*k2^2*k3^2 + 5*k3^4) + 
         10*k1^6*(k2^2 - k3^2)^2*(k2^6 + k3^6) + 
         k1^10*(k2^6 + 2*k2^4*k3^2 + 2*k2^2*k3^4 + k3^6) + 
         k1^2*(k2^2 - k3^2)^4*(5*k2^6 - 2*k2^4*k3^2 - 2*k2^2*k3^4 + 
           5*k3^6)) + (-1 + F^2)*f1*(k1^14*(30*k2^4*k3^2 - 7*k2^2*k3^4 + 
           7*k3^6) + 7*(k2^2 - k3^2)^6*(2*k2^8 + 2*k2^6*k3^2 + 3*k2^4*k3^4 + 
           2*k2^2*k3^6 - k3^8) - k1^12*(42*k2^8 + 134*k2^6*k3^2 + 
           141*k2^4*k3^4 - 42*k2^2*k3^6 + 49*k3^8) - k1^4*(k2^2 - k3^2)^4*
          (70*k2^8 + 34*k2^6*k3^2 - 169*k2^4*k3^4 - 14*k2^2*k3^6 + 
           147*k3^8) - k1^2*(k2^2 - k3^2)^4*(28*k2^10 - 110*k2^8*k3^2 - 
           35*k2^6*k3^4 + 51*k2^4*k3^6 + 91*k2^2*k3^8 - 49*k3^10) + 
         k1^10*(196*k2^10 - 606*k2^8*k3^2 - 1383*k2^6*k3^4 + 199*k2^4*k3^6 - 
           161*k2^2*k3^8 + 147*k3^10) + k1^8*(-350*k2^12 + 1078*k2^10*k3^2 + 
           925*k2^8*k3^4 - 202*k2^6*k3^6 - 154*k2^4*k3^8 + 420*k2^2*k3^10 - 
           245*k3^12) + k1^6*(280*k2^14 - 766*k2^12*k3^2 + 635*k2^10*k3^4 - 
           739*k2^8*k3^6 + 614*k2^6*k3^8 + 396*k2^4*k3^10 - 665*k2^2*k3^12 + 
           245*k3^14))) + 4*f1^2*k2^2*(k1^4 - (k2^2 - k3^2)^2)^2*
      (((c2 + c4)*(-1 + F^2)*(k1^8*(k2^2 + k3^2) - 4*k1^2*(k2^2 - k3^2)^2*
           (k2^4 + 4*k2^2*k3^2 + k3^4) - 2*k1^6*(2*k2^4 + k2^2*k3^2 + 
            2*k3^4) + (k2^2 - k3^2)^2*(k2^6 + 6*k2^4*k3^2 + 6*k2^2*k3^4 + 
            k3^6) + k1^4*(6*k2^6 + 5*k2^4*k3^2 + 5*k2^2*k3^4 + 6*k3^6)))/
        Sqrt[2] + k2^2*k3^2*(f1*k1^2*(4*k1^4 - 3*(k2^2 - k3^2)^2 - 
           k1^2*(k2^2 + k3^2)) + (7*(c2 - c4)*(-1 + F^2)*
           (-2*k1^2*(k2^2 - k3^2)^2 + k1^4*(k2^2 + k3^2) + 
            (k2^2 - k3^2)^2*(k2^2 + k3^2)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(896*F^6*k1^6*k2^8*k3^6), 
 -1/3584*(f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (56*b1^3*(-1 + F^2)^3*k1^4*k2^4*k3^4*(11*k1^6 + 21*k1^4*(k2^2 - k3^2) + 
        15*k1^2*(k2^2 - k3^2)^2 + 5*(k2^2 - k3^2)^3) + 
      b1^2*(-1 + F^2)^2*(3*(-1 + F^2)*k1^16*k2^2 + 168*(-1 + F^2)*
         (k2^3 - k2*k3^2)^6 + k1^14*(-75*(-1 + F^2)*k2^4 - 
          75*(-1 + F^2)*k2^2*k3^2 + 49*(-8 + 8*F^2 - 9*f1)*k3^4) + 
        k1^12*(579*(-1 + F^2)*k2^6 - 354*(-1 + F^2)*k2^4*k3^2 + 
          (-2038 + 2038*F^2 - 1883*f1)*k2^2*k3^4 - 441*(-4 + 4*F^2 - 5*f1)*
           k3^6) + k1^2*(k2^2 - k3^2)^4*(327*(-1 + F^2)*k2^8 + 
          381*(-1 + F^2)*k2^6*k3^2 + 2*(230 - 230*F^2 + 441*f1)*k2^4*k3^4 + 
          14*(-22 + 22*F^2 - 63*f1)*k2^2*k3^6 - 196*(-1 + F^2)*k3^8) + 
        k1^10*(-723*(-1 + F^2)*k2^8 - 729*(-1 + F^2)*k2^6*k3^2 + 
          2*(-2701 + 2701*F^2 - 308*f1)*k2^4*k3^4 - 70*(-91 + 91*F^2 - 87*f1)*
           k2^2*k3^6 + 1470*(-2 + 2*F^2 - 3*f1)*k3^8) - 
        k1^4*(k2^2 - k3^2)^3*(663*(-1 + F^2)*k2^8 - 1881*(-1 + F^2)*k2^6*
           k3^2 - 7*(-122 + 122*F^2 + 287*f1)*k2^4*k3^4 + 
          4*(209 - 209*F^2 + 882*f1)*k2^2*k3^6 + 147*(-4 + 4*F^2 + 3*f1)*
           k3^8) + k1^8*(489*(-1 + F^2)*k2^10 - 876*(-1 + F^2)*k2^8*k3^2 + 
          6*(-762 + 762*F^2 + 763*f1)*k2^6*k3^4 - 
          6*(-1528 + 1528*F^2 + 595*f1)*k2^4*k3^6 + 
          15*(-433 + 433*F^2 - 406*f1)*k2^2*k3^8 - 490*(-4 + 4*F^2 - 9*f1)*
           k3^10) - k1^6*(k2^2 - k3^2)*(105*(-1 + F^2)*k2^10 - 
          1146*(-1 + F^2)*k2^8*k3^2 + (1822 - 1822*F^2 - 4879*f1)*k2^6*k3^4 + 
          (-3446 + 3446*F^2 + 9401*f1)*k2^4*k3^6 + (583 - 583*F^2 - 1645*f1)*
           k2^2*k3^8 - 2205*f1*k3^10)) - b1*(-1 + F^2)*
       (4*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k3^4*(13*k1^14 + 
          k1^12*(66*k2^2 - 64*k3^2) + 14*k3^2*(k2^2 - k3^2)^6 + 
          k1^6*(k2^2 - k3^2)^2*(23*k2^4 - 14*k2^2*k3^2 - 85*k3^4) - 
          k1^2*(k2^2 - k3^2)^4*(29*k2^4 - 130*k2^2*k3^2 + 71*k3^4) + 
          k1^10*(169*k2^4 - 250*k2^2*k3^2 + 111*k3^4) - 
          2*k1^4*(k2^2 - k3^2)^2*(11*k2^6 - 156*k2^4*k3^2 + 163*k2^2*k3^4 - 
            66*k3^6) + 2*k1^8*(82*k2^6 - 217*k2^4*k3^2 + 144*k2^2*k3^4 - 
            25*k3^6)) + 56*f1^2*k1^2*k2^2*k3^4*(11*k1^10 - 
          3*k1^8*(9*k2^2 - 5*k3^2) + 21*(k2^2 - k3^2)^5 + 
          15*k1^2*(k2^2 - k3^2)^3*(5*k2^2 - k3^2) - 
          18*k1^6*(7*k2^4 - 12*k2^2*k3^2 + 5*k3^4) + 
          2*k1^4*(31*k2^6 + 21*k2^4*k3^2 - 87*k2^2*k3^4 + 35*k3^6)) - 
        (-1 + F^2)*f1*(168*k2^2*k3^2*(k2^2 - k3^2)^6*(2*k2^2 - k3^2) + 
          3*k1^16*(8*k2^2 + 3*k3^2) - 3*k1^14*(8*k2^4 - 121*k2^2*k3^2 + 
            214*k3^4) + k1^12*(-216*k2^6 + 969*k2^4*k3^2 - 3266*k2^2*k3^4 + 
            2823*k3^6) + 3*k1^10*(264*k2^8 - 487*k2^6*k3^2 - 504*k2^4*k3^4 + 
            2895*k2^2*k3^6 - 1600*k3^8) - k1^4*(k2^2 - k3^2)^3*
           (744*k2^8 - 1971*k2^6*k3^2 - 743*k2^4*k3^4 + 1881*k2^2*k3^6 - 
            663*k3^8) + 3*k1^2*(k2^2 - k3^2)^4*(56*k2^8 + 379*k2^6*k3^2 - 
            272*k2^4*k3^4 - 127*k2^2*k3^6 + 84*k3^8) + 
          k1^8*(-1368*k2^10 - 2253*k2^8*k3^2 + 5332*k2^6*k3^4 + 
            3350*k2^4*k3^6 - 8556*k2^2*k3^8 + 3495*k3^10) + 
          k1^6*(1368*k2^12 - 1863*k2^10*k3^2 + 5966*k2^8*k3^4 - 
            7846*k2^6*k3^6 + 2412*k2^4*k3^8 + 437*k2^2*k3^10 - 474*k3^12))) + 
      4*f1*k1^2*(56*f1^2*k1^2*k2^4*k3^4*(k1^6 + 3*k1^4*(k2^2 - k3^2) - 
          3*k1^2*(k2^2 - k3^2)^2 - 5*(k2^2 - k3^2)^3) + 
        (-1 + F^2)*f1*k2^2*(3*k1^12*(k2^2 + 2*k3^2) - 15*(k2^2 - k3^2)^5*
           (3*k2^4 + 3*k2^2*k3^2 + 8*k3^4) - 2*k1^10*(21*k2^4 - 
            51*k2^2*k3^2 + 35*k3^4) + k1^8*(93*k2^6 - 192*k2^4*k3^2 + 
            55*k2^2*k3^4 + 4*k3^6) + 2*k1^2*(k2^2 - k3^2)^3*
           (75*k2^6 - 72*k2^4*k3^2 - 126*k2^2*k3^4 + 95*k3^6) - 
          k1^4*(k2^2 - k3^2)^2*(147*k2^6 - 384*k2^4*k3^2 + 19*k2^2*k3^4 + 
            98*k3^6) - 4*k1^6*(3*k2^8 + 45*k2^6*k3^2 - 142*k2^4*k3^4 + 
            151*k2^2*k3^6 - 57*k3^8)) + 2*(-1 + F^2)^2*k3^4*
         (168*Sqrt[2]*(c2 - c4)*k1^4*k2^4*(k1^2 + k2^2 - k3^2)^2 + 
          ((c2 + c4)*(15*k1^12 + k1^10*(56*k2^2 - 90*k3^2) + 
             15*(k2^2 - k3^2)^4*(k2^4 - 4*k2^2*k3^2 + k3^4) + 
             2*k1^2*(k2^2 - k3^2)^3*(68*k2^4 - 133*k2^2*k3^2 + 45*k3^4) + 
             k1^4*(k2^2 - k3^2)^2*(345*k2^4 - 494*k2^2*k3^2 + 225*k3^4) + 
             k1^8*(281*k2^4 - 344*k2^2*k3^2 + 225*k3^4) + 
             4*k1^6*(124*k2^6 - 253*k2^4*k3^2 + 204*k2^2*k3^4 - 75*k3^6)))/
           Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^8*k1^10*k2^8*k3^4) + 
  (f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (7*b1^3*(-1 + F^2)^3*k1^2*k2^2*k3^2*(7*k1^12 - 9*k1^10*(k2^2 - k3^2) + 
       56*(k2^2 - k3^2)^6 + 15*k1^4*(k2^2 - k3^2)^2*(5*k2^4 - 10*k2^2*k3^2 + 
         13*k3^4) - 2*k1^8*(37*k2^4 - 90*k2^2*k3^2 + 25*k3^4) + 
       k1^2*(k2^2 - k3^2)^3*(147*k2^4 - 294*k2^2*k3^2 + 187*k3^4) - 
       6*k1^6*(23*k2^6 - 53*k2^4*k3^2 + 25*k2^2*k3^4 + 5*k3^6)) - 
     b1^2*(-1 + F^2)^2*k2^2*(42*(-1 + F^2)*k1^16 - 616*(-1 + F^2)*k2^2*k3^2*
        (k2^2 - k3^2)^6 + k1^14*(-28*(-1 + F^2)*k2^2 + 
         (148 - 148*F^2 + 161*f1)*k3^2) + k1^12*(1750*(-1 + F^2)*k2^4 + 
         (-113 + 113*F^2 + 1197*f1)*k2^2*k3^2 + 3*(-178 + 178*F^2 - 721*f1)*
          k3^4) - k1^4*(k2^2 - k3^2)^3*(1078*(-1 + F^2)*k2^6 + 
         (2595 - 2595*F^2 + 3199*f1)*k2^4*k3^2 + 
         3*(-2097 + 2097*F^2 + 224*f1)*k2^2*k3^4 + 
         (2454 - 2454*F^2 - 5831*f1)*k3^6) + k1^10*(-3416*(-1 + F^2)*k2^6 + 
         (-2941 + 2941*F^2 + 658*f1)*k2^4*k3^2 + 15*(-157 + 157*F^2 - 686*f1)*
          k2^2*k3^4 + 56*(24 - 24*F^2 + 145*f1)*k3^6) - 
       k1^2*(k2^2 - k3^2)^4*(784*(-1 + F^2)*k2^6 + (-79 + 79*F^2 + 1568*f1)*
          k2^4*k3^2 + (-1537 + 1537*F^2 - 490*f1)*k2^2*k3^4 - 
         2*(-540 + 540*F^2 + 539*f1)*k3^6) + 2*k1^8*(1211*(-1 + F^2)*k2^8 - 
         3*(-1397 + 1397*F^2 + 301*f1)*k2^6*k3^2 + 
         9*(-496 + 496*F^2 - 609*f1)*k2^4*k3^4 + (1847 - 1847*F^2 + 13755*f1)*
          k2^2*k3^6 + (-587 + 587*F^2 - 7035*f1)*k3^8) + 
       k1^6*(k2^2 - k3^2)*(1092*(-1 + F^2)*k2^8 + (3782 - 3782*F^2 - 7539*f1)*
          k2^6*k3^2 + (1004 - 1004*F^2 + 861*f1)*k2^4*k3^4 + 
         5*(-962 + 962*F^2 + 4011*f1)*k2^2*k3^6 - 
         3*(-372 + 372*F^2 + 4235*f1)*k3^8)) + 
     b1*(-1 + F^2)*(14*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k1^2*k2^2*k3^2*
        (3*k1^12 + 3*k1^10*(k2^2 - k3^2) + 15*k1^4*(k2^2 - k3^2)^4 + 
         63*k1^2*(k2^2 - k3^2)^5 + 28*(k2^2 - k3^2)^6 + 
         10*k1^8*(5*k2^4 + 6*k2^2*k3^2 - 3*k3^4) - 
         2*k1^6*(49*k2^6 - 99*k2^4*k3^2 + 75*k2^2*k3^4 - 25*k3^6)) + 
       56*f1^2*k1^2*k2^6*(11*k1^10 + 3*k1^8*(5*k2^2 - 9*k3^2) + 
         15*k1^2*(k2^2 - 5*k3^2)*(k2^2 - k3^2)^3 - 21*(k2^2 - k3^2)^5 - 
         18*k1^6*(5*k2^4 - 12*k2^2*k3^2 + 7*k3^4) + 
         2*k1^4*(35*k2^6 - 87*k2^4*k3^2 + 21*k2^2*k3^4 + 31*k3^6)) + 
       2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*(3*k1^16 + 
         28*k2^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^6 + 
         k1^14*(-7*k2^2 + 5*k3^2) + k1^12*(111*k2^4 + 55*k2^2*k3^2 + 
           12*k3^4) + k1^10*(-263*k2^6 + 368*k2^4*k3^2 + 531*k2^2*k3^4 - 
           240*k3^6) - k1^6*(k2^2 - k3^2)^2*(77*k2^6 - 179*k2^4*k3^2 + 
           371*k2^2*k3^4 - 117*k3^6) + k1^2*(k2^2 - k3^2)^4*
          (155*k2^6 + 170*k2^4*k3^2 - 463*k2^2*k3^4 + 198*k3^6) + 
         k1^8*(381*k2^8 - 1642*k2^6*k3^2 + 2112*k2^4*k3^4 - 1270*k2^2*k3^6 + 
           355*k3^8) - k1^4*(k2^2 - k3^2)^2*(387*k2^8 - 1693*k2^6*k3^2 + 
           2371*k2^4*k3^4 - 1707*k2^2*k3^6 + 450*k3^8)) - 
       (-1 + F^2)*f1*(3*k1^16*(8*k2^2 - 7*k3^2) - 
         3*k1^14*(8*k2^4 - 54*k2^2*k3^2 + 7*k3^4) - 56*(k2^2 - k3^2)^6*
          (4*k2^6 + 12*k2^4*k3^2 - 2*k2^2*k3^4 - 3*k3^6) + 
         k1^12*(160*k2^6 + 1641*k2^4*k3^2 - 2086*k2^2*k3^4 + 735*k3^6) + 
         k1^10*(496*k2^8 + 2992*k2^6*k3^2 - 7479*k2^4*k3^4 + 7928*k2^2*k3^6 - 
           2793*k3^8) + k1^2*(k2^2 - k3^2)^4*(480*k2^8 - 3452*k2^6*k3^2 + 
           1039*k2^4*k3^4 + 1768*k2^2*k3^6 - 1155*k3^8) - 
         k1^4*(k2^2 - k3^2)^3*(1168*k2^8 + 1473*k2^6*k3^2 + 1257*k2^4*k3^4 - 
           6527*k2^2*k3^6 + 3381*k3^8) + k1^8*(-2376*k2^10 + 6429*k2^8*k3^2 - 
           10196*k2^6*k3^4 + 17946*k2^4*k3^6 - 16948*k2^2*k3^8 + 
           5145*k3^10) + k1^6*(2632*k2^12 - 15318*k2^10*k3^2 + 
           15629*k2^8*k3^4 + 10908*k2^6*k3^6 - 30510*k2^4*k3^8 + 
           22098*k2^2*k3^10 - 5439*k3^12))) + 4*f1*k1^2*k2^2*
      (-56*f1^2*k1^2*k2^4*k3^2*(k1^6 - 3*k1^4*(k2^2 - k3^2) - 
         3*k1^2*(k2^2 - k3^2)^2 + 5*(k2^2 - k3^2)^3) - 
       (-1 + F^2)*f1*(3*k1^12*(2*k2^2 + k3^2) + 15*(k2^2 - k3^2)^5*
          (8*k2^4 + 3*k2^2*k3^2 + 3*k3^4) - 2*k1^10*(35*k2^4 - 51*k2^2*k3^2 + 
           21*k3^4) - 2*k1^2*(k2^2 - k3^2)^3*(95*k2^6 - 126*k2^4*k3^2 - 
           72*k2^2*k3^4 + 75*k3^6) + k1^8*(4*k2^6 + 55*k2^4*k3^2 - 
           192*k2^2*k3^4 + 93*k3^6) - k1^4*(k2^2 - k3^2)^2*
          (98*k2^6 + 19*k2^4*k3^2 - 384*k2^2*k3^4 + 147*k3^6) + 
         4*k1^6*(57*k2^8 - 151*k2^6*k3^2 + 142*k2^4*k3^4 - 45*k2^2*k3^6 - 
           3*k3^8)) + 2*(-1 + F^2)^2*(7*Sqrt[2]*(c2 - c4)*k1^2*k3^2*
          (5*k1^8*k3^2 + 15*k3^2*(k2^2 - k3^2)^4 - 
           6*k1^6*(4*k2^4 - 5*k2^2*k3^2 + 5*k3^4) - 2*k1^2*(k2^2 - k3^2)^2*
            (12*k2^4 - 25*k2^2*k3^2 + 25*k3^4) + 12*k1^4*
            (4*k2^6 + k2^4*k3^2 - 10*k2^2*k3^4 + 5*k3^6)) + 
         ((c2 + c4)*(5*k1^12*k3^2 + k1^10*(4*k2^4 + 30*k2^2*k3^2 + 30*k3^4) + 
            k1^4*(k2^2 - k3^2)^2*(344*k2^6 - 465*k2^4*k3^2 + 570*k2^2*k3^4 - 
              525*k3^6) + k1^8*(44*k2^6 - 211*k2^4*k3^2 + 300*k2^2*k3^4 - 
              295*k3^6) + 15*(k2^2 - k3^2)^4*(4*k2^6 + k2^4*k3^2 - 
              4*k2^2*k3^4 + k3^6) - 2*k1^2*(k2^2 - k3^2)^3*
             (118*k2^6 - 133*k2^4*k3^2 - 30*k2^2*k3^4 + 65*k3^6) - 
            4*k1^6*(54*k2^8 - 153*k2^6*k3^2 - 86*k2^4*k3^4 + 345*k2^2*k3^6 - 
              160*k3^8)))/Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^8*k1^10*k2^6*k3^6) + 
  (f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (-7*b1^3*(-1 + F^2)^3*k1^2*k2^4*k3^2*(k1^10 - 15*k1^8*(k2^2 - k3^2) + 
       45*k1^2*(k2^2 - k3^2)^4 + 21*(k2^2 - k3^2)^5 + 2*k1^4*(k2^2 - k3^2)^2*
        (29*k2^2 + 19*k3^2) - 6*k1^6*(29*k2^4 - 10*k2^2*k3^2 + 13*k3^4)) + 
     b1^2*(-1 + F^2)^2*(7*(-1 + F^2)*k1^14*k2^2*(6*k2^2 + k3^2) - 
       196*(-1 + F^2)*(k2^2 - k3^2)^6*(4*k2^6 + 3*k2^4*k3^2 + k3^6) + 
       k1^12*(-28*(-1 + F^2)*k2^6 + (541 - 541*F^2 + 693*f1)*k2^4*k3^2 - 
         35*(-5 + 5*F^2 + 16*f1)*k2^2*k3^4 + 49*(-8 + 8*F^2 - 9*f1)*k3^6) - 
       49*k1^2*(k2^2 - k3^2)^5*(22*(-1 + F^2)*k2^6 + (-38 + 38*F^2 + 27*f1)*
          k2^4*k3^2 + 3*(-4 + 4*F^2 + 3*f1)*k3^6) + 
       k1^10*(1750*(-1 + F^2)*k2^8 + 5*(-374 + 374*F^2 + 189*f1)*k2^6*k3^2 + 
         (-358 + 358*F^2 - 2625*f1)*k2^4*k3^4 + 21*(-114 + 114*F^2 - 25*f1)*
          k2^2*k3^6 - 441*(-4 + 4*F^2 - 5*f1)*k3^8) + 
       7*k1^6*(k2^2 - k3^2)*(346*(-1 + F^2)*k2^10 + (497 - 497*F^2 - 618*f1)*
          k2^8*k3^2 + 5*(-51 + 51*F^2 + 212*f1)*k2^6*k3^4 + 
         (-453 + 453*F^2 - 992*f1)*k2^4*k3^6 + 5*(129 - 129*F^2 + 236*f1)*
          k2^2*k3^8 + 70*(-4 + 4*F^2 - 9*f1)*k3^10) - 
       2*k1^8*(1708*(-1 + F^2)*k2^10 - 3*(-95 + 95*F^2 - 49*f1)*k2^8*k3^2 + 
         (-573 + 573*F^2 - 910*f1)*k2^6*k3^4 + (2833 - 2833*F^2 + 1680*f1)*
          k2^4*k3^6 + 35*(-97 + 97*F^2 - 102*f1)*k2^2*k3^8 - 
         735*(-2 + 2*F^2 - 3*f1)*k3^10) + 3*k1^4*(k2^2 - k3^2)^2*
        (364*(-1 + F^2)*k2^10 + (1139 - 1139*F^2 - 805*f1)*k2^8*k3^2 + 
         35*(-27 + 27*F^2 + 46*f1)*k2^6*k3^4 + (313 - 313*F^2 - 1540*f1)*k2^4*
          k3^6 - 49*(-1 + F^2 - 30*f1)*k2^2*k3^8 - 735*f1*k3^10)) + 
     b1*(-1 + F^2)*(-56*f1^2*k1^2*k2^2*(15*k1^8*(k2^2 - k3^2)^2*
          (k2^2 + k3^2) + 70*k1^4*(k2^2 - k3^2)^4*(k2^2 + k3^2) - 
         21*(k2^2 - k3^2)^6*(k2^2 + k3^2) + 15*k1^2*(k2^2 - k3^2)^4*
          (k2^4 - 3*k2^2*k3^2 + k3^4) - 18*k1^6*(k2^2 - k3^2)^2*
          (5*k2^4 - 3*k2^2*k3^2 + 5*k3^4) + k1^10*(11*k2^4 - 9*k2^2*k3^2 + 
           11*k3^4)) + 14*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k2^4*k3^2*
        (3*k1^12 + 3*k1^10*(k2^2 - k3^2) + 15*k1^4*(k2^2 - k3^2)^4 + 
         63*k1^2*(k2^2 - k3^2)^5 + 28*(k2^2 - k3^2)^6 + 
         10*k1^8*(5*k2^4 + 6*k2^2*k3^2 - 3*k3^4) - 
         2*k1^6*(49*k2^6 - 99*k2^4*k3^2 + 75*k2^2*k3^4 - 25*k3^6)) + 
       2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*(k1^16*(k2^2 - 2*k3^2) + 
         k1^14*(-29*k2^4 - 28*k2^2*k3^2 + 54*k3^4) + 
         k1^12*(337*k2^6 - 177*k2^4*k3^2 + 391*k2^2*k3^4 - 268*k3^6) + 
         14*(k2^2 - k3^2)^6*(4*k2^6 + 13*k2^4*k3^2 + k3^6) + 
         7*k1^2*(k2^2 - k3^2)^5*(7*k2^6 + 68*k2^4*k3^2 + 6*k3^6) - 
         k1^4*(k2^2 - k3^2)^4*(141*k2^6 - 151*k2^4*k3^2 - 49*k2^2*k3^4 + 
           44*k3^6) + k1^10*(-549*k2^8 - 117*k2^6*k3^2 + 742*k2^4*k3^4 - 
           1174*k2^2*k3^6 + 586*k3^8) + k1^8*(323*k2^10 + 546*k2^8*k3^2 + 
           54*k2^6*k3^4 - 1378*k2^4*k3^6 + 1675*k2^2*k3^8 - 660*k3^10) + 
         k1^6*(-47*k2^12 - 438*k2^10*k3^2 + 1054*k2^8*k3^4 - 1434*k2^6*k3^6 + 
           1719*k2^4*k3^8 - 1216*k2^2*k3^10 + 362*k3^12)) + 
       (-1 + F^2)*f1*(-392*k2^2*k3^2*(k2^2 - k3^2)^6*(k2^2 + 2*k3^2) + 
         k1^14*(88*k2^4 + 199*k2^2*k3^2 - 219*k3^4) + 6*k1^4*(k2^2 - k3^2)^4*
          (316*k2^6 - 603*k2^4*k3^2 - 1254*k2^2*k3^4 - 481*k3^6) + 
         2*k1^12*(164*k2^6 + 559*k2^4*k3^2 - 338*k2^2*k3^4 + 237*k3^6) - 
         k1^2*(k2^2 - k3^2)^4*(752*k2^8 + 2957*k2^6*k3^2 + 653*k2^4*k3^4 - 
           3021*k2^2*k3^6 - 621*k3^8) + k1^10*(-1152*k2^8 + 3637*k2^6*k3^2 - 
           2459*k2^4*k3^4 - 93*k2^2*k3^6 + 915*k3^8) + 
         4*k1^8*(340*k2^10 - 517*k2^8*k3^2 - 1636*k2^6*k3^4 + 
           1602*k2^4*k3^6 + 1040*k2^2*k3^8 - 1005*k3^10) + 
         k1^6*(-1768*k2^12 + 2897*k2^10*k3^2 - 6737*k2^8*k3^4 + 
           16066*k2^6*k3^6 - 8210*k2^4*k3^8 - 7363*k2^2*k3^10 + 
           5115*k3^12))) + 
     2*f1*(((c2 + c4)*(-1 + F^2)^2*(-224*k2^2*k3^2*(k2^2 - 3*k3^2)*
           (k2^2 - k3^2)^6 + k1^16*(16*k2^2 + 3*k3^2) + 
          k1^14*(-32*k2^4 + 57*k2^2*k3^2 - 81*k3^4) - k1^4*(k2^2 - k3^2)^4*
           (352*k2^6 - 953*k2^4*k3^2 - 6368*k2^2*k3^4 - 381*k3^6) + 
          7*k1^2*(k2^2 - k3^2)^5*(16*k2^6 + 53*k2^4*k3^2 + 468*k2^2*k3^4 + 
            9*k3^6) + k1^12*(64*k2^6 + 131*k2^4*k3^2 - 668*k2^2*k3^4 + 
            423*k3^6) - k1^10*(144*k2^8 + 127*k2^6*k3^2 + 169*k2^4*k3^4 - 
            1509*k2^2*k3^6 + 1005*k3^8) + k1^8*(16*k2^10 - 479*k2^8*k3^2 + 
            3936*k2^6*k3^4 - 4170*k2^4*k3^6 - 384*k2^2*k3^8 + 1305*k3^10) + 
          k1^6*(320*k2^12 - 1405*k2^10*k3^2 + 7597*k2^8*k3^4 - 
            17942*k2^6*k3^6 + 15478*k2^4*k3^8 - 3085*k2^2*k3^10 - 
            963*k3^12)))/Sqrt[2] + 2*k2^2*(42*f1^2*k1^4*k2^2*k3^2*
          (k1^8 - 6*k1^4*(k2^2 - k3^2)^2 + 5*(k2^2 - k3^2)^4) + 
         2*(-1 + F^2)*f1*k1^2*(4*k1^12*(k2^2 + k3^2) + 
           33*k1^8*(k2^2 - k3^2)^2*(k2^2 + k3^2) - 98*k1^4*(k2^2 - k3^2)^4*
            (k2^2 + k3^2) + 45*(k2^2 - k3^2)^6*(k2^2 + k3^2) + 
           k1^10*(-49*k2^4 + 79*k2^2*k3^2 - 49*k3^4) + 
           10*k1^6*(k2^2 - k3^2)^2*(11*k2^4 - 13*k2^2*k3^2 + 11*k3^4) - 
           3*k1^2*(k2^2 - k3^2)^4*(15*k2^4 - 17*k2^2*k3^2 + 15*k3^4)) + 
         (7*(c2 - c4)*(-1 + F^2)^2*k3^2*(k1^12*(4*k2^2 - 7*k3^2) + 
            21*k1^10*k3^2*(k2^2 - k3^2) + 273*k1^2*k3^2*(k2^2 - k3^2)^5 - 
            28*(k2^2 - 2*k3^2)*(k2^2 - k3^2)^6 + 15*k1^4*(k2^2 - k3^2)^4*
             (4*k2^2 + 35*k3^2) + k1^8*(-36*k2^6 + 298*k2^4*k3^2 - 
              456*k2^2*k3^4 + 210*k3^6) + 2*k1^6*(221*k2^6*k3^2 - 
              711*k2^4*k3^4 + 735*k2^2*k3^6 - 245*k3^8)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^8*k1^8*k2^8*k3^6), 
 ((-1 + F^2)*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (70*b1^3*(-1 + F^2)^3*k1^6*k2^2*(k1^2 + k2^2)*k3^4*(k1^2 + k2^2 - k3^2) + 
     2*b1^2*(-1 + F^2)^2*k1^2*k2^2*(15*(-1 + F^2)*k1^12 + 
       15*(-1 + F^2)*k1^10*(3*k2^2 - 2*k3^2) + 420*(-1 + F^2)*
        (k2^3 - k2*k3^2)^4 - 5*k1^8*(66*(-1 + F^2)*k2^4 - 
         75*(-1 + F^2)*k2^2*k3^2 + (-23 + 23*F^2 - 294*f1)*k3^4) + 
       35*k1^2*(k2^2 - k3^2)^3*(15*(-1 + F^2)*k2^4 + 2*(-2 + 2*F^2 + 21*f1)*
          k3^4) + k1^6*(-282*(-1 + F^2)*k2^6 + 405*(-1 + F^2)*k2^4*k3^2 - 
         7*(-37 + 37*F^2 - 630*f1)*k2^2*k3^4 + 70*(-1 + F^2 - 63*f1)*k3^6) - 
       5*k1^4*(k2^2 - k3^2)*(21*(-1 + F^2)*k2^6 - 3*(-17 + 17*F^2 + 294*f1)*
          k2^2*k3^4 + 2*(-20 + 20*F^2 + 441*f1)*k3^6)) - 
     2*f1*k1^2*(-56*f1^2*k1^2*k2^2*k3^4*(5*k1^6 - 35*(k2^2 - k3^2)^3 + 
         k1^4*(-9*k2^2 + 5*k3^2) - 5*k1^2*(13*k2^4 - 22*k2^2*k3^2 + 
           9*k3^4)) + 4*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k3^4*
        (5*k1^10 + 35*k3^2*(k2^2 - k3^2)^4 + k1^8*(22*k2^2 + 15*k3^2) - 
         5*k1^2*(k2^2 - k3^2)^2*(13*k2^4 - 52*k2^2*k3^2 + 27*k3^4) - 
         2*k1^6*(18*k2^4 - 71*k2^2*k3^2 + 55*k3^4) - 
         2*k1^4*(59*k2^6 - 233*k2^4*k3^2 + 269*k2^2*k3^4 - 95*k3^6)) + 
       (-1 + F^2)*f1*(9*k1^12*(4*k2^2 - 15*k3^2) - 420*k2^2*k3^2*
          (k2^2 - k3^2)^4*(2*k2^2 - k3^2) + k1^10*(-36*k2^4 - 375*k2^2*k3^2 + 
           540*k3^4) - 5*k1^2*(k2^2 - k3^2)^3*(12*k2^6 + 159*k2^4*k3^2 + 
           67*k2^2*k3^4 - 84*k3^6) - 2*k1^8*(168*k2^6 - 663*k2^4*k3^2 + 
           245*k2^2*k3^4 + 195*k3^6) + k1^6*(576*k2^8 + 750*k2^6*k3^2 - 
           4330*k2^4*k3^4 + 3724*k2^2*k3^6 - 720*k3^8) - 
         k1^4*(180*k2^10 + 687*k2^8*k3^2 + 1754*k2^6*k3^4 - 6406*k2^4*k3^6 + 
           4910*k2^2*k3^8 - 1125*k3^10))) + b1*(-1 + F^2)*
      (8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^6*
        (5*k1^8 + 10*k1^6*(k2^2 - k3^2) - 70*k1^2*(k2^2 - k3^2)^3 - 
         35*(k2^2 - k3^2)^4 + k1^4*(-38*k2^4 + 60*k2^2*k3^2 - 30*k3^4)) - 
       7*f1^2*k1^2*k3^4*(105*k1^10 - 35*k1^2*(41*k2^2 - 45*k3^2)*
          (k2^2 - k3^2)^3 - 315*(k2^2 - k3^2)^5 + 
         k1^8*(-935*k2^2 + 315*k3^2) - 2*k1^6*(1687*k2^4 - 2780*k2^2*k3^2 + 
           945*k3^4) - 10*k1^4*(307*k2^6 - 955*k2^4*k3^2 + 921*k2^2*k3^4 - 
           273*k3^6)) - (-1 + F^2)*f1*(3*k1^16 - 1260*k2^4*(k2^2 - k3^2)^6 + 
         15*k1^14*(13*k2^2 + 5*k3^2) + k1^12*(-105*k2^4 + 1026*k2^2*k3^2 - 
           946*k3^4) - 21*k1^2*(k2^2 - k3^2)^4*(115*k2^6 + 65*k2^4*k3^2 - 
           64*k2^2*k3^4 - 36*k3^6) + k1^10*(-1077*k2^6 + 5241*k2^4*k3^2 - 
           6388*k2^2*k3^4 + 1490*k3^6) + k1^4*(k2^2 - k3^2)^2*
          (1317*k2^8 - 14796*k2^6*k3^2 + 13691*k2^4*k3^4 - 252*k2^2*k3^6 - 
           1400*k3^8) + k1^8*(-1011*k2^8 + 4620*k2^6*k3^2 - 10218*k2^4*k3^4 + 
           4810*k2^2*k3^6 - 345*k3^8) + k1^6*(3969*k2^10 - 17451*k2^8*k3^2 + 
           18642*k2^6*k3^4 - 4632*k2^4*k3^6 - 895*k2^2*k3^8 + 367*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(7168*F^10*k1^12*k2^8*k3^4) - 
  ((-1 + F^2)*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (70*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^4*(k1^2 + k2^2 - k3^2)*(k1^2 + k3^2) - 
     2*b1^2*(-1 + F^2)^2*k1^2*k2^2*(7*(-10 + 10*F^2 - 23*f1)*k1^12 + 
       7*k1^10*(5*(-10 + 10*F^2 - 27*f1)*k2^2 + (35 - 35*F^2 + 158*f1)*
          k3^2) + k1^8*(-42*(-1 + F^2 - 7*f1)*k2^4 + 
         5*(-107 + 107*F^2 - 259*f1)*k2^2*k3^2 - 35*(-7 + 7*F^2 + 83*f1)*
          k3^4) + k1^6*(-70*(-25 + 25*F^2 - 117*f1)*k2^6 + 
         2*(-2579 + 2579*F^2 - 10577*f1)*k2^4*k3^2 + 
         5*(935 - 935*F^2 + 1764*f1)*k2^2*k3^4 + 35*(-39 + 39*F^2 + 112*f1)*
          k3^6) - 5*k1^4*(k2^2 - k3^2)*(49*(-4 + 4*F^2 - 7*f1)*k2^6 + 
         (541 - 541*F^2 + 1953*f1)*k2^4*k3^2 + (-492 + 492*F^2 - 679*f1)*k2^2*
          k3^4 - 7*(-27 + 27*F^2 + 133*f1)*k3^6) - 7*(k2^2 - k3^2)^4*
        (220*(-1 + F^2)*k2^2*k3^2 + 21*f1*(40*k2^4 - 53*k2^2*k3^2 + 
           13*k3^4)) - 7*k1^2*(k2^2 - k3^2)^3*(335*(-1 + F^2)*k2^2*k3^2 + 
         7*f1*(189*k2^4 - 193*k2^2*k3^2 + 94*k3^4))) - 
     2*f1*k1^2*(56*f1^2*k1^2*k2^6*(5*k1^6 + k1^4*(5*k2^2 - 9*k3^2) + 
         35*(k2^2 - k3^2)^3 - 5*k1^2*(9*k2^4 - 22*k2^2*k3^2 + 13*k3^4)) + 
       70*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k1^2*k2^2*k3^2*
        (k1^8 + k1^6*(5*k2^2 - 13*k3^2) - 3*k1^2*(7*k2^2 - 3*k3^2)*
          (k2^2 - k3^2)^2 - 14*(k2^2 - k3^2)^4 + 
         k1^4*(-3*k2^4 - 14*k2^2*k3^2 + 17*k3^4)) + 2*Sqrt[2]*(c2 + c4)*
        (-1 + F^2)^2*k2^2*(5*k1^12 - 70*k2^2*(3*k2^2 - 2*k3^2)*
          (k2^2 - k3^2)^4 + 5*k1^10*(3*k2^2 + k3^2) - 
         3*k1^8*(48*k2^4 - 115*k2^2*k3^2 + 135*k3^4) - 5*k1^2*(k2^2 - k3^2)^2*
          (41*k2^6 + 124*k2^4*k3^2 - 237*k2^2*k3^4 + 96*k3^6) + 
         k1^6*(-114*k2^6 + 317*k2^4*k3^2 - 770*k2^2*k3^4 + 575*k3^6) + 
         k1^4*(621*k2^8 - 2157*k2^6*k3^2 + 2831*k2^4*k3^4 - 1595*k2^2*k3^6 + 
           300*k3^8)) - (-1 + F^2)*f1*(3*k1^12*(12*k2^2 - 35*k3^2) + 
         k1^10*(-796*k2^2*k3^2 + 945*k3^4) + 140*(k2^2 - k3^2)^4*
          (4*k2^6 + 12*k2^4*k3^2 - 2*k2^2*k3^4 - 3*k3^6) - 
         5*k1^2*(k2^2 - k3^2)^3*(192*k2^6 - 712*k2^4*k3^2 - 75*k2^2*k3^4 + 
           441*k3^6) - 2*k1^8*(160*k2^6 + 557*k2^4*k3^2 - 2277*k2^2*k3^4 + 
           1575*k3^6) - 2*k1^6*(8*k2^8 + 70*k2^6*k3^2 - 2980*k2^4*k3^4 + 
           5527*k2^2*k3^6 - 2625*k3^8) + k1^4*(700*k2^10 + 1251*k2^8*k3^2 - 
           194*k2^6*k3^4 - 9882*k2^4*k3^6 + 12850*k2^2*k3^8 - 4725*k3^10))) + 
     b1*(-1 + F^2)*(-7*f1^2*k1^2*k2^2*(225*k1^10*k3^2 + 
         1575*k3^2*(-k2^2 + k3^2)^5 + 5*k1^8*(48*k2^4 + 33*k2^2*k3^2 - 
           149*k3^4) + 35*k1^2*(k2^2 - k3^2)^3*(16*k2^4 - 161*k2^2*k3^2 + 
           125*k3^4) - 2*k1^6*(280*k2^6 + 1223*k2^4*k3^2 - 1600*k2^2*k3^4 + 
           205*k3^6) - 10*k1^4*(24*k2^8 + 563*k2^6*k3^2 - 1639*k2^4*k3^4 + 
           1425*k2^2*k3^6 - 373*k3^8)) - (-1 + F^2)*f1*
        (42*k1^16 - 420*k2^2*(k2^2 - k3^2)^6*(12*k2^2 - k3^2) - 
         2*k1^14*(124*k2^2 + 21*k3^2) + k1^12*(-1774*k2^4 + 1657*k2^2*k3^2) - 
         7*k1^2*(k2^2 - k3^2)^4*(1552*k2^6 - 307*k2^4*k3^2 - 425*k2^2*k3^4 + 
           60*k3^6) - k1^10*(608*k2^6 + 73*k2^4*k3^2 - 2899*k2^2*k3^4 + 
           840*k3^6) - k1^4*(k2^2 - k3^2)^2*(3850*k2^8 + 14197*k2^6*k3^2 - 
           21726*k2^4*k3^4 + 10891*k2^2*k3^6 - 1932*k3^8) + 
         2*k1^8*(4463*k2^8 - 14458*k2^6*k3^2 + 16555*k2^4*k3^4 - 
           8869*k2^2*k3^6 + 1365*k3^8) + k1^6*(6632*k2^10 - 41898*k2^8*k3^2 + 
           76398*k2^6*k3^4 - 61224*k2^4*k3^6 + 23494*k2^2*k3^8 - 
           3402*k3^10)) + 4*(-1 + F^2)^2*k1^2*k2^2*
        (35*Sqrt[2]*(c2 - c4)*k1^6*k3^4*(k1^2 + k2^2 - k3^2) + 
         ((c2 + c4)*(10*k1^12 + 5*k1^10*(10*k2^2 - 7*k3^2) + 
            70*k1^2*k2^2*(7*k2^2 - 5*k3^2)*(k2^2 - k3^2)^3 + 
            140*k2^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^4 + 
            k1^8*(8*k2^4 + 55*k2^2*k3^2 + 15*k3^4) + 
            k1^6*(-476*k2^6 + 943*k2^4*k3^2 - 620*k2^2*k3^4 + 145*k3^6) + 
            k1^4*(-310*k2^8 + 897*k2^6*k3^2 - 975*k2^4*k3^4 + 555*k2^2*k3^6 - 
              135*k3^8)))/Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(7168*F^10*k1^12*k2^6*k3^6) - 
  ((-1 + F^2)*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (70*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^4*(k1^2 + k2^2 - k3^2)*(k2^2 + k3^2) + 
     2*b1^2*(-1 + F^2)^2*k1^2*k2^2*(-245*(-4 + 4*F^2 + 21*f1)*k1^2*k2^2*
        (k2^2 - k3^2)^4 - 3969*f1*k2^2*(k2^2 - k3^2)^5 + 
       7*k1^10*((-10 + 10*F^2 - 27*f1)*k2^2 + 5*(-1 + F^2 + 2*f1)*k3^2) + 
       k1^8*(35*(-10 + 10*F^2 + 9*f1)*k2^4 + (12 - 12*F^2 - 385*f1)*k2^2*
          k3^2 + 70*(1 - F^2 + f1)*k3^4) - 70*k1^4*(k2^2 - k3^2)*
        ((-25 + 25*F^2 - 17*f1)*k2^6 + (37 - 37*F^2 + 49*f1)*k2^4*k3^2 + 
         5*(-3 + 3*F^2 - 7*f1)*k2^2*k3^4 + 3*(-1 + F^2 + f1)*k3^6) - 
       7*k1^6*((-6 + 6*F^2 - 634*f1)*k2^6 + (-45 + 45*F^2 + 1054*f1)*k2^4*
          k3^2 - 2*(-40 + 40*F^2 + 283*f1)*k2^2*k3^4 + 25*(-1 + F^2 + 2*f1)*
          k3^6)) + 2*f1*(280*f1^2*k1^4*(k2^3 - k2*k3^2)^2*
        (3*k1^6 - 7*k1^2*(k2^2 - k3^2)^2 - 3*k1^4*(k2^2 + k3^2) + 
         7*(k2^2 - k3^2)^2*(k2^2 + k3^2)) + 7*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*
        k2^2*k3^2*(7*k1^12 - 35*k1^10*(k2^2 - k3^2) + 
         385*k1^4*(k2^2 - k3^2)^4 + 567*k1^2*(k2^2 - k3^2)^5 + 
         210*(k2^2 - k3^2)^6 - 2*k1^8*(93*k2^4 - 206*k2^2*k3^2 + 105*k3^4) - 
         20*k1^6*(9*k2^6 - 21*k2^4*k3^2 + 19*k2^2*k3^4 - 7*k3^6)) - 
       (-1 + F^2)*f1*k1^2*(12*k1^12*(8*k2^2 - 15*k3^2) + 
         420*k2^2*k3^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^4 - 
         5*k1^2*(k2^2 - k3^2)^4*(100*k2^4 - 411*k2^2*k3^2 + 63*k3^4) + 
         5*k1^10*(4*k2^4 - 145*k2^2*k3^2 + 165*k3^4) + 
         20*k1^4*(k2^2 - k3^2)^2*(68*k2^6 + 12*k2^4*k3^2 - 107*k2^2*k3^4 + 
           33*k3^6) - 4*k1^8*(160*k2^6 - 122*k2^4*k3^2 - 285*k2^2*k3^4 + 
           270*k3^6) + k1^6*(-336*k2^8 + 1342*k2^6*k3^2 - 1538*k2^4*k3^4 + 
           474*k2^2*k3^6 + 90*k3^8))) + b1*(-1 + F^2)*
      (140*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k1^6*k2^4*k3^4*
        (k1^2 + k2^2 - k3^2) - 7*f1^2*k1^2*(-63*(k2^2 - k3^2)^5*
          (8*k2^4 - 23*k2^2*k3^2 + 5*k3^4) + 3*k1^10*(8*k2^4 - 37*k2^2*k3^2 + 
           35*k3^4) - 35*k1^2*(k2^2 - k3^2)^4*(8*k2^4 - 95*k2^2*k3^2 + 
           45*k3^4) - 15*k1^8*(24*k2^6 - 67*k2^4*k3^2 + 64*k2^2*k3^4 - 
           21*k3^6) + 10*k1^4*(k2^2 - k3^2)^2*(112*k2^6 + 277*k2^4*k3^2 - 
           658*k2^2*k3^4 + 273*k3^6) + 2*k1^6*(1321*k2^6*k3^2 - 
           3599*k2^4*k3^4 + 3255*k2^2*k3^6 - 945*k3^8)) + 
       (-1 + F^2)*f1*(-2940*k2^2*(k2^2 - k3^2)^6*(2*k2^2 + k3^2) + 
         k1^14*(18*k2^2 + 73*k3^2) + k1^12*(-496*k2^4 - 519*k2^2*k3^2 + 
           145*k3^4) - 42*k1^2*(k2^2 - k3^2)^4*(285*k2^6 + 4*k2^4*k3^2 - 
           259*k2^2*k3^4 + 10*k3^6) + k1^10*(-1558*k2^6 + 1520*k2^4*k3^2 + 
           848*k2^2*k3^4 + 510*k3^6) + k1^8*(648*k2^8 - 9600*k2^6*k3^2 + 
           7338*k2^4*k3^4 + 3716*k2^2*k3^6 - 2710*k3^8) + 
         k1^4*(k2^2 - k3^2)^2*(1408*k2^8 - 18661*k2^6*k3^2 + 
           26855*k2^4*k3^4 - 10919*k2^2*k3^6 - 123*k3^8) + 
         5*k1^6*(2414*k2^10 - 8477*k2^8*k3^2 + 10850*k2^6*k3^4 - 
           4972*k2^4*k3^6 - 320*k2^2*k3^8 + 505*k3^10))) - 
     2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*
      (-(b1*(-1 + F^2)*k1^4*(20*k1^10*(k2^2 - k3^2) + 
          280*(k2^3 - k2*k3^2)^4 + k1^8*(16*k2^4 - 55*k2^2*k3^2 + 40*k3^4) - 
          5*k1^6*(96*k2^6 - 139*k2^4*k3^2 + 75*k2^2*k3^4 - 24*k3^6) + 
          k1^4*(-104*k2^8 + 775*k2^6*k3^2 - 1380*k2^4*k3^4 + 1035*k2^2*k3^6 - 
            280*k3^8) + 5*k1^2*(92*k2^10 - 215*k2^8*k3^2 + 107*k2^6*k3^4 + 
            113*k2^4*k3^6 - 125*k2^2*k3^8 + 28*k3^10))) + 
       f1*(k1^16 - 420*k2^2*(k2^2 - k3^2)^6*(k2^2 + 3*k3^2) + 
         k1^14*(31*k2^2 + 24*k3^2) - 21*k1^2*k2^2*(k2^2 - k3^2)^5*
          (25*k2^2 + 182*k3^2) + k1^12*(3*k2^4 + 171*k2^2*k3^2 - 295*k3^4) + 
         21*k1^4*(k2^2 - k3^2)^4*(49*k2^4 - 155*k2^2*k3^2 - 9*k3^4) + 
         k1^10*(205*k2^6 + 389*k2^4*k3^2 - 1562*k2^2*k3^4 + 920*k3^6) + 
         k1^8*(-869*k2^8 + 2436*k2^6*k3^2 - 4542*k2^4*k3^4 + 4108*k2^2*k3^6 - 
           1245*k3^8) + k1^6*(481*k2^10 - 640*k2^8*k3^2 - 910*k2^6*k3^4 + 
           3160*k2^4*k3^6 - 2875*k2^2*k3^8 + 784*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(7168*F^10*k1^10*k2^8*k3^6), 
 -1/14336*((-1 + F^2)^2*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
     (-(b1^2*(-1 + F^2)^2*k1^4*(27*(-1 + F^2)*k1^6*k2^2 + 
         3*k1^4*(27*(-1 + F^2)*k2^4 - 21*(-1 + F^2)*k2^2*k3^2 - 49*f1*k3^4) + 
         7*k2^2*(k2^2 - k3^2)*(9*(-1 + F^2)*k2^4 - 2*(-2 + 2*F^2 + 21*f1)*
            k3^4) + 3*k1^2*(23*(-1 + F^2)*k2^6 - 14*(-1 + F^2)*k2^4*k3^2 + 
           (4 - 4*F^2 - 147*f1)*k2^2*k3^4 + 49*f1*k3^6))) + 
      b1*(-1 + F^2)*f1*(48*(-1 + F^2)*k1^12 - 3*(-1 + F^2)*k1^10*
         (64*k2^2 - 25*k3^2) + 2520*(-1 + F^2)*(k2^3 - k2*k3^2)^4 - 
        3*k1^8*(516*(-1 + F^2)*k2^4 - 679*(-1 + F^2)*k2^2*k3^2 + 
          4*(-67 + 67*F^2 - 147*f1)*k3^4) + k1^6*(-1620*(-1 + F^2)*k2^6 + 
          2793*(-1 + F^2)*k2^4*k3^2 + 4*(638 - 638*F^2 + 2401*f1)*k2^2*k3^4 + 
          7*(-179 + 179*F^2 - 1092*f1)*k3^6) + 84*k1^2*(k2^2 - k3^2)^2*
         (61*(-1 + F^2)*k2^6 - 45*(-1 + F^2)*k2^4*k3^2 + 
          (-12 + 12*F^2 + 35*f1)*k2^2*k3^4 + (12 - 12*F^2 - 35*f1)*k3^6) + 
        k1^4*(1140*(-1 + F^2)*k2^8 - 1437*(-1 + F^2)*k2^6*k3^2 + 
          4*(-317 + 317*F^2 + 2695*f1)*k2^4*k3^4 - 
          7*(-201 + 201*F^2 + 2800*f1)*k2^2*k3^6 + 28*(-19 + 19*F^2 + 315*f1)*
           k3^8)) + 4*f1*(4*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^4*
         (k1^6 + 2*k1^4*(7*k2^2 - 9*k3^2) - 28*(-(k2^2*k3) + k3^3)^2 + 
          k1^2*(15*k2^4 - 60*k2^2*k3^2 + 43*k3^4)) + 7*f1^2*k1^2*k3^4*
         (84*k1^6 + 6*k1^4*(41*k2^2 - 49*k3^2) + 105*(k2^2 - k3^2)^3 + 
          7*k1^2*(29*k2^4 - 74*k2^2*k3^2 + 45*k3^4)) - 
        (-1 + F^2)*f1*(12*k1^12 + 42*k1^10*(-2*k2^2 + k3^2) - 
          630*(k2^3 - k2*k3^2)^4 + k1^8*(-273*k2^4 + 732*k2^2*k3^2 - 
            232*k3^4) - 21*k1^2*(k2^2 - k3^2)^2*(15*k2^6 + 47*k2^4*k3^2 - 
            34*k2^2*k3^4 - 12*k3^6) + k1^6*(399*k2^6 - 255*k2^4*k3^2 - 
            862*k2^2*k3^4 + 402*k3^6) + k1^4*(747*k2^8 - 3234*k2^6*k3^2 + 
            2827*k2^4*k3^4 + 136*k2^2*k3^6 - 476*k3^8))))*
     Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^12*k1^12*k2^8*k3^4) + 
  ((-1 + F^2)^2*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (7*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^2*(3*k1^2 + 7*k2^2 - 7*k3^2) - 
     7*b1^2*(-1 + F^2)^2*k1^2*k2^2*(18*(-1 + F^2)*k1^8 + 
       1512*f1*k3^2*(-k2^2 + k3^2)^3 + k1^6*(24*(-1 + F^2)*k2^2 + 
         (36 - 36*F^2 - 29*f1)*k3^2) + 7*k1^2*k3^2*(k2^2 - k3^2)*
        ((-3 + 3*F^2 - 296*f1)*k2^2 + 278*f1*k3^2) + 
       k1^4*(-42*(-1 + F^2)*k2^4 + (-65 + 65*F^2 - 749*f1)*k2^2*k3^2 + 
         7*(2 - 2*F^2 + 89*f1)*k3^4)) + b1*(-1 + F^2)*
      (7*f1^2*k2^2*(27*k1^10 + 21*k1^2*(555*k2^2 - 383*k3^2)*
          (k2^2 - k3^2)^3 + 5775*(k2^2 - k3^2)^5 + 
         k1^8*(-1477*k2^2 + 1765*k3^2) + k1^6*(-3426*k2^4 + 9884*k2^2*k3^2 - 
           5666*k3^4) + 14*k1^4*(269*k2^6 - 361*k2^4*k3^2 - 17*k2^2*k3^4 + 
           109*k3^6)) - (-1 + F^2)*f1*(168*k1^12 + 
         3*k1^10*(104*k2^2 - 49*k3^2) - 840*k2^2*(k2^2 - k3^2)^4*
          (12*k2^2 - k3^2) + k1^8*(-1880*k2^4 + 4380*k2^2*k3^2 - 2163*k3^4) - 
         28*k1^2*(k2^3 - k2*k3^2)^2*(504*k2^4 - 373*k2^2*k3^2 + 45*k3^4) + 
         k1^6*(-4160*k2^6 + 14899*k2^4*k3^2 - 15148*k2^2*k3^4 + 4599*k3^6) + 
         k1^4*(-7896*k2^8 + 19536*k2^6*k3^2 - 21779*k2^4*k3^4 + 
           12244*k2^2*k3^6 - 2457*k3^8)) + 4*(-1 + F^2)^2*k1^4*k2^2*
        (3*k1^2 + 7*k2^2 - 7*k3^2)*((7*(c2 - c4)*k1^2*k3^2)/Sqrt[2] + 
         ((c2 + c4)*(3*k1^4 - 5*k2^4 + 3*k2^2*k3^2 - 6*k1^2*(k2^2 - k3^2)))/
          Sqrt[2])) + 4*f1*(7*f1^2*k1^2*k2^2*(34*k1^6*k3^2 + 
         525*k3^2*(k2^2 - k3^2)^3 + 12*k1^4*(4*k2^4 + 35*k2^2*k3^2 - 
           35*k3^4) - 7*k1^2*(16*k2^6 - 145*k2^4*k3^2 + 258*k2^2*k3^4 - 
           129*k3^6)) + (-1 + F^2)*f1*(42*k1^12 + 
         2*k1^10*(52*k2^2 - 63*k3^2) + 210*k2^2*(k2^2 - k3^2)^4*
          (12*k2^2 - k3^2) + k1^8*(-506*k2^4 + 725*k2^2*k3^2 - 168*k3^4) + 
         7*k1^2*(k2^2 - k3^2)^2*(508*k2^6 - 147*k2^4*k3^2 - 227*k2^2*k3^4 + 
           42*k3^6) + k1^6*(-1912*k2^6 + 5181*k2^4*k3^2 - 3921*k2^2*k3^4 + 
           840*k3^6) + k1^4*(-676*k2^8 + 5823*k2^6*k3^2 - 9576*k2^4*k3^4 + 
           5311*k2^2*k3^6 - 882*k3^8)) + 4*(-1 + F^2)^2*k1^2*k2^2*
        ((7*(c2 - c4)*k1^2*k3^2*(k1^4 + 21*k1^2*(k2^2 - k3^2) + 
            28*(k2^2 - k3^2)^2))/Sqrt[2] + Sqrt[2]*(c2 + c4)*
          (k1^6*(k2^2 + 2*k3^2) + 28*(3*k2^2 - 2*k3^2)*(k2^3 - k2*k3^2)^2 + 
           k1^4*(-38*k2^4 + 99*k2^2*k3^2 - 63*k3^4) + 
           k1^2*(-3*k2^6 + 113*k2^4*k3^2 - 193*k2^2*k3^4 + 85*k3^6)))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(14336*F^12*k1^12*k2^6*k3^6) + 
  ((-1 + F^2)^2*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^3*
    (14*b1*(-1 + F^2)^3*k1^4*k2^2*(3*k1^2 + 7*k2^2 - 7*k3^2)*
      (b1^2*k2^2*k3^2 + 2*Sqrt[2]*(c2 - c4)*k2^2*k3^2 + 
       b1*k1^2*(6*k2^2 - 3*k3^2) - 2*b1*k2^2*(3*k2^2 + k3^2)) + 
     56*f1^3*k1^2*(k1^8*(20*k2^2 - 21*k3^2) + 105*(4*k2^2 - 3*k3^2)*
        (k2^2 - k3^2)^4 + 336*k1^6*k3^2*(-k2^2 + k3^2) + 
       945*k1^2*k3^2*(-k2^2 + k3^2)^3 - k1^4*(280*k2^6 + 393*k2^4*k3^2 - 
         1610*k2^2*k3^4 + 945*k3^6)) - (-1 + F^2)*f1^2*
      (256*k1^12 + k1^10*(-2*(248 + 469*b1)*k2^2 + (1408 + 735*b1)*k3^2) + 
       105*(k2^2 - k3^2)^4*(6*(16 + 77*b1)*k2^4 - (48 + 539*b1)*k2^2*k3^2 + 
         77*b1*k3^4) - k1^8*(6*(1024 + 2695*b1)*k2^4 - (10688 + 21609*b1)*
          k2^2*k3^2 + 21*(272 + 259*b1)*k3^4) + 14*k1^4*(k2^2 - k3^2)^2*
        ((480 + 3962*b1)*k2^4 - 7*(24 + 763*b1)*k2^2*k3^2 + 
         3*(-24 + 497*b1)*k3^4) + 21*k1^2*(k2^2 - k3^2)^2*
        (10*(80 + 511*b1)*k2^6 - 35*(32 + 327*b1)*k2^4*k3^2 + 
         24*(16 + 315*b1)*k2^2*k3^4 - 1225*b1*k3^6) - 
       2*k1^6*(2*(2084 + 5313*b1)*k2^6 - (10624 + 20867*b1)*k2^4*k3^2 + 
         8*(1123 + 1302*b1)*k2^2*k3^4 - (2528 + 735*b1)*k3^6)) + 
     2*(-1 + F^2)^2*f1*k1^2*(14*Sqrt[2]*(c2 - c4)*k1^2*k2^2*k3^2*
        (k1^2*(4*k2^2 + 21*k3^2) - 7*(4*k2^4 - 7*k2^2*k3^2 + 3*k3^4)) + 
       7*b1^2*k1^2*k3^2*(k1^2*(-97*k2^4 + 21*k3^4) + 
         21*(3*k2^6 - 3*k2^4*k3^2 + k2^2*k3^4 - k3^6)) + 
       b1*(8*k1^8*(37*k2^2 + 22*k3^2) + k1^6*(760*k2^4 + 137*k2^2*k3^2 - 
           145*k3^4) - 168*(k2^2 - k3^2)^2*(43*k2^6 - 72*k2^4*k3^2 + 
           35*k2^2*k3^4 + 2*k3^6) - 4*k1^4*(1366*k2^6 - 1733*k2^4*k3^2 + 
           224*k2^2*k3^4 + 324*k3^6) - 7*k1^2*(1632*k2^8 - 4421*k2^6*k3^2 + 
           3839*k2^4*k3^4 - 771*k2^2*k3^6 - 279*k3^8))) + 
     2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*
      (-2*b1*(-1 + F^2)*k1^2*k2^2*(15*k1^6 + k1^4*(53*k2^2 - 44*k3^2) + 
         3*k1^2*(11*k2^4 - 27*k2^2*k3^2 + 7*k3^4) - 
         21*(k2^6 + k2^4*k3^2 - 2*k2^2*k3^4)) + 
       f1*(64*k1^10 + 1680*k2^2*(k2^2 - k3^2)^4 + 
         k1^8*(-384*k2^2 + 135*k3^2) + k1^6*(-2000*k2^4 + 3145*k2^2*k3^2 - 
           1177*k3^4) + k1^4*(560*k2^6 + 1145*k2^4*k3^2 - 2856*k2^2*k3^4 + 
           1493*k3^6) + 21*k1^2*(144*k2^8 - 421*k2^6*k3^2 + 385*k2^4*k3^4 - 
           85*k2^2*k3^6 - 23*k3^8))))*Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(28672*F^12*k1^10*k2^8*k3^6), 
 -1/1792*(f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
     (28*b1^3*(-1 + F^2)^3*k1^4*k2^4*k3^4*(k1^2 + k2^2 - k3^2)^2*
       (17*k1^4 + 10*k1^2*(k2^2 - k3^2) + 5*(k2^2 - k3^2)^2) + 
      b1^2*(-1 + F^2)^2*(9*(-1 + F^2)*k1^18*k2^2 + 48*(-1 + F^2)*k2^6*
         (k2^2 - k3^2)^7 + k1^16*(-24*(-1 + F^2)*k2^4 - 66*(-1 + F^2)*k2^2*
           k3^2 + 7*(-20 + 20*F^2 - 21*f1)*k3^4) + 
        k1^14*(-732*(-1 + F^2)*k2^6 + 246*(-1 + F^2)*k2^4*k3^2 + 
          (-991 + 991*F^2 - 868*f1)*k2^2*k3^4 - 98*(-8 + 8*F^2 - 9*f1)*
           k3^6) + k1^2*(k2^2 - k3^2)^5*(129*(-1 + F^2)*k2^8 + 
          135*(-1 + F^2)*k2^6*k3^2 + 2*(74 - 74*F^2 + 147*f1)*k2^4*k3^4 + 
          42*(-2 + 2*F^2 - 7*f1)*k2^2*k3^6 - 56*(-1 + F^2)*k3^8) + 
        k1^12*(1800*(-1 + F^2)*k2^8 - 1650*(-1 + F^2)*k2^6*k3^2 + 
          (-3658 + 3658*F^2 - 1309*f1)*k2^4*k3^4 + 
          2*(1958 - 1958*F^2 + 1883*f1)*k2^2*k3^6 + 441*(-4 + 4*F^2 - 5*f1)*
           k3^8) - k1^4*(k2^2 - k3^2)^4*(264*(-1 + F^2)*k2^8 - 
          810*(-1 + F^2)*k2^6*k3^2 + (570 - 570*F^2 - 637*f1)*k2^4*k3^4 - 
          30*(-8 + 8*F^2 - 49*f1)*k2^2*k3^6 + 49*(-4 + 4*F^2 + 3*f1)*k3^8) + 
        k1^10*(-1314*(-1 + F^2)*k2^10 + 630*(-1 + F^2)*k2^8*k3^2 + 
          (-5701 + 5701*F^2 + 3934*f1)*k2^6*k3^4 - 
          44*(-225 + 225*F^2 - 28*f1)*k2^4*k3^6 + 
          5*(-1279 + 1279*F^2 - 1218*f1)*k2^2*k3^8 - 980*(-2 + 2*F^2 - 3*f1)*
           k3^10) - k1^6*(k2^2 - k3^2)^2*(12*(-1 + F^2)*k2^10 - 
          762*(-1 + F^2)*k2^8*k3^2 + (1129 - 1129*F^2 - 2240*f1)*k2^6*k3^4 + 
          14*(-160 + 160*F^2 + 377*f1)*k2^4*k3^6 + (361 - 361*F^2 - 1484*f1)*
           k2^2*k3^8 - 882*f1*k3^10) + k1^8*(360*(-1 + F^2)*k2^12 - 
          966*(-1 + F^2)*k2^10*k3^2 + (-5240 + 5240*F^2 + 2387*f1)*k2^8*
           k3^4 - 12*(-734 + 734*F^2 + 763*f1)*k2^6*k3^6 + 
          30*(-314 + 314*F^2 + 119*f1)*k2^4*k3^8 + 
          2*(2217 - 2217*F^2 + 2030*f1)*k2^2*k3^10 + 245*(-4 + 4*F^2 - 9*f1)*
           k3^12)) - b1*(-1 + F^2)*(56*f1^2*k1^2*k2^2*k3^4*
         (11*k1^12 + k1^10*(28*k2^2 - 22*k3^2) - 12*k1^6*(8*k2^2 - 5*k3^2)*
           (k2^2 - k3^2)^2 + 7*(k2^2 - k3^2)^6 + 6*k1^2*(k2^2 - k3^2)^4*
           (6*k2^2 - k3^2) + k1^4*(k2^2 - k3^2)^2*(85*k2^4 + 46*k2^2*k3^2 - 
            35*k3^4) + k1^8*(-71*k2^4 + 54*k2^2*k3^2 - 15*k3^4)) - 
        8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k3^4*(-2*k1^16 + 
          2*k3^2*(-k2^2 + k3^2)^7 + k1^14*(-13*k2^2 + 12*k3^2) + 
          k1^12*(-50*k2^4 + 60*k2^2*k3^2 - 28*k3^4) + k1^2*(k2^2 - k3^2)^5*
           (5*k2^4 - 23*k2^2*k3^2 + 12*k3^4) + k1^6*(k2^2 - k3^2)^3*
           (k2^4 + 7*k2^2*k3^2 + 28*k3^4) + 2*k1^4*(k2^2 - k3^2)^3*
           (k2^6 - 37*k2^4*k3^2 + 34*k2^2*k3^4 - 14*k3^6) + 
          k1^10*(-89*k2^6 + 176*k2^4*k3^2 - 115*k2^2*k3^4 + 28*k3^6) + 
          k1^8*(-110*k2^8 + 262*k2^6*k3^2 - 226*k2^4*k3^4 + 74*k2^2*k3^6)) + 
        (-1 + F^2)*f1*(9*k1^18*k3^2 - 48*k2^2*k3^2*(k2^2 - k3^2)^7*
           (2*k2^2 - k3^2) - 3*k1^16*(16*k2^4 + 36*k2^2*k3^2 - 63*k3^4) + 
          k1^14*(48*k2^6 - 840*k2^4*k3^2 + 1657*k2^2*k3^4 - 1239*k3^6) + 
          3*k1^4*(k2^2 - k3^2)^4*(144*k2^8 - 316*k2^6*k3^2 + 81*k2^4*k3^4 + 
            202*k2^2*k3^6 - 87*k3^8) - k1^2*(k2^2 - k3^2)^5*
           (48*k2^8 + 435*k2^6*k3^2 - 344*k2^4*k3^4 - 79*k2^2*k3^6 + 
            84*k3^8) + k1^12*(528*k2^8 + 1380*k2^6*k3^2 + 2617*k2^4*k3^4 - 
            6374*k2^2*k3^6 + 2961*k3^8) - k1^6*(k2^2 - k3^2)^2*
           (1392*k2^10 - 240*k2^8*k3^2 + 1877*k2^6*k3^4 + 563*k2^4*k3^6 - 
            197*k2^2*k3^8 + 189*k3^10) - k1^10*(1680*k2^10 - 1458*k2^8*k3^2 + 
            1931*k2^6*k3^4 + 7529*k2^4*k3^6 - 10395*k2^2*k3^8 + 3465*k3^10) + 
          k1^8*(2160*k2^12 - 1956*k2^10*k3^2 - 1513*k2^8*k3^4 - 
            2724*k2^6*k3^6 + 9370*k2^4*k3^8 - 7248*k2^2*k3^10 + 
            1911*k3^12))) + 8*f1*k1^2*(k1^2 + k2^2 - k3^2)*
       (-14*f1^2*k1^2*k2^4*k3^4*(k1^6 - 5*k1^4*(k2^2 - k3^2) - 
          k1^2*(k2^2 - k3^2)^2 + 5*(k2^2 - k3^2)^3) + (-1 + F^2)*f1*k2^2*
         (3*k1^12*(k2^2 - 2*k3^2) - 2*k1^10*(3*k2^4 - 9*k2^2*k3^2 + 7*k3^4) - 
          3*(k2^2 - k3^2)^5*(3*k2^4 + 3*k2^2*k3^2 + 8*k3^4) + 
          2*k1^2*(k2^2 - k3^2)^3*(21*k2^6 - 24*k2^4*k3^2 - 29*k2^2*k3^4 + 
            11*k3^6) + k1^8*(-15*k2^6 + 48*k2^4*k3^2 - 47*k2^2*k3^4 + 
            28*k3^6) - k1^4*(k2^2 - k3^2)^2*(75*k2^6 - 156*k2^4*k3^2 - 
            47*k2^2*k3^4 + 46*k3^6) + 6*k1^6*(10*k2^8 - 38*k2^6*k3^2 + 
            43*k2^4*k3^4 - 21*k2^2*k3^6 + 6*k3^8)) + 2*(-1 + F^2)^2*k3^4*
         (56*Sqrt[2]*(c2 - c4)*k1^4*k2^4*(k1^2 + k2^2 - k3^2)^2 + 
          ((c2 + c4)*(3*k1^12 + 2*k1^10*(8*k2^2 - 9*k3^2) + 3*(k2^2 - k3^2)^4*
              (k2^4 - 4*k2^2*k3^2 + k3^4) + 2*k1^2*(k2^2 - k3^2)^3*
              (18*k2^4 - 29*k2^2*k3^2 + 9*k3^4) + k1^4*(k2^2 - k3^2)^2*
              (81*k2^4 - 118*k2^2*k3^2 + 45*k3^4) + k1^8*(89*k2^4 - 88*k2^2*
                k3^2 + 45*k3^4) + 12*k1^6*(13*k2^6 - 24*k2^4*k3^2 + 16*k2^2*
                k3^4 - 5*k3^6)))/Sqrt[2])))*
     Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^8*k1^9*k2^7*k3^4) + 
  (f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (7*b1^3*(-1 + F^2)^3*k1^2*k2^2*k3^2*(5*k1^14 + 14*k1^12*(k2^2 - k3^2) + 
       16*(k2^2 - k3^2)^7 - 3*k1^6*(k2^2 - k3^2)^2*(31*k2^4 - 30*k2^2*k3^2 - 
         25*k3^4) + 10*k1^4*(k2^2 - k3^2)^3*(3*k2^4 - 6*k2^2*k3^2 + 
         11*k3^4) + k1^10*(7*k2^4 + 18*k2^2*k3^2 + 11*k3^4) + 
       k1^2*(k2^2 - k3^2)^4*(49*k2^4 - 98*k2^2*k3^2 + 69*k3^4) - 
       4*k1^8*(7*k2^6 - 37*k2^4*k3^2 + 25*k2^2*k3^4 + 5*k3^6)) - 
     b1^2*(-1 + F^2)^2*k2^2*(14*(-1 + F^2)*k1^18 - 176*(-1 + F^2)*k2^2*k3^2*
        (k2^2 - k3^2)^7 + 7*k1^16*(14*(-1 + F^2)*k2^2 + (10 - 10*F^2 + f1)*
          k3^2) + k1^14*(-3010*(-1 + F^2)*k2^4 + (181 - 181*F^2 + 322*f1)*
          k2^2*k3^2 + 2*(-127 + 127*F^2 - 266*f1)*k3^4) - 
       k1^4*(k2^2 - k3^2)^4*(378*(-1 + F^2)*k2^6 + 9*(104 - 104*F^2 + 77*f1)*
          k2^4*k3^2 + 2*(-1434 + 1434*F^2 + 497*f1)*k2^2*k3^4 + 
         (1150 - 1150*F^2 - 2667*f1)*k3^6) - k1^2*(k2^2 - k3^2)^5*
        (224*(-1 + F^2)*k2^6 + (-165 + 165*F^2 + 448*f1)*k2^4*k3^2 + 
         (-523 + 523*F^2 - 14*f1)*k2^2*k3^4 - 2*(-192 + 192*F^2 + 217*f1)*
          k3^6) + k1^12*(5922*(-1 + F^2)*k2^6 - 7*(-924 + 924*F^2 - 155*f1)*
          k2^4*k3^2 + 2*(-400 + 400*F^2 - 2163*f1)*k2^2*k3^4 + 
         (598 - 598*F^2 + 2989*f1)*k3^6) + k1^6*(k2^2 - k3^2)^2*
        (378*(-1 + F^2)*k2^8 + (1479 - 1479*F^2 - 3374*f1)*k2^6*k3^2 - 
         2*(-1051 + 1051*F^2 + 434*f1)*k2^4*k3^4 + 
         (-4233 + 4233*F^2 + 11746*f1)*k2^2*k3^6 - 
         2*(-515 + 515*F^2 + 3416*f1)*k3^8) - 
       k1^10*(4326*(-1 + F^2)*k2^8 + (9301 - 9301*F^2 + 1204*f1)*k2^6*k3^2 + 
         2*(-1615 + 1615*F^2 + 3577*f1)*k2^4*k3^4 + 
         29*(-71 + 71*F^2 - 560*f1)*k2^2*k3^6 + 2*(381 - 381*F^2 + 3605*f1)*
          k3^8) + k1^8*(1526*(-1 + F^2)*k2^10 + (6262 - 6262*F^2 - 1071*f1)*
          k2^8*k3^2 + 12*(-712 + 712*F^2 - 497*f1)*k2^6*k3^4 - 
         6*(-900 + 900*F^2 - 4529*f1)*k2^4*k3^6 - 6*(-17 + 17*F^2 + 4690*f1)*
          k2^2*k3^8 + 7*(14 - 14*F^2 + 1335*f1)*k3^10)) + 
     b1*(-1 + F^2)*(-56*f1^2*k1^2*k2^6*(11*k1^12 + 12*k1^6*(5*k2^2 - 8*k3^2)*
          (k2^2 - k3^2)^2 - 6*k1^2*(k2^2 - 6*k3^2)*(k2^2 - k3^2)^4 + 
         7*(k2^2 - k3^2)^6 + k1^10*(-22*k2^2 + 28*k3^2) - 
         k1^4*(k2^2 - k3^2)^2*(35*k2^4 - 46*k2^2*k3^2 - 85*k3^4) + 
         k1^8*(-15*k2^4 + 54*k2^2*k3^2 - 71*k3^4)) + 14*Sqrt[2]*(c2 - c4)*
        (-1 + F^2)^2*k1^2*k2^2*k3^2*(k1^14 + 6*k1^12*(k2^2 - k3^2) + 
         6*k1^4*(k2^2 - k3^2)^5 + 21*k1^2*(k2^2 - k3^2)^6 + 
         8*(k2^2 - k3^2)^7 + k1^10*(-109*k2^4 - 6*k2^2*k3^2 + 3*k3^4) - 
         k1^6*(k2^2 - k3^2)^2*(73*k2^4 - 50*k2^2*k3^2 + 25*k3^4) + 
         20*k1^8*(7*k2^6 - 5*k2^4*k3^2 - 3*k2^2*k3^4 + k3^6)) + 
       2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*
        (k1^18 + k1^16*(8*k2^2 - 2*k3^2) + 8*k2^2*(3*k2^2 - 2*k3^2)*
          (k2^2 - k3^2)^7 + k1^14*(-228*k2^4 + 31*k2^2*k3^2 - 13*k3^4) - 
         k1^6*(k2^2 - k3^2)^3*(36*k2^6 - 77*k2^4*k3^2 + 268*k2^2*k3^4 - 
           83*k3^6) + 4*k1^12*(128*k2^6 - 234*k2^4*k3^2 + k2^2*k3^4 - 
           5*k3^6) + k1^2*(k2^2 - k3^2)^5*(65*k2^6 + 40*k2^4*k3^2 - 
           141*k2^2*k3^4 + 60*k3^6) - 4*k1^4*(k2^2 - k3^2)^3*
          (40*k2^8 - 181*k2^6*k3^2 + 230*k2^4*k3^4 - 163*k2^2*k3^6 + 
           42*k3^8) + k1^10*(-442*k2^8 + 1381*k2^6*k3^2 - 553*k2^4*k3^4 - 
           541*k2^2*k3^6 + 155*k3^8) + 2*k1^8*(128*k2^10 - 697*k2^8*k3^2 + 
           1268*k2^6*k3^4 - 966*k2^4*k3^6 + 340*k2^2*k3^8 - 73*k3^10)) + 
       (-1 + F^2)*f1*(15*k1^18*k3^2 + k1^16*(69*k2^2*k3^2 - 72*k3^4) + 
         16*(k2^2 - k3^2)^7*(4*k2^6 + 12*k2^4*k3^2 - 2*k2^2*k3^4 - 3*k3^6) + 
         k1^14*(-64*k2^6 - 765*k2^4*k3^2 + 167*k2^2*k3^4 + 36*k3^6) - 
         k1^2*(k2^2 - k3^2)^5*(192*k2^8 - 1228*k2^6*k3^2 + 301*k2^4*k3^4 + 
           576*k2^2*k3^6 - 369*k3^8) + k1^12*(640*k2^8 + 1133*k2^6*k3^2 + 
           2822*k2^4*k3^4 - 2211*k2^2*k3^6 + 504*k3^8) + 
         k1^4*(k2^2 - k3^2)^4*(512*k2^8 + 135*k2^6*k3^2 + 658*k2^4*k3^4 - 
           2601*k2^2*k3^6 + 1224*k3^8) + k1^10*(-1856*k2^10 + 681*k2^8*k3^2 + 
           7897*k2^6*k3^4 - 8947*k2^4*k3^6 + 6999*k2^2*k3^8 - 1638*k3^10) - 
         k1^6*(k2^2 - k3^2)^2*(1472*k2^10 - 8377*k2^8*k3^2 + 2181*k2^6*k3^4 + 
           6637*k2^4*k3^6 - 7765*k2^2*k3^8 + 2268*k3^10) + 
         k1^8*(2368*k2^12 - 8889*k2^10*k3^2 + 12492*k2^8*k3^4 - 
           15142*k2^6*k3^6 + 18596*k2^4*k3^8 - 11945*k2^2*k3^10 + 
           2520*k3^12))) + 8*f1*k1^2*k2^2*
      (-14*f1^2*k1^2*k2^4*k3^2*(k1^2 - k2^2 + k3^2)^2*
        (k1^4 + 6*k1^2*(k2^2 - k3^2) + 5*(k2^2 - k3^2)^2) - 
       (-1 + F^2)*f1*(k1^14*(6*k2^2 - 3*k3^2) + k1^12*(8*k2^4 - 9*k2^2*k3^2 + 
           3*k3^4) + 3*(k2^2 - k3^2)^6*(8*k2^4 + 3*k2^2*k3^2 + 3*k3^4) + 
         k1^6*(k2^2 - k3^2)^2*(82*k2^6 - 137*k2^4*k3^2 + 12*k2^2*k3^4 + 
           15*k3^6) + k1^10*(-42*k2^6 + 79*k2^4*k3^2 - 72*k2^2*k3^4 + 
           21*k3^6) - k1^4*(k2^2 - k3^2)^3*(24*k2^6 + 11*k2^4*k3^2 - 
           108*k2^2*k3^4 + 33*k3^6) - k1^2*(k2^2 - k3^2)^4*
          (46*k2^6 - 73*k2^4*k3^2 - 48*k2^2*k3^4 + 33*k3^6) + 
         k1^8*(-8*k2^8 + 51*k2^6*k3^2 - 163*k2^4*k3^4 + 165*k2^2*k3^6 - 
           45*k3^8)) + (-1 + F^2)^2*(7*Sqrt[2]*(c2 - c4)*k1^2*k3^2*
          (k1^10*k3^2 + 6*k3^2*(k2^2 - k3^2)^5 + 8*k1^4*(k2^2 - k3^2)^2*
            (6*k2^4 + 5*k2^2*k3^2 - 5*k3^4) + 2*k1^8*(8*k2^4 + 5*k2^2*k3^2 - 
             5*k3^4) - k1^2*(k2^2 - k3^2)^3*(16*k2^4 - 25*k2^2*k3^2 + 
             25*k3^4) - 6*k1^6*(8*k2^6 - 5*k2^4*k3^2 + 10*k2^2*k3^4 - 
             5*k3^6)) + ((c2 + c4)*(k1^14*k3^2 + 2*k1^12*
             (4*k2^4 + 8*k2^2*k3^2 + k3^4) + 2*k1^4*(k2^2 - k3^2)^3*
             (140*k2^6 - 146*k2^4*k3^2 + 129*k2^2*k3^4 - 127*k3^6) + 
            k1^10*(-64*k2^6 + 99*k2^4*k3^2 + 66*k2^2*k3^4 - 89*k3^6) + 
            6*(k2^2 - k3^2)^5*(4*k2^6 + k2^4*k3^2 - 4*k2^2*k3^4 + k3^6) - 
            k1^2*(k2^2 - k3^2)^4*(128*k2^6 - 149*k2^4*k3^2 - 6*k2^2*k3^4 + 
              47*k3^6) - k1^6*(k2^2 - k3^2)^2*(320*k2^6 - 423*k2^4*k3^2 - 
              490*k2^2*k3^4 + 425*k3^6) + k1^8*(200*k2^8 - 594*k2^6*k3^2 + 
              254*k2^4*k3^4 - 650*k2^2*k3^6 + 310*k3^8)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(1792*F^8*k1^9*k2^5*k3^6) + 
  (f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (-7*b1^3*(-1 + F^2)^3*k1^2*k2^4*k3^2*(3*k1^12 + 2*k1^10*(k2^2 - k3^2) + 
       18*k1^2*(k2^2 - k3^2)^5 + 7*(k2^2 - k3^2)^6 + k1^4*(k2^2 - k3^2)^3*
        (53*k2^2 + 43*k3^2) + 3*k1^8*(75*k2^4 + 10*k2^2*k3^2 - 21*k3^4) - 
       4*k1^6*(77*k2^6 - 87*k2^4*k3^2 + 39*k2^2*k3^4 - 29*k3^6)) + 
     b1^2*(-1 + F^2)^2*(7*(-1 + F^2)*k1^16*k2^2*(2*k2^2 + 3*k3^2) - 
       56*(-1 + F^2)*(k2^2 - k3^2)^7*(4*k2^6 + 3*k2^4*k3^2 + k3^6) + 
       7*k1^14*(14*(-1 + F^2)*k2^6 + (20 - 20*F^2 + 21*f1)*k2^4*k3^2 - 
         2*(-11 + 11*F^2 + 20*f1)*k2^2*k3^4 + (-20 + 20*F^2 - 21*f1)*k3^6) - 
       7*k1^2*(k2^2 - k3^2)^6*(54*(-1 + F^2)*k2^6 + (-86 + 86*F^2 + 63*f1)*
          k2^4*k3^2 + 7*(-4 + 4*F^2 + 3*f1)*k3^6) + 
       k1^12*(-3010*(-1 + F^2)*k2^8 + (3317 - 3317*F^2 + 1386*f1)*k2^6*k3^2 + 
         2*(-1144 + 1144*F^2 - 1253*f1)*k2^4*k3^4 + 
         7*(-177 + 177*F^2 + 34*f1)*k2^2*k3^6 - 98*(-8 + 8*F^2 - 9*f1)*
          k3^8) + 7*k1^6*(k2^2 - k3^2)^2*(218*(-1 + F^2)*k2^10 + 
         (220 - 220*F^2 - 333*f1)*k2^8*k3^2 + 2*(-66 + 66*F^2 + 265*f1)*k2^6*
          k3^4 + 8*(-30 + 30*F^2 - 59*f1)*k2^4*k3^6 + 
         2*(159 - 159*F^2 + 295*f1)*k2^2*k3^8 + 35*(-4 + 4*F^2 - 9*f1)*
          k3^10) + k1^10*(5922*(-1 + F^2)*k2^10 + 
         (-1306 + 1306*F^2 - 6111*f1)*k2^8*k3^2 + 14*(189 - 189*F^2 + 65*f1)*
          k2^6*k3^4 + 2*(-509 + 509*F^2 + 1218*f1)*k2^4*k3^6 + 
         14*(302 - 302*F^2 + 195*f1)*k2^2*k3^8 + 441*(-4 + 4*F^2 - 5*f1)*
          k3^10) - k1^8*(k2^2 - k3^2)*(4326*(-1 + F^2)*k2^10 + 
         (-947 + 947*F^2 - 2940*f1)*k2^8*k3^2 + (-379 + 379*F^2 + 1176*f1)*
          k2^6*k3^4 + (3855 - 3855*F^2 + 1792*f1)*k2^4*k3^6 + 
         35*(-129 + 129*F^2 - 136*f1)*k2^2*k3^8 - 980*(-2 + 2*F^2 - 3*f1)*
          k3^10) + k1^4*(k2^2 - k3^2)^3*(378*(-1 + F^2)*k2^10 + 
         (1277 - 1277*F^2 - 966*f1)*k2^8*k3^2 + 21*(-47 + 47*F^2 + 92*f1)*
          k2^6*k3^4 - 3*(-141 + 141*F^2 + 616*f1)*k2^4*k3^6 - 
         49*(-1 + F^2 - 36*f1)*k2^2*k3^8 - 882*f1*k3^10)) + 
     b1*(-1 + F^2)*(56*f1^2*k1^2*k2^2*(k2^2 - k3^2)*(11*k1^12*(k2^2 + k3^2) - 
         15*k1^8*(k2^2 - k3^2)^2*(k2^2 + k3^2) - 35*k1^4*(k2^2 - k3^2)^4*
          (k2^2 + k3^2) + 7*(k2^2 - k3^2)^6*(k2^2 + k3^2) - 
         6*k1^2*(k2^2 - k3^2)^4*(k2^4 - 3*k2^2*k3^2 + k3^4) + 
         12*k1^6*(k2^2 - k3^2)^2*(5*k2^4 - 3*k2^2*k3^2 + 5*k3^4) - 
         2*k1^10*(11*k2^4 - 9*k2^2*k3^2 + 11*k3^4)) + 
       14*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k2^4*k3^2*
        (k1^14 + 6*k1^12*(k2^2 - k3^2) + 6*k1^4*(k2^2 - k3^2)^5 + 
         21*k1^2*(k2^2 - k3^2)^6 + 8*(k2^2 - k3^2)^7 + 
         k1^10*(-109*k2^4 - 6*k2^2*k3^2 + 3*k3^4) - k1^6*(k2^2 - k3^2)^2*
          (73*k2^4 - 50*k2^2*k3^2 + 25*k3^4) + 
         20*k1^8*(7*k2^6 - 5*k2^4*k3^2 - 3*k2^2*k3^4 + k3^6)) + 
       2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*(k1^18*(3*k2^2 - 2*k3^2) + 
         k1^16*(-16*k2^4 - 13*k2^2*k3^2 + 28*k3^4) + 
         k1^14*(-348*k2^6 + 50*k2^4*k3^2 + 211*k2^2*k3^4 - 136*k3^6) + 
         4*(k2^2 - k3^2)^7*(4*k2^6 + 13*k2^4*k3^2 + k3^6) + 
         k1^2*(k2^2 - k3^2)^6*(19*k2^6 + 156*k2^4*k3^2 + 14*k3^6) - 
         k1^4*(k2^2 - k3^2)^5*(48*k2^6 - 55*k2^4*k3^2 - 15*k2^2*k3^4 + 
           16*k3^6) + k1^12*(1040*k2^8 - 599*k2^6*k3^2 + 532*k2^4*k3^4 - 
           797*k2^2*k3^6 + 336*k3^8) - k1^6*(k2^2 - k3^2)^2*
          (60*k2^10 + 334*k2^8*k3^2 - 225*k2^6*k3^4 + 384*k2^4*k3^6 - 
           385*k2^2*k3^8 + 168*k3^10) - k1^10*(1022*k2^10 + 36*k2^8*k3^2 - 
           791*k2^6*k3^4 + 1430*k2^4*k3^6 - 1389*k2^2*k3^8 + 476*k3^10) + 
         k1^8*(416*k2^12 + 537*k2^10*k3^2 - 976*k2^8*k3^4 - 782*k2^6*k3^6 + 
           1776*k2^4*k3^8 - 1363*k2^2*k3^10 + 392*k3^12)) + 
       (-1 + F^2)*f1*(-112*k2^2*k3^2*(k2^2 - k3^2)^7*(k2^2 + 2*k3^2) + 
         k1^16*(64*k2^4 - 19*k2^2*k3^2 - 117*k3^4) + k1^4*(k2^2 - k3^2)^5*
          (960*k2^6 - 1481*k2^4*k3^2 - 2770*k2^2*k3^4 - 1197*k3^6) + 
         k1^14*(-448*k2^6 + 267*k2^4*k3^2 - 162*k2^2*k3^4 + 483*k3^6) + 
         k1^12*(1088*k2^8 - 2195*k2^6*k3^2 + 1013*k2^4*k3^4 + 311*k2^2*k3^6 - 
           441*k3^8) - k1^2*(k2^2 - k3^2)^5*(256*k2^8 + 1047*k2^6*k3^2 + 
           187*k2^4*k3^4 - 983*k2^2*k3^6 - 219*k3^8) - 
         k1^10*(1408*k2^10 - 4579*k2^8*k3^2 + 5156*k2^6*k3^4 + 
           434*k2^4*k3^6 - 1764*k2^2*k3^8 + 945*k3^10) - 
         k1^6*(k2^2 - k3^2)^2*(1472*k2^10 - 809*k2^8*k3^2 + 1280*k2^6*k3^4 - 
           4014*k2^4*k3^6 - 1856*k2^2*k3^8 + 2583*k3^10) + 
         k1^8*(1472*k2^12 - 3809*k2^10*k3^2 - 2091*k2^8*k3^4 + 
           7526*k2^6*k3^6 + 314*k2^4*k3^8 - 6037*k2^2*k3^10 + 2625*k3^12))) + 
     2*f1*(k1^2 + k2^2 - k3^2)*(168*f1^2*k1^4*k2^4*k3^2*(k2^2 - k3^2)*
        (k1^2 + k2^2 - k3^2)*(k1^2 - k2^2 + k3^2)^2 + 
       8*(-1 + F^2)*f1*k1^2*k2^2*(k2^2 - k3^2)*(4*k1^12 - 
         k1^10*(k2^2 - 7*k3^2) + 9*(k2^2 - k3^2)^5*(k2^2 + k3^2) - 
         k1^4*(k2^2 - k3^2)^2*(2*k2^4 + 15*k2^2*k3^2 - 26*k3^4) + 
         k1^8*(-27*k2^4 + 23*k2^2*k3^2 - 21*k3^4) - 3*k1^2*(k2^2 - k3^2)^3*
          (7*k2^4 - 5*k2^2*k3^2 + k3^4) + k1^6*(38*k2^6 - 61*k2^4*k3^2 + 
           33*k2^2*k3^4 - 10*k3^6)) - (-1 + F^2)^2*
        (7*Sqrt[2]*(c2 - c4)*k2^2*k3^2*(5*k1^12*k3^2 + 8*(k2^2 - 2*k3^2)*
            (k2^2 - k3^2)^6 - k1^2*(k2^2 - k3^2)^5*(8*k2^2 + 75*k3^2) - 
           k1^4*(k2^2 - k3^2)^4*(16*k2^2 + 135*k3^2) + 
           k1^10*(-8*k2^4 + 17*k2^2*k3^2 - 9*k3^4) + 
           2*k1^8*(4*k2^6 - 63*k2^4*k3^2 + 34*k2^2*k3^4 - 15*k3^6) + 
           2*k1^6*(8*k2^8 - 55*k2^6*k3^2 + 165*k2^4*k3^4 - 173*k2^2*k3^6 + 
             55*k3^8)) + ((c2 + c4)*(3*k1^16*k3^2 + 64*k2^2*k3^2*
             (k2^2 - 3*k3^2)*(k2^2 - k3^2)^6 + k1^14*(-19*k2^2*k3^2 + 
              3*k3^4) + k1^4*(k2^2 - k3^2)^4*(160*k2^6 - 199*k2^4*k3^2 - 
              1632*k2^2*k3^4 - 123*k3^6) + k1^12*(32*k2^6 - 221*k2^4*k3^2 + 
              196*k2^2*k3^4 - 81*k3^6) - k1^2*(k2^2 - k3^2)^5*
             (32*k2^6 + 193*k2^4*k3^2 + 900*k2^2*k3^4 + 21*k3^6) + 
            k1^10*(-160*k2^8 + 661*k2^6*k3^2 + 259*k2^4*k3^4 - 
              567*k2^2*k3^6 + 255*k3^8) + k1^8*(320*k2^10 - 927*k2^8*k3^2 - 
              1056*k2^6*k3^4 + 422*k2^4*k3^6 + 496*k2^2*k3^8 - 375*k3^10) + 
            k1^6*(-320*k2^12 + 1311*k2^10*k3^2 - 2663*k2^8*k3^4 + 
              4370*k2^6*k3^6 - 3426*k2^4*k3^8 + 431*k2^2*k3^10 + 297*k3^12)))/
          Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(1792*F^8*k1^7*k2^7*k3^6), 
 ((-1 + F^2)*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (70*b1^3*(-1 + F^2)^3*k1^6*k2^2*(k1^2 + k2^2)*k3^4*
      (k1^2 + k2^2 - k3^2)^2 + b1^2*(-1 + F^2)^2*k1^2*k2^2*
      (15*(-1 + F^2)*k1^14 + 6*(-1 + F^2)*k1^12*(22*k2^2 - 25*k3^2) + 
       336*(-1 + F^2)*k2^4*(k2^2 - k3^2)^5 + 35*k1^2*(k2^2 - k3^2)^4*
        (15*(-1 + F^2)*k2^4 + 2*(-2 + 2*F^2 + 21*f1)*k3^4) + 
       3*k1^10*(77*(-1 + F^2)*k2^4 - 140*(-1 + F^2)*k2^2*k3^2 + 
         10*(-4 + 4*F^2 + 49*f1)*k3^4) - 10*k1^4*(k2^2 - k3^2)^2*
        (18*(-1 + F^2)*k2^6 + 3*(-1 + F^2)*k2^4*k3^2 - 
         3*(-13 + 13*F^2 + 196*f1)*k2^2*k3^4 + 28*(-1 + F^2 + 21*f1)*k3^6) - 
       2*k1^8*(288*(-1 + F^2)*k2^6 - 510*(-1 + F^2)*k2^4*k3^2 + 
         7*(-53 + 53*F^2 - 468*f1)*k2^2*k3^4 + 15*(5 - 5*F^2 + 196*f1)*
          k3^6) - k1^6*(k2^2 - k3^2)*(483*(-1 + F^2)*k2^6 - 
         405*(-1 + F^2)*k2^4*k3^2 + (-181 + 181*F^2 - 8820*f1)*k2^2*k3^4 + 
         5*(-1 + F^2 + 1764*f1)*k3^6)) + 
     f1*k1^2*(56*f1^2*k1^2*k2^2*k3^4*(5*k1^8 + 4*k1^6*(7*k2^2 - 5*k3^2) - 
         20*k1^2*(5*k2^2 - 3*k3^2)*(k2^2 - k3^2)^2 - 35*(k2^2 - k3^2)^4 - 
         2*k1^4*(13*k2^4 - 18*k2^2*k3^2 + 5*k3^4)) - 8*Sqrt[2]*(c2 + c4)*
        (-1 + F^2)^2*k3^4*(k1^12 + 14*k3^2*(k2^2 - k3^2)^5 + 
         k1^10*(34*k2^2 + 9*k3^2) + 2*k1^8*(31*k2^4 - 5*k2^2*k3^2 - 
           30*k3^4) - k1^2*(k2^2 - k3^2)^3*(34*k2^4 - 143*k2^2*k3^2 + 
           69*k3^4) - k1^4*(k2^2 - k3^2)^2*(71*k2^4 - 246*k2^2*k3^2 + 
           135*k3^4) + 2*k1^6*(4*k2^6 + 61*k2^4*k3^2 - 130*k2^2*k3^4 + 
           65*k3^6)) + (-1 + F^2)*f1*(75*k1^14*k3^2 + 336*k2^2*k3^2*
          (k2^2 - k3^2)^5*(2*k2^2 - k3^2) + k1^12*(-144*k2^4 + 
           642*k2^2*k3^2 - 515*k3^4) - 3*k1^2*(k2^2 - k3^2)^4*
          (48*k2^6 - 309*k2^4*k3^2 + 51*k2^2*k3^4 + 140*k3^6) + 
         k1^10*(240*k2^6 - 183*k2^4*k3^2 - 1281*k2^2*k3^4 + 890*k3^6) + 
         k1^8*(288*k2^8 - 2580*k2^6*k3^2 + 4090*k2^4*k3^4 - 2096*k2^2*k3^6 + 
           90*k3^8) + k1^4*(k2^2 - k3^2)^2*(624*k2^8 + 1266*k2^6*k3^2 + 
           2301*k2^4*k3^4 - 3864*k2^2*k3^6 + 1465*k3^8) + 
         k1^6*(-864*k2^10 + 621*k2^8*k3^2 + 5734*k2^6*k3^4 - 
           11572*k2^4*k3^6 + 7666*k2^2*k3^8 - 1585*k3^10))) + 
     b1*(-1 + F^2)*(-7*f1^2*k1^2*k3^4*(105*k1^12 - 210*k1^10*k3^2 - 
         70*k1^2*(8*k2^2 - 9*k3^2)*(k2^2 - k3^2)^4 - 105*(k2^2 - k3^2)^6 + 
         k1^8*(-1611*k2^4 + 1870*k2^2*k3^2 - 315*k3^4) - 
         5*k1^4*(k2^2 - k3^2)^2*(273*k2^4 - 682*k2^2*k3^2 + 273*k3^4) - 
         4*k1^6*(588*k2^6 - 1687*k2^4*k3^2 + 1390*k2^2*k3^4 - 315*k3^6)) + 
       8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^6*
        (k1^10 + 10*k1^8*(k2^2 - k3^2) + 10*k1^6*(k2^2 - k3^2)^2 - 
         35*k1^2*(k2^2 - k3^2)^4 - 14*(k2^2 - k3^2)^5 - 
         4*k1^4*(9*k2^6 - 19*k2^4*k3^2 + 15*k2^2*k3^4 - 5*k3^6)) + 
       (-1 + F^2)*f1*(12*k1^18 + 360*k2^4*(k2^2 - k3^2)^7 - 
         3*k1^16*(15*k2^2 + 23*k3^2) + k1^14*(-117*k2^4 - 102*k2^2*k3^2 + 
           389*k3^4) + 3*k1^2*(k2^2 - k3^2)^5*(307*k2^6 + 149*k2^4*k3^2 - 
           148*k2^2*k3^4 - 84*k3^6) - k1^12*(9*k2^6 + 2709*k2^4*k3^2 - 
           3999*k2^2*k3^4 + 742*k3^6) - k1^4*(k2^2 - k3^2)^3*
          (3*k2^8 - 6000*k2^6*k3^2 + 5352*k2^4*k3^4 + 329*k2^2*k3^6 - 
           644*k3^8) - k1^6*(k2^2 - k3^2)^2*(2271*k2^8 - 8448*k2^6*k3^2 + 
           2054*k2^4*k3^4 + 668*k2^2*k3^6 - 289*k3^8) + 
         k1^10*(879*k2^8 - 4026*k2^6*k3^2 + 9989*k2^4*k3^4 - 5916*k2^2*k3^6 + 
           290*k3^8) + k1^8*(273*k2^10 - 39*k2^8*k3^2 + 6578*k2^6*k3^4 - 
           8004*k2^4*k3^6 + 1865*k2^2*k3^8 + 223*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(1792*F^10*k1^11*k2^7*k3^4) - 
  ((-1 + F^2)*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (70*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^4*(k1^2 + k2^2 - k3^2)^2*
      (k1^2 + k3^2) + b1^2*(-1 + F^2)^2*k1^2*k2^2*
      (14*(-1 + F^2 - 3*f1)*k1^14 - 14*k1^12*((-20 + 20*F^2 - 46*f1)*k2^2 + 
         (5 - 5*F^2 + 38*f1)*k3^2) + k1^10*((812 - 812*F^2 + 210*f1)*k2^4 + 
         (-1207 + 1207*F^2 - 4424*f1)*k2^2*k3^2 - 84*(-5 + 5*F^2 - 56*f1)*
          k3^4) + 2*k1^4*(k2^2 - k3^2)^2*(98*(-4 + 4*F^2 - 7*f1)*k2^6 + 
         2*(533 - 533*F^2 + 2114*f1)*k2^4*k3^2 + (-821 + 821*F^2 + 742*f1)*
          k2^2*k3^4 - 357*(-1 + F^2 + 12*f1)*k3^6) - 
       2*k1^8*(196*(-1 + F^2 - 7*f1)*k2^6 + (-181 + 181*F^2 + 1001*f1)*k2^4*
          k3^2 - 5*(-81 + 81*F^2 + 1162*f1)*k2^2*k3^4 + 
         35*(-2 + 2*F^2 + 167*f1)*k3^6) + 2*k1^6*(k2^2 - k3^2)*
        (35*(-29 + 29*F^2 - 129*f1)*k2^6 + (2981 - 2981*F^2 + 10633*f1)*k2^4*
          k3^2 + 5*(-473 + 473*F^2 + 217*f1)*k2^2*k3^4 - 
         35*(-17 + 17*F^2 + 193*f1)*k3^6) + 14*(k2^2 - k3^2)^5*
        (88*(-1 + F^2)*k2^2*k3^2 + 3*f1*(80*k2^4 - 97*k2^2*k3^2 + 17*k3^4)) + 
       7*k1^2*(k2^2 - k3^2)^4*(335*(-1 + F^2)*k2^2*k3^2 + 
         14*f1*(63*k2^4 - 52*k2^2*k3^2 + 34*k3^4))) + 
     f1*k1^2*(14*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k1^2*k2^2*k3^2*
        (k1^10 - 20*k1^8*(k2^2 - 3*k3^2) + 5*k1^2*(21*k2^2 - 5*k3^2)*
          (k2^2 - k3^2)^3 + 56*(k2^2 - k3^2)^5 + 20*k1^4*(k2^2 - k3^2)^2*
          (k2^2 + 9*k3^2) + k1^6*(-98*k2^4 + 260*k2^2*k3^2 - 210*k3^4)) + 
       56*f1^2*k1^2*k2^6*(5*k1^8 - 4*k1^6*(5*k2^2 - 7*k3^2) + 
         20*k1^2*(3*k2^2 - 5*k3^2)*(k2^2 - k3^2)^2 - 35*(k2^2 - k3^2)^4 - 
         2*k1^4*(5*k2^4 - 18*k2^2*k3^2 + 13*k3^4)) + 2*Sqrt[2]*(c2 + c4)*
        (-1 + F^2)^2*k2^2*(k1^14 + 56*k2^2*(3*k2^2 - 2*k3^2)*
          (k2^2 - k3^2)^5 + k1^12*(-34*k2^2 + 26*k3^2) + 
         k1^10*(-173*k2^4 - 107*k2^2*k3^2 + 310*k3^4) + 
         4*k1^8*(119*k2^6 - 356*k2^4*k3^2 + 495*k2^2*k3^4 - 310*k3^6) - 
         2*k1^4*(k2^2 - k3^2)^2*(449*k2^6 - 993*k2^4*k3^2 + 771*k2^2*k3^4 - 
           147*k3^6) + k1^2*(k2^2 - k3^2)^3*(341*k2^6 + 444*k2^4*k3^2 - 
           1041*k2^2*k3^4 + 416*k3^6) + k1^6*(119*k2^8 - 266*k2^6*k3^2 + 
           1232*k2^4*k3^4 - 2110*k2^2*k3^6 + 1025*k3^8)) - 
       (-1 + F^2)*f1*(21*k1^14*k3^2 + k1^12*(-144*k2^4 + 553*k2^2*k3^2 - 
           462*k3^4) - 112*(k2^2 - k3^2)^5*(4*k2^6 + 12*k2^4*k3^2 - 
           2*k2^2*k3^4 - 3*k3^6) + k1^2*(k2^2 - k3^2)^4*
          (1280*k2^6 - 3580*k2^4*k3^2 + 53*k2^2*k3^4 + 2037*k3^6) + 
         k1^10*(-32*k2^6 + 1686*k2^4*k3^2 - 4131*k2^2*k3^4 + 2331*k3^6) + 
         2*k1^8*(288*k2^8 + 657*k2^6*k3^2 - 4272*k2^4*k3^4 + 6401*k2^2*k3^6 - 
           2730*k3^8) - k1^4*(k2^2 - k3^2)^2*(1136*k2^8 + 3755*k2^6*k3^2 - 
           576*k2^4*k3^4 - 7689*k2^2*k3^6 + 5166*k3^8) - 
         k1^6*(96*k2^10 + 1135*k2^8*k3^2 + 3866*k2^6*k3^4 - 18668*k2^4*k3^6 + 
           20606*k2^2*k3^8 - 7035*k3^10))) - b1*(-1 + F^2)*
      (7*f1^2*k1^2*k2^2*(91*k1^12*k3^2 - 525*k3^2*(k2^2 - k3^2)^6 - 
         10*k1^10*(4*k2^4 - 45*k2^2*k3^2 + 64*k3^4) + 14*k1^2*(k2^2 - k3^2)^4*
          (20*k2^4 - 161*k2^2*k3^2 + 116*k3^4) + 
         5*k1^8*(96*k2^6 - 55*k2^4*k3^2 - 298*k2^2*k3^4 + 265*k3^6) - 
         5*k1^4*(k2^2 - k3^2)^2*(32*k2^6 + 511*k2^4*k3^2 - 950*k2^2*k3^4 + 
           271*k3^6) - 4*k1^6*(140*k2^8 + 293*k2^6*k3^2 - 792*k2^4*k3^4 + 
           205*k2^2*k3^6 + 130*k3^8)) + (-1 + F^2)*f1*
        (24*k1^18 + k1^16*(106*k2^2 - 129*k3^2) - 120*k2^2*(k2^2 - k3^2)^7*
          (12*k2^2 - k3^2) + k1^14*(-272*k2^4 + 30*k2^2*k3^2 + 294*k3^4) + 
         k1^12*(-3382*k2^6 + 1433*k2^4*k3^2 + 593*k2^2*k3^4 - 399*k3^6) - 
         k1^2*(k2^2 - k3^2)^5*(3736*k2^6 - 427*k2^4*k3^2 - 869*k2^2*k3^4 + 
           24*k3^6) - k1^4*(k2^2 - k3^2)^3*(1810*k2^8 + 6595*k2^6*k3^2 - 
           6914*k2^4*k3^4 + 2158*k2^2*k3^6 - 129*k3^8) + 
         2*k1^6*(k2^2 - k3^2)^2*(1056*k2^8 - 7408*k2^6*k3^2 + 
           6549*k2^4*k3^4 - 2216*k2^2*k3^6 + 147*k3^8) + 
         k1^10*(1360*k2^8 - 3657*k2^6*k3^2 + 4874*k2^4*k3^4 - 
           4309*k2^2*k3^6 + 420*k3^8) + k1^8*(5246*k2^10 - 22235*k2^8*k3^2 + 
           30474*k2^6*k3^4 - 21146*k2^4*k3^6 + 7164*k2^2*k3^8 - 399*k3^10)) + 
       4*(-1 + F^2)^2*k1^2*k2^2*(-35*Sqrt[2]*(c2 - c4)*k1^6*k3^4*
          (k1^2 + k2^2 - k3^2)^2 + ((c2 + c4)*(k1^14 - 35*k1^2*k2^2*
             (7*k2^2 - 5*k3^2)*(k2^2 - k3^2)^4 - 56*k2^2*(3*k2^2 - 2*k3^2)*
             (k2^2 - k3^2)^5 + 5*k1^12*(-4*k2^2 + k3^2) + 
            k1^10*(-79*k2^4 + 107*k2^2*k3^2 - 80*k3^4) + 
            k1^8*(-72*k2^6 + 74*k2^4*k3^2 - 100*k2^2*k3^4 + 90*k3^6) + 
            k1^6*(387*k2^8 - 998*k2^6*k3^2 + 886*k2^4*k3^4 - 310*k2^2*k3^6 + 
              35*k3^8) + k1^4*(196*k2^10 - 719*k2^8*k3^2 + 944*k2^6*k3^4 - 
              630*k2^4*k3^6 + 260*k2^2*k3^8 - 51*k3^10)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(1792*F^10*k1^11*k2^5*k3^6) - 
  ((-1 + F^2)*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (70*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^4*(k1^2 + k2^2 - k3^2)^2*
      (k2^2 + k3^2) - b1^2*(-1 + F^2)^2*k1^2*k2^2*
      (196*(-4 + 4*F^2 + 21*f1)*k1^2*k2^2*(k2^2 - k3^2)^5 + 
       2646*f1*k2^2*(k2^2 - k3^2)^6 + 7*k1^12*(2*(-1 + F^2 + 9*f1)*k2^2 - 
         5*(-1 + F^2 + 2*f1)*k3^2) - 14*k1^10*((-20 + 20*F^2 - 54*f1)*k2^4 + 
         (-17 + 17*F^2 + 74*f1)*k2^2*k3^2 - 5*(-5 + 5*F^2 + 4*f1)*k3^4) - 
       14*k1^6*(k2^2 - k3^2)*(4*(-7 + 7*F^2 + 167*f1)*k2^6 + 
         (65 - 65*F^2 - 788*f1)*k2^4*k3^2 + 2*(-25 + 25*F^2 + 146*f1)*k2^2*
          k3^4 - 5*(-1 + F^2 - 4*f1)*k3^6) + 35*k1^4*(k2^2 - k3^2)^2*
        ((-58 + 58*F^2 - 26*f1)*k2^6 + (71 - 71*F^2 + 98*f1)*k2^4*k3^2 + 
         2*(-16 + 16*F^2 - 35*f1)*k2^2*k3^4 + (-5 + 5*F^2 - 2*f1)*k3^6) - 
       2*k1^8*(7*(-58 + 58*F^2 - 379*f1)*k2^6 + 2*(47 - 47*F^2 + 154*f1)*k2^4*
          k3^2 + 3*(202 - 202*F^2 + 189*f1)*k2^2*k3^4 + 210*(-1 + F^2 + f1)*
          k3^6)) + f1*(-56*f1^2*k1^4*k2^2*(k2^2 - k3^2)*
        (3*k1^10 - 30*k1^6*(k2^2 - k3^2)^2 + 35*k1^2*(k2^2 - k3^2)^4 + 
         20*k1^4*(k2^2 - k3^2)^2*(k2^2 + k3^2) - 28*(k2^2 - k3^2)^4*
          (k2^2 + k3^2)) + 14*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k2^2*k3^2*
        (4*k1^14 + 14*k1^12*(k2^2 - k3^2) + 154*k1^4*(k2^2 - k3^2)^5 + 
         189*k1^2*(k2^2 - k3^2)^6 + 60*(k2^2 - k3^2)^7 + 
         k1^10*(-27*k2^4 + 94*k2^2*k3^2 - 35*k3^4) - 10*k1^6*(k2^2 - k3^2)^2*
          (11*k2^4 - 10*k2^2*k3^2 + 7*k3^4) - 
         4*k1^8*(23*k2^6 - 89*k2^4*k3^2 + 101*k2^2*k3^4 - 35*k3^6)) + 
       (-1 + F^2)*f1*k1^2*(100*k1^14*k3^2 - 336*k2^2*k3^2*(3*k2^2 - 2*k3^2)*
          (k2^2 - k3^2)^5 + k1^12*(-256*k2^4 + 969*k2^2*k3^2 - 745*k3^4) + 
         k1^2*(k2^2 - k3^2)^5*(592*k2^4 - 1935*k2^2*k3^2 + 315*k3^4) - 
         k1^4*(k2^2 - k3^2)^3*(1376*k2^6 + 1363*k2^4*k3^2 - 3174*k2^2*k3^4 + 
           915*k3^6) + k1^10*(-80*k2^6 + 1005*k2^4*k3^2 - 3038*k2^2*k3^4 + 
           1665*k3^6) + 2*k1^8*(368*k2^8 - 499*k2^6*k3^2 - 311*k2^4*k3^4 + 
           1127*k2^2*k3^6 - 605*k3^8) + k1^6*(384*k2^10 - 2738*k2^8*k3^2 + 
           6272*k2^6*k3^4 - 6404*k2^4*k3^6 + 2896*k2^2*k3^8 - 410*k3^10))) + 
     2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*
      (f1*(4*k1^18 + 120*k2^2*(k2^2 - k3^2)^7*(k2^2 + 3*k3^2) - 
         k1^16*(10*k2^2 + 27*k3^2) + 3*k1^2*k2^2*(k2^2 - k3^2)^6*
          (65*k2^2 + 418*k3^2) - 21*k1^4*(k2^2 - k3^2)^5*
          (16*k2^4 - 59*k2^2*k3^2 - 3*k3^4) + k1^14*(47*k2^4 - 93*k2^2*k3^2 + 
           138*k3^4) + k1^12*(36*k2^6 - 383*k2^4*k3^2 + 676*k2^2*k3^4 - 
           425*k3^6) - k1^6*(k2^2 - k3^2)^2*(271*k2^8 - 61*k2^6*k3^2 - 
           173*k2^4*k3^4 + 845*k2^2*k3^6 - 322*k3^8) + 
         k1^10*(-327*k2^8 + 310*k2^6*k3^2 + 1441*k2^4*k3^4 - 1920*k2^2*k3^6 + 
           720*k3^8) + k1^8*(542*k2^10 - 1365*k2^8*k3^2 + 2856*k2^6*k3^4 - 
           4230*k2^4*k3^6 + 2866*k2^2*k3^8 - 669*k3^10)) + 
       2*b1*(-1 + F^2)*k1^4*(k1^12*(5*k2^2 - 2*k3^2) + 
         56*k2^4*(k2^2 - k3^2)^5 + k1^10*(41*k2^4 - 55*k2^2*k3^2 + 20*k3^4) + 
         k1^8*(26*k2^6 - 98*k2^4*k3^2 + 80*k2^2*k3^4 - 20*k3^6) + 
         k1^6*(-214*k2^8 + 450*k2^6*k3^2 - 305*k2^4*k3^4 + 140*k2^2*k3^6 - 
           40*k3^8) + k1^2*(k2^2 - k3^2)^2*(125*k2^8 - 157*k2^6*k3^2 + 
           16*k2^4*k3^4 + 99*k2^2*k3^6 - 28*k3^8) + 
         k1^4*(-39*k2^10 + 264*k2^8*k3^2 - 550*k2^6*k3^4 + 580*k2^4*k3^6 - 
           325*k2^2*k3^8 + 70*k3^10))) + b1*(-1 + F^2)*
      (140*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k1^6*k2^4*k3^4*
        (k1^2 + k2^2 - k3^2)^2 - 7*f1^2*k1^2*
        (-21*(k2^2 - k3^2)^6*(8*k2^4 - 23*k2^2*k3^2 + 5*k3^4) - 
         14*k1^2*(k2^2 - k3^2)^5*(8*k2^4 - 95*k2^2*k3^2 + 45*k3^4) + 
         k1^12*(32*k2^4 - 125*k2^2*k3^2 + 105*k3^4) + 
         6*k1^10*(8*k2^6 - 45*k2^4*k3^2 + 72*k2^2*k3^4 - 35*k3^6) + 
         5*k1^4*(k2^2 - k3^2)^3*(112*k2^6 + 281*k2^4*k3^2 - 658*k2^2*k3^4 + 
           273*k3^6) + k1^8*(-360*k2^8 + 1149*k2^6*k3^2 - 1909*k2^4*k3^4 + 
           1275*k2^2*k3^6 - 315*k3^8) + 4*k1^6*k3^2*(411*k2^8 - 
           1560*k2^6*k3^2 + 2234*k2^4*k3^4 - 1400*k2^2*k3^6 + 315*k3^8)) + 
       (-1 + F^2)*f1*(-840*k2^2*(k2^2 - k3^2)^7*(2*k2^2 + k3^2) + 
         4*k1^16*(4*k2^2 + 11*k3^2) + k1^14*(106*k2^4 - 278*k2^2*k3^2 - 
           k3^4) - 42*k1^2*(k2^2 - k3^2)^5*(101*k2^6 - 6*k2^4*k3^2 - 
           83*k2^2*k3^4 + 4*k3^6) + k1^12*(-2208*k2^6 - 777*k2^4*k3^2 + 
           2284*k2^2*k3^4 + 17*k3^6) + k1^10*(394*k2^8 + 478*k2^6*k3^2 - 
           764*k2^4*k3^4 + 86*k2^2*k3^6 - 770*k3^8) + k1^6*(k2^2 - k3^2)^2*
          (6046*k2^8 - 14074*k2^6*k3^2 + 11541*k2^4*k3^4 - 644*k2^2*k3^6 - 
           629*k3^8) - k1^4*(k2^2 - k3^2)^3*(368*k2^8 + 5905*k2^6*k3^2 - 
           9473*k2^4*k3^4 + 4379*k2^2*k3^6 - 219*k3^8) + 
         2*k1^8*(72*k2^10 - 4329*k2^8*k3^2 + 7088*k2^6*k3^4 - 
           1390*k2^4*k3^6 - 2136*k2^2*k3^8 + 695*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(1792*F^10*k1^9*k2^7*k3^6), 
 -1/7168*((-1 + F^2)^2*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
     (-(b1^2*(-1 + F^2)^2*k1^4*(9*(-1 + F^2)*k1^8*k2^2 + 
         3*k1^6*(56*(-1 + F^2)*k2^4 - 54*(-1 + F^2)*k2^2*k3^2 - 
           147*f1*k3^4) + 21*(k2^3 - k2*k3^2)^2*(9*(-1 + F^2)*k2^4 - 
           2*(-2 + 2*F^2 + 21*f1)*k3^4) + k1^4*(306*(-1 + F^2)*k2^6 - 
           486*(-1 + F^2)*k2^4*k3^2 + (-185 + 185*F^2 - 1932*f1)*k2^2*k3^4 + 
           882*f1*k3^6) + 3*k1^2*(96*(-1 + F^2)*k2^8 - 138*(-1 + F^2)*k2^6*
            k3^2 + (-18 + 18*F^2 - 763*f1)*k2^4*k3^4 + 
           6*(-4 + 4*F^2 + 147*f1)*k2^2*k3^6 - 147*f1*k3^8))) + 
      b1*(-1 + F^2)*f1*(78*(-1 + F^2)*k1^14 + 3*(-1 + F^2)*k1^12*
         (200*k2^2 - 93*k3^2) + 3024*(-1 + F^2)*k2^4*(k2^2 - k3^2)^5 + 
        k1^10*(-1038*(-1 + F^2)*k2^4 + 108*(-1 + F^2)*k2^2*k3^2 + 
          (-767 + 767*F^2 + 882*f1)*k3^4) + k1^8*(-4344*(-1 + F^2)*k2^6 + 
          7326*(-1 + F^2)*k2^4*k3^2 + (5591 - 5591*F^2 + 17584*f1)*k2^2*
           k3^4 + 3*(-481 + 481*F^2 - 3528*f1)*k3^6) + 
        42*k1^2*(k2^2 - k3^2)^3*(199*(-1 + F^2)*k2^6 - 135*(-1 + F^2)*k2^4*
           k3^2 + 3*(-12 + 12*F^2 + 35*f1)*k2^2*k3^4 - 
          3*(-12 + 12*F^2 + 35*f1)*k3^6) + k1^4*(k2^2 - k3^2)*
         (3312*(-1 + F^2)*k2^8 - 3519*(-1 + F^2)*k2^6*k3^2 + 
          80*(-37 + 37*F^2 + 294*f1)*k2^4*k3^4 - 35*(-95 + 95*F^2 + 1176*f1)*
           k2^2*k3^6 + 28*(-41 + 41*F^2 + 630*f1)*k3^8) + 
        k1^6*(-3846*(-1 + F^2)*k2^8 + 8676*(-1 + F^2)*k2^6*k3^2 + 
          5*(1511 - 1511*F^2 + 6804*f1)*k2^4*k3^4 + 
          6*(-1011 + 1011*F^2 - 9604*f1)*k2^2*k3^6 + 
          21*(113 - 113*F^2 + 1092*f1)*k3^8)) - 
      2*f1*(-7*f1^2*k1^2*k3^4*(189*k1^8 + 16*k1^6*(61*k2^2 - 63*k3^2) + 
          84*k1^2*(7*k2^2 - 15*k3^2)*(k2^2 - k3^2)^2 + 315*(k2^2 - k3^2)^4 + 
          12*k1^4*(97*k2^4 - 246*k2^2*k3^2 + 147*k3^4)) + 
        16*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^4*
         (4*k1^8 + 28*k3^2*(k2^2 - k3^2)^3 + k1^6*(-3*k2^2 + k3^2) + 
          k1^4*(-20*k2^4 + 58*k2^2*k3^2 - 36*k3^4) + 
          k1^2*(-17*k2^6 + 99*k2^4*k3^2 - 141*k2^2*k3^4 + 59*k3^6)) + 
        (-1 + F^2)*f1*(39*k1^14 + 6*k1^12*(17*k2^2 - 24*k3^2) - 
          1512*k2^4*(k2^2 - k3^2)^5 + k1^10*(-585*k2^4 + 1740*k2^2*k3^2 - 
            278*k3^4) - 4*k1^8*(267*k2^6 - 1164*k2^4*k3^2 + 1417*k2^2*k3^4 - 
            390*k3^6) - 21*k1^2*(k2^2 - k3^2)^3*(63*k2^6 + 137*k2^4*k3^2 - 
            100*k2^2*k3^4 - 36*k3^6) + 2*k1^4*(k2^2 - k3^2)^2*
           (975*k2^6 - 4758*k2^4*k3^2 + 59*k2^2*k3^4 + 1120*k3^6) + 
          k1^6*(2013*k2^8 - 5328*k2^6*k3^2 - 1916*k2^4*k3^4 + 
            7668*k2^2*k3^6 - 2661*k3^8))))*
     Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^12*k1^11*k2^7*k3^4) + 
  ((-1 + F^2)^2*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (7*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^2*(k1^4 + 18*k1^2*(k2^2 - k3^2) + 
       21*(k2^2 - k3^2)^2) - 7*b1^2*(-1 + F^2)^2*k1^2*k2^2*
      (6*(-1 + F^2)*k1^10 - 2268*f1*k3^2*(k2^2 - k3^2)^4 + 
       k1^8*(102*(-1 + F^2)*k2^2 + (106 - 106*F^2 + 161*f1)*k3^2) + 
       7*k1^2*((-9 + 9*F^2 - 592*f1)*k2^2 + 538*f1*k3^2)*
        (-(k2^2*k3) + k3^3)^2 + 3*k1^6*(6*(-1 + F^2)*k2^4 + 
         (35 - 35*F^2 - 58*f1)*k2^2*k3^2 + 2*(-15 + 15*F^2 - 34*f1)*k3^4) - 
       3*k1^4*(42*(-1 + F^2)*k2^6 + (116 - 116*F^2 + 749*f1)*k2^4*k3^2 + 
         2*(-44 + 44*F^2 - 623*f1)*k2^2*k3^4 + (14 - 14*F^2 + 501*f1)*
          k3^6)) + b1*(-1 + F^2)*
      (7*f1^2*k2^2*(235*k1^12 + 2*k1^10*(81*k2^2 - 190*k3^2) + 
         126*k1^2*(111*k2^2 - 68*k3^2)*(k2^2 - k3^2)^4 + 
         5775*(k2^2 - k3^2)^6 + k1^8*(-4439*k2^4 + 10590*k2^2*k3^2 - 
           4255*k3^4) + 7*k1^4*(k2^2 - k3^2)^2*(795*k2^4 + 178*k2^2*k3^2 - 
           565*k3^4) - 12*k1^6*(579*k2^6 - 2475*k2^4*k3^2 + 2833*k2^2*k3^4 - 
           929*k3^6)) - (-1 + F^2)*f1*(84*k1^14 + 
         3*k1^12*(440*k2^2 - 147*k3^2) - 1008*k2^2*(k2^2 - k3^2)^5*
          (12*k2^2 - k3^2) + 7*k1^10*(200*k2^4 - 205*k2^2*k3^2 - 72*k3^4) - 
         14*k1^2*k2^2*(k2^2 - k3^2)^3*(1512*k2^4 - 943*k2^2*k3^2 + 
           135*k3^4) + k1^8*(-3016*k2^6 + 13673*k2^4*k3^2 - 14457*k2^2*k3^4 + 
           4830*k3^6) + k1^6*(-5388*k2^8 + 30317*k2^6*k3^2 - 
           52026*k2^4*k3^4 + 32805*k2^2*k3^6 - 6804*k3^8) + 
         k1^4*(-13552*k2^10 + 40300*k2^8*k3^2 - 56349*k2^6*k3^4 + 
           46729*k2^4*k3^6 - 19963*k2^2*k3^8 + 2835*k3^10)) + 
       4*(-1 + F^2)^2*k1^4*k2^2*(k1^4 + 18*k1^2*(k2^2 - k3^2) + 
         21*(k2^2 - k3^2)^2)*((7*(c2 - c4)*k1^2*k3^2)/Sqrt[2] + 
         ((c2 + c4)*(3*k1^4 - 5*k2^4 + 3*k2^2*k3^2 - 6*k1^2*(k2^2 - k3^2)))/
          Sqrt[2])) + 2*f1*(-7*f1^2*k1^2*k2^2*(75*k1^8*k3^2 - 
         1575*k3^2*(k2^2 - k3^2)^4 + 84*k1^2*(k2^2 - k3^2)^2*
          (8*k2^4 - 43*k2^2*k3^2 + 43*k3^4) + 8*k1^6*(4*k2^4 - 51*k2^2*k3^2 + 
           51*k3^4) - 24*k1^4*(24*k2^6 + 80*k2^4*k3^2 - 210*k2^2*k3^4 + 
           105*k3^6)) + (-1 + F^2)*f1*(42*k1^14 + 
         k1^12*(506*k2^2 - 546*k3^2) + 504*k2^2*(k2^2 - k3^2)^5*
          (12*k2^2 - k3^2) + k1^10*(1120*k2^4 - 1797*k2^2*k3^2 + 1596*k3^4) - 
         2*k1^4*(k2^2 - k3^2)^2*(661*k2^6 - 9385*k2^4*k3^2 + 6267*k2^2*k3^4 - 
           147*k3^6) + 7*k1^2*(k2^2 - k3^2)^3*(1624*k2^6 - 375*k2^4*k3^2 - 
           569*k2^2*k3^4 + 24*k3^6) - 4*k1^8*(708*k2^6 - 1539*k2^4*k3^2 + 
           380*k2^2*k3^4 + 441*k3^6) + k1^6*(-8082*k2^8 + 30982*k2^6*k3^2 - 
           34548*k2^4*k3^4 + 11326*k2^2*k3^6 + 546*k3^8)) + 
       4*(-1 + F^2)^2*k1^2*k2^2*(-7*Sqrt[2]*(c2 - c4)*k1^2*k3^2*
          (5*k1^6 - 63*k1^2*(k2^2 - k3^2)^2 - 56*(k2^2 - k3^2)^3 + 
           k1^4*(-6*k2^2 + 3*k3^2)) + ((c2 + c4)*(k1^8*(44*k2^2 - 75*k3^2) + 
            224*k2^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^3 - 
            2*k1^6*(46*k2^4 - 25*k2^2*k3^2 + 6*k3^4) + 
            k1^4*(-508*k2^6 + 1757*k2^4*k3^2 - 2034*k2^2*k3^4 + 777*k3^6) + 
            4*k1^2*(59*k2^8 + 87*k2^6*k3^2 - 513*k2^4*k3^4 + 541*k2^2*k3^6 - 
              174*k3^8)))/Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(7168*F^12*k1^11*k2^5*k3^6) + 
  ((-1 + F^2)^2*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (14*b1*(-1 + F^2)^3*k1^4*k2^2*(k1^4 + 18*k1^2*(k2^2 - k3^2) + 
       21*(k2^2 - k3^2)^2)*(b1^2*k2^2*k3^2 + 2*Sqrt[2]*(c2 - c4)*k2^2*k3^2 + 
       b1*k1^2*(6*k2^2 - 3*k3^2) - 2*b1*k2^2*(3*k2^2 + k3^2)) - 
     (-1 + F^2)*f1^2*(416*k1^14 + k1^12*(2*(740 + 987*b1)*k2^2 - 
         (340 + 441*b1)*k3^2) + 21*(k2^2 - k3^2)^5*(6*(96 + 385*b1)*k2^4 - 
         (288 + 2695*b1)*k2^2*k3^2 + 385*b1*k3^4) + 
       k1^10*((2504 - 5628*b1)*k2^4 + 6*(1164 + 1673*b1)*k2^2*k3^2 - 
         90*(64 + 49*b1)*k3^4) + 21*k1^4*(k2^2 - k3^2)^3*
        ((568 + 4018*b1)*k2^4 + 5*(4 - 1057*b1)*k2^2*k3^2 + 
         3*(-36 + 497*b1)*k3^4) + 42*k1^2*(k2^2 - k3^2)^3*
        (42*(14 + 73*b1)*k2^6 - 3*(256 + 2289*b1)*k2^4*k3^2 + 
         4*(61 + 1134*b1)*k2^2*k3^4 - 735*b1*k3^6) - 4*k1^6*(k2^2 - k3^2)*
        (2*(2124 + 6041*b1)*k2^6 - (10928 + 21539*b1)*k2^4*k3^2 + 
         8*(1139 + 1064*b1)*k2^2*k3^4 - (2432 + 735*b1)*k3^6) + 
       k1^8*(-2*(8464 + 25991*b1)*k2^6 + 7*(5608 + 15391*b1)*k2^4*k3^2 - 
         24*(1518 + 3143*b1)*k2^2*k3^4 + (13144 + 16317*b1)*k3^6)) + 
     28*f1^3*k1^2*(63*k1^10*k3^2 - 2835*k1^2*k3^2*(k2^2 - k3^2)^4 + 
       252*(4*k2^2 - 3*k3^2)*(k2^2 - k3^2)^5 + 
       12*k1^8*(20*k2^4 - 41*k2^2*k3^2 + 21*k3^4) - 
       24*k1^6*(79*k2^4*k3^2 - 168*k2^2*k3^4 + 84*k3^6) - 
       4*k1^4*(280*k2^8 + 129*k2^6*k3^2 - 2019*k2^4*k3^4 + 2555*k2^2*k3^6 - 
         945*k3^8)) + 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*
      (-2*b1*(-1 + F^2)*k1^2*k2^2*(5*k1^8 + k1^6*(96*k2^2 - 93*k3^2) + 
         3*k1^4*(70*k2^4 - 126*k2^2*k3^2 + 53*k3^4) + 
         9*k1^2*(8*k2^6 - 41*k2^4*k3^2 + 40*k2^2*k3^4 - 7*k3^6) - 
         63*(k2^8 - 3*k2^4*k3^4 + 2*k2^2*k3^6)) + 
       f1*(104*k1^12 + k1^10*(632*k2^2 - 463*k3^2) + 
         2016*k2^2*(k2^2 - k3^2)^5 - 16*k1^8*(115*k2^4 - 74*k2^2*k3^2 + 
           9*k3^4) + 63*k1^2*(k2^2 - k3^2)^2*(72*k2^6 - 145*k2^4*k3^2 + 
           60*k2^2*k3^4 + 11*k3^6) + k1^6*(-4720*k2^6 + 11790*k2^4*k3^2 - 
           7998*k2^2*k3^4 + 2146*k3^6) + 4*k1^4*(490*k2^8 - 232*k2^6*k3^2 - 
           1077*k2^4*k3^4 + 1403*k2^2*k3^6 - 584*k3^8))) + 
     2*(-1 + F^2)^2*f1*k1^2*(14*Sqrt[2]*(c2 - c4)*k1^2*k2^2*k3^2*
        (-21*(4*k2^2 - 3*k3^2)*(k2^2 - k3^2)^2 + 7*k1^4*(4*k2^2 + 9*k3^2) + 
         6*k1^2*(4*k2^4 + 17*k2^2*k3^2 - 21*k3^4)) + 
       7*b1^2*k1^2*k3^2*(63*(k2^2 - k3^2)^2*(3*k2^4 + k3^4) + 
         k1^4*(-119*k2^4 + 72*k2^2*k3^2 + 63*k3^4) - 
         6*k1^2*(97*k2^6 - 97*k2^4*k3^2 - 21*k2^2*k3^4 + 21*k3^6)) + 
       b1*(2*k1^10*(82*k2^2 + 59*k3^2) + k1^8*(1096*k2^4 + 1603*k2^2*k3^2 - 
           267*k3^4) - 336*(k2^2 - k3^2)^3*(29*k2^6 - 44*k2^4*k3^2 + 
           21*k2^2*k3^4 + 2*k3^6) + 3*k1^6*(1048*k2^6 - 507*k2^4*k3^2 - 
           1294*k2^2*k3^4 + 141*k3^6) - 21*k1^2*(k2^2 - k3^2)^2*
          (876*k2^6 - 1403*k2^4*k3^2 + 546*k2^2*k3^4 + 153*k3^6) + 
         k1^4*(-12296*k2^8 + 24505*k2^6*k3^2 - 15207*k2^4*k3^4 + 
           443*k2^2*k3^6 + 2267*k3^8))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(14336*F^12*k1^9*k2^7*k3^6), 
 (f1*(28*b1^3*(-1 + F^2)^3*k1^4*k2^4*k3^4*(k1^2 + k2^2 - k3^2)^3*
      (5*k1^4 + 2*k1^2*(k2^2 - k3^2) + (k2^2 - k3^2)^2) + 
     b1^2*(-1 + F^2)^2*(3*(-1 + F^2)*k1^20*k2^2 + 6*(-1 + F^2)*k2^6*
        (k2^2 - k3^2)^8 + 21*k1^18*((-1 + F^2)*k2^4 - (-1 + F^2)*k2^2*k3^2 + 
         (-1 + F^2 - f1)*k3^4) + k1^16*(210*(-1 + F^2)*k2^6 + 
         204*(-1 + F^2)*k2^4*k3^2 + 23*(-9 + 9*F^2 - 7*f1)*k2^2*k3^4 + 
         7*(20 - 20*F^2 + 21*f1)*k3^6) + k1^2*(k2^2 - k3^2)^6*
        (21*(-1 + F^2)*k2^8 + 21*(-1 + F^2)*k2^6*k3^2 - 21*(-1 + F^2 - 2*f1)*
          k2^4*k3^4 + 2*(-5 + 5*F^2 - 21*f1)*k2^2*k3^6 - 7*(-1 + F^2)*k3^8) + 
       k1^14*(-948*(-1 + F^2)*k2^8 + 936*(-1 + F^2)*k2^6*k3^2 + 
         (-601 + 601*F^2 - 511*f1)*k2^4*k3^4 + 7*(131 - 131*F^2 + 124*f1)*
          k2^2*k3^6 + 49*(-8 + 8*F^2 - 9*f1)*k3^8) - k1^4*(k2^2 - k3^2)^5*
        (45*(-1 + F^2)*k2^8 - 147*(-1 + F^2)*k2^6*k3^2 + 
         (130 - 130*F^2 - 77*f1)*k2^4*k3^4 - 28*(-1 + F^2 - 9*f1)*k2^2*k3^6 + 
         7*(-4 + 4*F^2 + 3*f1)*k3^8) + k1^6*(k2^2 - k3^2)^3*
        (12*(-1 + F^2)*k2^10 + 180*(-1 + F^2)*k2^8*k3^2 + 
         (-283 + 283*F^2 + 371*f1)*k2^6*k3^4 + (562 - 562*F^2 - 1127*f1)*k2^4*
          k3^6 + (-87 + 87*F^2 + 385*f1)*k2^2*k3^8 + 147*f1*k3^10) + 
       k1^12*(1266*(-1 + F^2)*k2^10 - 2052*(-1 + F^2)*k2^8*k3^2 + 
         (-2851 + 2851*F^2 + 2303*f1)*k2^6*k3^4 - 7*(-490 + 490*F^2 - 187*f1)*
          k2^4*k3^6 + 7*(-279 + 279*F^2 - 269*f1)*k2^2*k3^8 + 
         147*(4 - 4*F^2 + 5*f1)*k3^10) + k1^8*(k2^2 - k3^2)*
        (96*(-1 + F^2)*k2^12 - 300*(-1 + F^2)*k2^10*k3^2 + 
         (-2713 + 2713*F^2 - 427*f1)*k2^8*k3^4 + (2327 - 2327*F^2 - 2814*f1)*
          k2^6*k3^6 + 7*(-337 + 337*F^2 + 252*f1)*k2^4*k3^8 + 
         7*(135 - 135*F^2 + 82*f1)*k2^2*k3^10 + 49*(-4 + 4*F^2 - 9*f1)*
          k3^12) + k1^10*(-642*(-1 + F^2)*k2^12 + 966*(-1 + F^2)*k2^10*k3^2 + 
         3*(-557 + 557*F^2 + 637*f1)*k2^8*k3^4 + (5303 - 5303*F^2 - 3934*f1)*
          k2^6*k3^6 + (-4981 + 4981*F^2 - 616*f1)*k2^4*k3^8 - 
         7*(-309 + 309*F^2 - 290*f1)*k2^2*k3^10 + 245*(-2 + 2*F^2 - 3*f1)*
          k3^12)) - b1*(-1 + F^2)*(56*f1^2*k1^2*k2^2*k3^4*
        (3*k1^14 + k1^12*(17*k2^2 - 11*k3^2) - 3*k1^6*(9*k2^2 - 5*k3^2)*
          (k2^2 - k3^2)^3 + (k2^2 - k3^2)^7 + k1^2*(k2^2 - k3^2)^5*
          (7*k2^2 - k3^2) + k1^4*(k2^2 - k3^2)^3*(31*k2^4 + 8*k2^2*k3^2 - 
           7*k3^4) + k1^10*(17*k2^4 - 28*k2^2*k3^2 + 11*k3^4) + 
         k1^8*(-49*k2^6 + 71*k2^4*k3^2 - 27*k2^2*k3^4 + 5*k3^6)) + 
       2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k3^4*
        (k1^18 + k1^16*(8*k2^2 - 7*k3^2) + k3^2*(k2^2 - k3^2)^8 + 
         20*k1^14*(2*k2^4 - 2*k2^2*k3^2 + k3^4) + 4*k1^4*k3^2*(k2^2 - k3^2)^4*
          (15*k2^4 - 12*k2^2*k3^2 + 5*k3^4) + 2*k1^10*(k2^2 - k3^2)^2*
          (53*k2^4 - 46*k2^2*k3^2 + 7*k3^4) - k1^2*(k2^2 - k3^2)^6*
          (3*k2^4 - 14*k2^2*k3^2 + 7*k3^4) - 4*k1^6*(k2^2 - k3^2)^4*
          (4*k2^4 + 2*k2^2*k3^2 + 7*k3^4) + 4*k1^12*(28*k2^6 - 37*k2^4*k3^2 + 
           24*k2^2*k3^4 - 7*k3^6) + 2*k1^8*(k2^2 - k3^2)^2*
          (132*k2^6 - 73*k2^4*k3^2 + 30*k2^2*k3^4 + 7*k3^6)) + 
       (-1 + F^2)*f1*(-6*k2^2*k3^2*(k2^2 - k3^2)^8*(2*k2^2 - k3^2) + 
         3*k1^20*(2*k2^2 + k3^2) + k1^18*(-6*k2^4 - 33*k2^2*k3^2 + 20*k3^4) - 
         4*k1^16*(6*k2^6 + 84*k2^4*k3^2 - 91*k2^2*k3^4 + 53*k3^6) - 
         2*k1^14*(36*k2^8 + 894*k2^6*k3^2 - 611*k2^4*k3^4 + 857*k2^2*k3^6 - 
           336*k3^8) + k1^4*(k2^2 - k3^2)^5*(102*k2^8 - 183*k2^6*k3^2 + 
           147*k2^4*k3^4 + 81*k2^2*k3^6 - 43*k3^8) - k1^2*(k2^2 - k3^2)^6*
          (6*k2^8 + 69*k2^6*k3^2 - 58*k2^4*k3^4 - 5*k2^2*k3^6 + 12*k3^8) + 
         2*k1^12*(258*k2^10 + 1605*k2^8*k3^2 - 709*k2^6*k3^4 - 
           1684*k2^4*k3^6 + 1869*k2^2*k3^8 - 539*k3^10) + 
         2*k1^8*(k2^2 - k3^2)^2*(468*k2^10 - 150*k2^8*k3^2 + 267*k2^6*k3^4 - 
           830*k2^4*k3^6 + 679*k2^2*k3^8 - 210*k3^10) - 
         2*k1^6*(k2^2 - k3^2)^3*(228*k2^10 - 54*k2^8*k3^2 + 41*k2^6*k3^4 + 
           256*k2^4*k3^6 - 39*k2^2*k3^8 + 16*k3^10) - 
         2*k1^10*(498*k2^12 - 189*k2^10*k3^2 + 245*k2^8*k3^4 + 
           819*k2^6*k3^6 - 2983*k2^4*k3^8 + 2086*k2^2*k3^10 - 476*k3^12))) - 
     4*f1*k1^2*(k1^2 + k2^2 - k3^2)^2*(28*f1^2*k1^2*k2^4*k3^4*
        (k1^2 + k2^2 - k3^2)*(k1^2 - k2^2 + k3^2)^2 + 
       (-1 + F^2)*f1*k2^2*(k1^2 - k2^2 + k3^2)^2*(3*k1^8*(k2^2 + 2*k3^2) - 
         2*k1^6*(6*k2^4 - 6*k2^2*k3^2 + 5*k3^4) + (k2^2 - k3^2)^3*
          (3*k2^4 + 3*k2^2*k3^2 + 8*k3^4) + 2*k1^4*(9*k2^6 - 24*k2^4*k3^2 + 
           8*k2^2*k3^4 - 3*k3^6) - 2*k1^2*(6*k2^8 - 18*k2^6*k3^2 - 
           5*k2^4*k3^4 + 26*k2^2*k3^6 - 9*k3^8)) - 2*(-1 + F^2)^2*k3^4*
        (28*Sqrt[2]*(c2 - c4)*k1^4*k2^4*(k1^2 + k2^2 - k3^2)^2 + 
         ((c2 + c4)*(k1^12 + k1^10*(8*k2^2 - 6*k3^2) + 
            2*k1^2*(8*k2^2 - 3*k3^2)*(k2^2 - k3^2)^4 + (k2^2 - k3^2)^4*
             (k2^4 - 4*k2^2*k3^2 + k3^4) + k1^4*(k2^2 - k3^2)^2*
             (31*k2^4 - 50*k2^2*k3^2 + 15*k3^4) + 
            k1^8*(47*k2^4 - 40*k2^2*k3^2 + 15*k3^4) + 
            4*k1^6*(22*k2^6 - 37*k2^4*k3^2 + 20*k2^2*k3^4 - 5*k3^6)))/
          Sqrt[2])))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(3584*F^8*k1^10*k2^8*k3^4) - 
  (f1*(7*b1^3*(-1 + F^2)^3*k1^2*k2^2*k3^2*(k1^16 + 5*k1^14*(k2^2 - k3^2) + 
       2*(k2^2 - k3^2)^8 - k1^6*(k2^2 - k3^2)^3*(25*k2^4 - 18*k2^2*k3^2 - 
         31*k3^4) + 5*k1^4*(k2^2 - k3^2)^4*(k2^4 - 2*k2^2*k3^2 + 5*k3^4) + 
       k1^12*(-9*k2^4 - 14*k2^2*k3^2 + 11*k3^4) + k1^2*(k2^2 - k3^2)^5*
        (7*k2^4 - 14*k2^2*k3^2 + 11*k3^4) + k1^8*(k2^2 - k3^2)^2*
        (k2^4 + 30*k2^2*k3^2 + 25*k3^4) + k1^10*(13*k2^6 - 7*k2^4*k3^2 + 
         11*k2^2*k3^4 - 17*k3^6)) - b1^2*(-1 + F^2)^2*k2^2*
      (-22*(-1 + F^2)*k2^2*k3^2*(k2^2 - k3^2)^8 + 
       k1^18*(28*(-1 + F^2)*k2^2 - (-1 + F^2 + 7*f1)*k3^2) + 
       k1^16*(1176*(-1 + F^2)*k2^4 + (85 - 85*F^2 + 7*f1)*k2^2*k3^2 + 
         7*(-4 + 4*F^2 - 3*f1)*k3^4) - k1^4*(k2^2 - k3^2)^5*
        (56*(-1 + F^2)*k2^6 + (143 - 143*F^2 + 35*f1)*k2^4*k3^2 + 
         7*(-77 + 77*F^2 + 36*f1)*k2^2*k3^4 + (220 - 220*F^2 - 483*f1)*
          k3^6) - k1^2*(k2^2 - k3^2)^6*(28*(-1 + F^2)*k2^6 + 
         8*(-5 + 5*F^2 + 7*f1)*k2^4*k3^2 + (-79 + 79*F^2 + 14*f1)*k2^2*k3^4 + 
         (59 - 59*F^2 - 70*f1)*k3^6) + k1^14*(-3640*(-1 + F^2)*k2^6 + 
         21*(-199 + 199*F^2 + 77*f1)*k2^4*k3^2 + (-205 + 205*F^2 - 532*f1)*
          k2^2*k3^4 + (104 - 104*F^2 + 343*f1)*k3^6) + 
       k1^6*(k2^2 - k3^2)^3*(56*(-1 + F^2)*k2^8 + (279 - 279*F^2 - 637*f1)*
          k2^6*k3^2 + (650 - 650*F^2 - 287*f1)*k2^4*k3^4 + 
         (-1161 + 1161*F^2 + 2569*f1)*k2^2*k3^6 + (288 - 288*F^2 - 1421*f1)*
          k3^8) + k1^12*(3864*(-1 + F^2)*k2^8 + (8299 - 8299*F^2 + 287*f1)*
          k2^6*k3^2 + 3*(-1574 + 1574*F^2 - 609*f1)*k2^4*k3^4 + 
         (459 - 459*F^2 + 2989*f1)*k2^2*k3^6 + (-172 + 172*F^2 - 1225*f1)*
          k3^8) + k1^10*(-1792*(-1 + F^2)*k2^10 + (-5997 + 5997*F^2 - 917*f1)*
          k2^8*k3^2 + (6029 - 6029*F^2 - 294*f1)*k2^6*k3^4 + 
         3*(-523 + 523*F^2 + 2520*f1)*k2^4*k3^6 + (-369 + 369*F^2 - 7210*f1)*
          k2^2*k3^8 + 3*(38 - 38*F^2 + 735*f1)*k3^10) + 
       k1^8*(k2^2 - k3^2)*(392*(-1 + F^2)*k2^10 + (1481 - 1481*F^2 - 259*f1)*
          k2^8*k3^2 + (-1775 + 1775*F^2 - 1246*f1)*k2^6*k3^4 + 
         7*(273 - 273*F^2 + 1084*f1)*k2^4*k3^6 + (675 - 675*F^2 - 7042*f1)*
          k2^2*k3^8 + (-108 + 108*F^2 + 2303*f1)*k3^10)) + 
     b1*(-1 + F^2)*(56*f1^2*k1^2*k2^6*(3*k1^14 - 3*k1^6*(5*k2^2 - 9*k3^2)*
          (k2^2 - k3^2)^3 + k1^2*(k2^2 - 7*k3^2)*(k2^2 - k3^2)^5 - 
         (k2^2 - k3^2)^7 + k1^12*(-11*k2^2 + 17*k3^2) + k1^4*(k2^2 - k3^2)^3*
          (7*k2^4 - 8*k2^2*k3^2 - 31*k3^4) + k1^10*(11*k2^4 - 28*k2^2*k3^2 + 
           17*k3^4) + k1^8*(5*k2^6 - 27*k2^4*k3^2 + 71*k2^2*k3^4 - 
           49*k3^6)) + (-1 + F^2)*f1*(3*k1^20*(2*k2^2 + k3^2) + 
         k1^18*(-24*k2^4 + 10*k2^2*k3^2 - 21*k3^4) + 2*(k2^2 - k3^2)^8*
          (4*k2^6 + 12*k2^4*k3^2 - 2*k2^2*k3^4 - 3*k3^6) + 
         k1^16*(88*k2^6 - 272*k2^4*k3^2 - 78*k2^2*k3^4 + 54*k3^6) - 
         k1^2*(k2^2 - k3^2)^6*(32*k2^8 - 186*k2^6*k3^2 + 35*k2^4*k3^4 + 
           82*k2^2*k3^6 - 51*k3^8) - 2*k1^14*(172*k2^8 + 1864*k2^6*k3^2 - 
           363*k2^4*k3^4 + 45*k2^2*k3^6 + 18*k3^8) + k1^4*(k2^2 - k3^2)^5*
          (94*k2^8 - 83*k2^6*k3^2 + 151*k2^4*k3^4 - 455*k2^2*k3^6 + 
           189*k3^8) + 2*k1^8*(k2^2 - k3^2)^2*(392*k2^10 - 1200*k2^8*k3^2 + 
           805*k2^6*k3^4 - 1150*k2^4*k3^6 + 1181*k2^2*k3^8 - 252*k3^10) + 
         2*k1^12*(406*k2^10 + 1519*k2^8*k3^2 - 2597*k2^6*k3^4 - 
           894*k2^4*k3^6 + 509*k2^2*k3^8 - 63*k3^10) - 2*k1^6*(k2^2 - k3^2)^3*
          (164*k2^10 - 1084*k2^8*k3^2 + 331*k2^6*k3^4 + 740*k2^4*k3^6 - 
           797*k2^2*k3^8 + 198*k3^10) + k1^10*(-1064*k2^12 + 
           1980*k2^10*k3^2 + 3572*k2^8*k3^4 - 6998*k2^6*k3^6 + 
           4642*k2^4*k3^8 - 2510*k2^2*k3^10 + 378*k3^12)) + 
       4*(-1 + F^2)^2*k2^2*((7*(c2 - c4)*k1^2*k3^2*(k1^2 - k2^2 + k3^2)^2*
           (k1^10*(k2^2 - k3^2) + 10*k1^4*(k2^2 - k3^2)^4 + 
            5*k1^2*(k2^2 - k3^2)^5 + (k2^2 - k3^2)^6 + 
            k1^8*(53*k2^4 - 10*k2^2*k3^2 + 5*k3^4) - 
            2*k1^6*(3*k2^6 + 7*k2^4*k3^2 - 15*k2^2*k3^4 + 5*k3^6)))/Sqrt[2] + 
         ((c2 + c4)*(k2^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^8 + 
            k1^18*(3*k2^2 - k3^2) + k1^16*(83*k2^4 - 3*k2^2*k3^2 - k3^4) - 
            k1^6*(k2^2 - k3^2)^4*(4*k2^6 + k2^4*k3^2 + 68*k2^2*k3^4 - 
              21*k3^6) + k1^14*(-308*k2^6 + 581*k2^4*k3^2 - 20*k2^2*k3^4 + 
              7*k3^6) + k1^2*(k2^2 - k3^2)^6*(11*k2^6 + 4*k2^4*k3^2 - 
              19*k2^2*k3^4 + 8*k3^6) - k1^10*(k2^2 - k3^2)^2*
             (214*k2^6 - 447*k2^4*k3^2 - 102*k2^2*k3^4 + 35*k3^6) + 
            k1^12*(388*k2^8 - 1193*k2^6*k3^2 + 853*k2^4*k3^4 - 23*k2^2*k3^6 + 
              7*k3^8) + k1^8*(k2^2 - k3^2)^2*(66*k2^8 - 299*k2^6*k3^2 + 
              485*k2^4*k3^4 - 81*k2^2*k3^6 + 21*k3^8) - k1^4*(k2^2 - k3^2)^4*
             (28*k2^8 - 133*k2^6*k3^2 + 153*k2^4*k3^4 - 107*k2^2*k3^6 + 
              27*k3^8)))/Sqrt[2])) + 4*f1*k1^2*k2^2*
      (28*f1^2*k1^2*k2^4*k3^2*(k1^2 + k2^2 - k3^2)^2*(k1^2 - k2^2 + k3^2)^3 + 
       (-1 + F^2)*f1*(k1^4 - (k2^2 - k3^2)^2)^2*(3*k1^8*(2*k2^2 + k3^2) - 
         (k2^2 - k3^2)^3*(8*k2^4 + 3*k2^2*k3^2 + 3*k3^4) - 
         2*k1^6*(5*k2^4 - 6*k2^2*k3^2 + 6*k3^4) - 
         2*k1^4*(3*k2^6 - 8*k2^4*k3^2 + 24*k2^2*k3^4 - 9*k3^6) + 
         2*k1^2*(9*k2^8 - 26*k2^6*k3^2 + 5*k2^4*k3^4 + 18*k2^2*k3^6 - 
           6*k3^8)) - 2*(-1 + F^2)^2*(7*Sqrt[2]*(c2 - c4)*k1^2*k3^2*
          (-(k3^2*(k2^2 - k3^2)^6) - 2*k1^4*(k2^2 - k3^2)^3*
            (8*k2^4 + 5*k2^2*k3^2 - 5*k3^4) + k1^10*(4*k2^4 - k2^2*k3^2 + 
             k3^4) + k1^2*(k2^2 - k3^2)^4*(4*k2^4 - 5*k2^2*k3^2 + 5*k3^4) - 
           k1^8*(16*k2^6 + 69*k2^4*k3^2 - 10*k2^2*k3^4 + 5*k3^6) + 
           2*k1^6*(12*k2^8 - 5*k2^6*k3^2 + 3*k2^4*k3^4 - 15*k2^2*k3^6 + 
             5*k3^8)) + ((c2 + c4)*(k1^14*(4*k2^4 - 3*k2^2*k3^2 + k3^4) - 
            k1^4*(k2^2 - k3^2)^4*(84*k2^6 - 75*k2^4*k3^2 + 46*k2^2*k3^4 - 
              49*k3^6) - (k2^2 - k3^2)^6*(4*k2^6 + k2^4*k3^2 - 4*k2^2*k3^4 + 
              k3^6) + k1^12*(-28*k2^6 - 71*k2^4*k3^2 + 2*k2^2*k3^4 + 
              7*k3^6) + k1^2*(k2^2 - k3^2)^5*(28*k2^6 - 33*k2^4*k3^2 + 
              2*k2^2*k3^4 + 7*k3^6) + k1^6*(k2^2 - k3^2)^3*
             (140*k2^6 - 149*k2^4*k3^2 - 120*k2^2*k3^4 + 105*k3^6) + 
            k1^10*(84*k2^8 - 23*k2^6*k3^2 - 907*k2^4*k3^4 + 95*k2^2*k3^6 - 
              49*k3^8) - 5*k1^8*(28*k2^10 - 81*k2^8*k3^2 + 6*k2^6*k3^4 + 
              2*k2^4*k3^6 + 66*k2^2*k3^8 - 21*k3^10)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^8*k1^10*k2^6*k3^6) + 
  (f1*(7*b1^3*(-1 + F^2)^3*k1^2*k2^4*k3^2*(k1^14 + 3*k1^12*(k2^2 - k3^2) + 
       3*k1^2*(k2^2 - k3^2)^6 + (k2^2 - k3^2)^7 + k1^4*(k2^2 - k3^2)^4*
        (17*k2^2 + 15*k3^2) - k1^10*(111*k2^4 + 2*k2^2*k3^2 + 15*k3^4) - 
       k1^6*(k2^2 - k3^2)^2*(149*k2^4 - 10*k2^2*k3^2 + 53*k3^4) + 
       k1^8*(235*k2^6 - 225*k2^4*k3^2 - 63*k2^2*k3^4 + 53*k3^6)) - 
     b1^2*(-1 + F^2)^2*(7*(-1 + F^2)*k1^18*k2^2*k3^2 - 
       7*(-1 + F^2)*(k2^2 - k3^2)^8*(4*k2^6 + 3*k2^4*k3^2 + k3^6) + 
       k1^16*(28*(-1 + F^2)*k2^6 + (-120 + 120*F^2 - 91*f1)*k2^4*k3^2 - 
         7*(-7 + 7*F^2 + 8*f1)*k2^2*k3^4 + 21*(-1 + F^2 - f1)*k3^6) - 
       7*k1^2*(k2^2 - k3^2)^7*(8*(-1 + F^2)*k2^6 + 3*(-4 + 4*F^2 + 3*f1)*k2^4*
          k3^2 + (-4 + 4*F^2 + 3*f1)*k3^6) + 
       k1^14*(1176*(-1 + F^2)*k2^8 + (-911 + 911*F^2 + 147*f1)*k2^6*k3^2 + 
         (-1030 + 1030*F^2 - 427*f1)*k2^4*k3^4 + 7*(-41 + 41*F^2 + 19*f1)*
          k2^2*k3^6 + 7*(20 - 20*F^2 + 21*f1)*k3^8) + 7*k1^6*(k2^2 - k3^2)^3*
        (56*(-1 + F^2)*k2^10 + (37 - 37*F^2 - 73*f1)*k2^8*k3^2 + 
         (-27 + 27*F^2 + 106*f1)*k2^6*k3^4 + (-53 + 53*F^2 - 88*f1)*k2^4*
          k3^6 + (63 - 63*F^2 + 118*f1)*k2^2*k3^8 + 7*(-4 + 4*F^2 - 9*f1)*
          k3^10) + k1^12*(-3640*(-1 + F^2)*k2^10 + (347 - 347*F^2 + 5509*f1)*
          k2^8*k3^2 + (-4873 + 4873*F^2 + 4326*f1)*k2^6*k3^4 + 
         (1817 - 1817*F^2 + 1484*f1)*k2^4*k3^6 - 7*(-147 + 147*F^2 - 46*f1)*
          k2^2*k3^8 + 49*(-8 + 8*F^2 - 9*f1)*k3^10) + 
       k1^10*(k2^2 - k3^2)*(3864*(-1 + F^2)*k2^10 + 
         3*(-547 + 547*F^2 - 2247*f1)*k2^8*k3^2 - 35*(-37 + 37*F^2 - 94*f1)*
          k2^6*k3^4 + (241 - 241*F^2 + 1036*f1)*k2^4*k3^6 + 
         7*(203 - 203*F^2 + 130*f1)*k2^2*k3^8 + 147*(-4 + 4*F^2 - 5*f1)*
          k3^10) + k1^4*(k2^2 - k3^2)^4*(56*(-1 + F^2)*k2^10 + 
         (209 - 209*F^2 - 161*f1)*k2^8*k3^2 + 7*(-21 + 21*F^2 + 46*f1)*k2^6*
          k3^4 + (83 - 83*F^2 - 308*f1)*k2^4*k3^6 - 7*(-1 + F^2 - 42*f1)*k2^2*
          k3^8 - 147*f1*k3^10) - k1^8*(k2^2 - k3^2)^2*
        (1792*(-1 + F^2)*k2^10 + (-695 + 695*F^2 - 1911*f1)*k2^8*k3^2 + 
         (-37 + 37*F^2 + 1190*f1)*k2^6*k3^4 + 5*(197 - 197*F^2 + 56*f1)*k2^4*
          k3^6 + 7*(-161 + 161*F^2 - 170*f1)*k2^2*k3^8 + 
         245*(2 - 2*F^2 + 3*f1)*k3^10)) - b1*(-1 + F^2)*
      (-56*f1^2*k1^2*k2^2*(-11*k1^12*(k2^2 - k3^2)^2*(k2^2 + k3^2) + 
         5*k1^8*(k2^2 - k3^2)^4*(k2^2 + k3^2) + 7*k1^4*(k2^2 - k3^2)^6*
          (k2^2 + k3^2) - (k2^2 - k3^2)^8*(k2^2 + k3^2) + 
         k1^2*(k2^2 - k3^2)^6*(k2^4 - 3*k2^2*k3^2 + k3^4) + 
         3*k1^14*(k2^4 + k2^2*k3^2 + k3^4) - 3*k1^6*(k2^2 - k3^2)^4*
          (5*k2^4 - 3*k2^2*k3^2 + 5*k3^4) + k1^10*(k2^2 - k3^2)^2*
          (11*k2^4 - 9*k2^2*k3^2 + 11*k3^4)) + 14*Sqrt[2]*(c2 - c4)*
        (-1 + F^2)^2*k2^4*k3^2*(k1^2 - k2^2 + k3^2)^2*(k1^10*(k2^2 - k3^2) + 
         10*k1^4*(k2^2 - k3^2)^4 + 5*k1^2*(k2^2 - k3^2)^5 + (k2^2 - k3^2)^6 + 
         k1^8*(53*k2^4 - 10*k2^2*k3^2 + 5*k3^4) - 
         2*k1^6*(3*k2^6 + 7*k2^4*k3^2 - 15*k2^2*k3^4 + 5*k3^6)) - 
       (-1 + F^2)*f1*(14*k2^2*k3^2*(k2^2 - k3^2)^8*(k2^2 + 2*k3^2) + 
         k1^18*(46*k2^4 + 37*k2^2*k3^2 + 23*k3^4) - 4*k1^4*(k2^2 - k3^2)^6*
          (50*k2^6 - 60*k2^4*k3^2 - 105*k2^2*k3^4 - 52*k3^6) - 
         2*k1^16*(124*k2^6 + 65*k2^4*k3^2 + 48*k2^2*k3^4 + 64*k3^6) + 
         k1^2*(k2^2 - k3^2)^6*(38*k2^8 + 157*k2^6*k3^2 + 23*k2^4*k3^4 - 
           137*k2^2*k3^6 - 33*k3^8) + 4*k1^14*(140*k2^8 - 1020*k2^6*k3^2 - 
           290*k2^4*k3^4 + 7*k2^2*k3^6 + 63*k3^8) - 4*k1^8*(k2^2 - k3^2)^2*
          (154*k2^10 - 161*k2^8*k3^2 - 389*k2^6*k3^4 + 101*k2^4*k3^6 + 
           287*k2^2*k3^8 - 168*k3^10) - 4*k1^12*(182*k2^10 - 992*k2^8*k3^2 + 
           751*k2^6*k3^4 - 642*k2^4*k3^6 + 49*k2^2*k3^8 + 28*k3^10) + 
         4*k1^6*(k2^2 - k3^2)^3*(112*k2^10 - 70*k2^8*k3^2 - 2*k2^6*k3^4 - 
           145*k2^4*k3^6 - 140*k2^2*k3^8 + 133*k3^10) + 
         2*k1^10*(350*k2^12 - 715*k2^10*k3^2 + 871*k2^8*k3^4 + 
           104*k2^6*k3^6 - 1086*k2^4*k3^8 + 651*k2^2*k3^10 - 175*k3^12)) + 
       Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*(k1^20*(2*k2^2 - k3^2) + 
         2*k1^18*(11*k2^4 - 2*k2^2*k3^2 + 6*k3^4) + 
         k1^16*(188*k2^6 + 111*k2^4*k3^2 + 80*k2^2*k3^4 - 59*k3^6) + 
         (k2^2 - k3^2)^8*(4*k2^6 + 13*k2^4*k3^2 + k3^6) + 
         2*k1^2*(k2^2 - k3^2)^7*(3*k2^6 + 22*k2^4*k3^2 + 2*k3^6) - 
         k1^4*(k2^2 - k3^2)^6*(14*k2^6 - 17*k2^4*k3^2 - 4*k2^2*k3^4 + 
           5*k3^6) - 2*k1^14*(484*k2^8 - 305*k2^6*k3^2 + 21*k2^4*k3^4 + 
           200*k2^2*k3^6 - 80*k3^8) + 2*k1^12*(766*k2^10 - 606*k2^8*k3^2 + 
           270*k2^6*k3^4 - 399*k2^4*k3^6 + 438*k2^2*k3^8 - 133*k3^10) + 
         2*k1^8*(k2^2 - k3^2)^2*(168*k2^10 + 462*k2^8*k3^2 - 12*k2^6*k3^4 - 
           189*k2^4*k3^6 + 222*k2^2*k3^8 - 91*k3^10) - 2*k1^6*(k2^2 - k3^2)^3*
          (20*k2^10 + 97*k2^8*k3^2 - 38*k2^6*k3^4 + 73*k2^4*k3^6 - 
           72*k2^2*k3^8 + 32*k3^10) - 2*k1^10*(534*k2^12 - 117*k2^10*k3^2 - 
           701*k2^8*k3^4 + 661*k2^6*k3^6 - 777*k2^4*k3^8 + 540*k2^2*k3^10 - 
           140*k3^12))) + 2*f1*(k1^2 + k2^2 - k3^2)^2*
      (((c2 + c4)*(-1 + F^2)^2*(8*k2^2*k3^2*(k2^2 - 3*k3^2)*(k2^2 - k3^2)^6 + 
          k1^16*(4*k2^2 + k3^2) - k1^14*(28*k2^4 + 13*k2^2*k3^2 + 3*k3^4) + 
          k1^4*(k2^2 - k3^2)^4*(28*k2^6 - 5*k2^4*k3^2 - 180*k2^2*k3^4 - 
            17*k3^6) + k1^12*(84*k2^6 - 151*k2^4*k3^2 + 32*k2^2*k3^4 - 
            3*k3^6) - k1^2*(k2^2 - k3^2)^5*(4*k2^6 + 35*k2^4*k3^2 + 
            108*k2^2*k3^4 + 3*k3^6) + k1^10*(-140*k2^8 + 411*k2^6*k3^2 + 
            105*k2^4*k3^4 - 81*k2^2*k3^6 + 25*k3^8) + 
          k1^8*(140*k2^10 - 445*k2^8*k3^2 - 384*k2^6*k3^4 - 38*k2^4*k3^6 + 
            100*k2^2*k3^8 - 45*k3^10) + k1^6*(-84*k2^12 + 321*k2^10*k3^2 - 
            353*k2^8*k3^4 + 382*k2^6*k3^6 - 306*k2^4*k3^8 + k2^2*k3^10 + 
            39*k3^12)))/Sqrt[2] - 2*k2^2*(-14*f1^2*k1^4*k2^2*k3^2*
          (k1^2 + k2^2 - k3^2)*(k1^2 - k2^2 + k3^2)^3 - 2*(-1 + F^2)*f1*k1^2*
          (k1^2 - k2^2 + k3^2)^2*(4*k1^8*(k2^2 + k3^2) + 
           3*k1^4*(k2^2 - k3^2)^2*(k2^2 + k3^2) - 3*(k2^2 - k3^2)^4*
            (k2^2 + k3^2) + k1^6*(-9*k2^4 + 7*k2^2*k3^2 - 9*k3^4) + 
           k1^2*(k2^2 - k3^2)^2*(5*k2^4 - 7*k2^2*k3^2 + 5*k3^4)) + 
         (7*(c2 - c4)*(-1 + F^2)^2*k3^2*(-((k2^2 - 2*k3^2)*(k2^2 - k3^2)^6) - 
            k1^12*(k2^2 + k3^2) + k1^2*(k2^2 - k3^2)^5*(2*k2^2 + 9*k3^2) + 
            k1^4*(k2^2 - k3^2)^4*(k2^2 + 15*k3^2) + k1^8*k2^2*
             (k2^4 + 46*k2^2*k3^2 + k3^4) + k1^10*(2*k2^4 - 5*k2^2*k3^2 + 
              3*k3^4) - 2*k1^6*(2*k2^8 - 3*k2^6*k3^2 + 13*k2^4*k3^4 - 
              17*k2^2*k3^6 + 5*k3^8)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^8*k1^8*k2^8*k3^6), 
 -1/3584*((-1 + F^2)*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (70*b1^3*(-1 + F^2)^3*k1^6*k2^2*(k1^2 + k2^2)*k3^4*
       (k1^2 + k2^2 - k3^2)^3 - b1^2*(-1 + F^2)^2*k1^2*k2^2*
       (3*(-1 + F^2)*k1^16 - 168*(-1 + F^2)*k2^4*(k2^2 - k3^2)^6 + 
        15*(-1 + F^2)*k1^14*(5*k2^2 + 9*k3^2) - 21*k1^2*(k2^2 - k3^2)^5*
         (15*(-1 + F^2)*k2^4 + 2*(-2 + 2*F^2 + 21*f1)*k3^4) + 
        k1^12*(-321*(-1 + F^2)*k2^4 + 726*(-1 + F^2)*k2^2*k3^2 - 
          6*(-59 + 59*F^2 + 147*f1)*k3^4) + k1^10*(-417*(-1 + F^2)*k2^6 + 
          1233*(-1 + F^2)*k2^4*k3^2 - 6*(-143 + 143*F^2 + 1071*f1)*k2^2*
           k3^4 + 10*(-19 + 19*F^2 + 441*f1)*k3^6) + 5*k1^4*(k2^2 - k3^2)^3*
         (33*(-1 + F^2)*k2^6 + 9*(-1 + F^2)*k2^4*k3^2 - 
          6*(-11 + 11*F^2 + 147*f1)*k2^2*k3^4 + 2*(-22 + 22*F^2 + 441*f1)*
           k3^6) + 3*k1^8*(k2^2 - k3^2)*(171*(-1 + F^2)*k2^6 - 
          225*(-1 + F^2)*k2^4*k3^2 + (-227 + 227*F^2 - 3612*f1)*k2^2*k3^4 + 
          5*(5 - 5*F^2 + 588*f1)*k3^6) + 3*k1^6*(k2^2 - k3^2)^2*
         (155*(-1 + F^2)*k2^6 - 63*(-1 + F^2)*k2^4*k3^2 + 
          (-11 + 11*F^2 - 2940*f1)*k2^2*k3^4 + (-29 + 29*F^2 + 2940*f1)*
           k3^6)) - f1*k1^2*(56*f1^2*k1^2*k2^2*k3^4*
         (k1^10 + 2*k1^4*(17*k2^2 - 5*k3^2)*(k2^2 - k3^2)^2 + 
          5*k1^2*(17*k2^2 - 9*k3^2)*(k2^2 - k3^2)^3 + 21*(k2^2 - k3^2)^5 + 
          k1^8*(-23*k2^2 + 15*k3^2) - 6*k1^6*(9*k2^4 - 14*k2^2*k3^2 + 
            5*k3^4)) + 8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k3^4*
         (-k1^14 + 7*k3^2*(k2^2 - k3^2)^6 + k1^12*(29*k2^2 + 13*k3^2) + 
          k1^6*(k2^2 - k3^2)^2*(47*k2^4 + 144*k2^2*k3^2 - 155*k3^4) + 
          k1^10*(104*k2^4 - 49*k2^2*k3^2 - 57*k3^4) - k1^2*(k2^2 - k3^2)^4*
           (22*k2^4 - 95*k2^2*k3^2 + 43*k3^4) - k1^4*(k2^2 - k3^2)^3*
           (55*k2^4 - 206*k2^2*k3^2 + 111*k3^4) + 
          k1^8*(138*k2^6 - 143*k2^4*k3^2 - 120*k2^2*k3^4 + 125*k3^6)) - 
        (-1 + F^2)*f1*(168*k2^2*k3^2*(k2^2 - k3^2)^6*(2*k2^2 - k3^2) + 
          3*k1^16*(8*k2^2 + 3*k3^2) - 3*k1^14*(8*k2^4 - 89*k2^2*k3^2 + 
            74*k3^4) - 3*k1^12*(80*k2^6 - 267*k2^4*k3^2 + 534*k2^2*k3^4 - 
            241*k3^6) - 3*k1^2*(k2^2 - k3^2)^5*(64*k2^6 - 195*k2^4*k3^2 + 
            117*k2^2*k3^4 + 84*k3^6) + k1^10*(528*k2^8 - 1821*k2^6*k3^2 + 
            744*k2^4*k3^4 + 1229*k2^2*k3^6 - 600*k3^8) - 
          3*k1^6*(k2^2 - k3^2)^2*(232*k2^8 - 115*k2^6*k3^2 - 1252*k2^4*k3^4 + 
            1789*k2^2*k3^6 - 542*k3^8) + k1^4*(k2^2 - k3^2)^3*
           (672*k2^8 + 963*k2^6*k3^2 + 1071*k2^4*k3^4 - 2221*k2^2*k3^6 + 
            1083*k3^8) - 3*k1^8*(24*k2^10 + 479*k2^8*k3^2 - 1900*k2^6*k3^4 + 
            2598*k2^4*k3^6 - 1436*k2^2*k3^8 + 235*k3^10))) - 
      b1*(-1 + F^2)*(8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^6*
         (k1^12 - 3*k1^10*(k2^2 - k3^2) - 10*k1^6*(k2^2 - k3^2)^3 + 
          21*k1^2*(k2^2 - k3^2)^5 + 7*(k2^2 - k3^2)^6 + 
          k1^8*(-23*k2^4 + 30*k2^2*k3^2 - 15*k3^4) + 3*k1^4*(k2^2 - k3^2)^2*
           (13*k2^4 - 10*k2^2*k3^2 + 5*k3^4)) + 7*f1^2*k1^2*k3^4*
         (81*k1^14 + k1^12*(317*k2^2 - 315*k3^2) - 
          21*k1^2*(13*k2^2 - 15*k3^2)*(k2^2 - k3^2)^5 - 45*(k2^2 - k3^2)^7 + 
          k1^10*(-691*k2^4 + 315*k3^4) - k1^4*(k2^2 - k3^2)^3*
           (649*k2^4 - 2148*k2^2*k3^2 + 819*k3^4) - 
          3*k1^8*(685*k2^6 - 1611*k2^4*k3^2 + 935*k2^2*k3^4 - 105*k3^6) + 
          k1^6*(-1549*k2^8 + 7056*k2^6*k3^2 - 10122*k2^4*k3^4 + 
            5560*k2^2*k3^6 - 945*k3^8)) - (-1 + F^2)*f1*
         (6*k1^20 + 3*k1^18*(4*k2^2 - 15*k3^2) + 135*k2^4*(k2^2 - k3^2)^8 + 
          k1^16*(-267*k2^4 + 342*k2^2*k3^2 + 196*k3^4) + 
          3*k1^14*(434*k2^6 - 354*k2^4*k3^2 + 868*k2^2*k3^4 - 113*k3^6) + 
          3*k1^2*(k2^2 - k3^2)^6*(146*k2^6 + 67*k2^4*k3^2 - 65*k2^2*k3^4 - 
            36*k3^6) - k1^6*(k2^2 - k3^2)^3*(1662*k2^8 - 6300*k2^6*k3^2 + 
            828*k2^4*k3^4 + 775*k2^2*k3^6 - 261*k3^8) + 
          k1^12*(-1746*k2^8 - 4122*k2^6*k3^2 + 12765*k2^4*k3^4 - 
            7699*k2^2*k3^6 + 18*k3^8) + k1^4*(k2^2 - k3^2)^4*
           (252*k2^8 + 3186*k2^6*k3^2 - 2735*k2^4*k3^4 - 347*k2^2*k3^6 + 
            364*k3^8) + k1^10*(1254*k2^10 - 4104*k2^8*k3^2 + 
            14349*k2^6*k3^4 - 17049*k2^4*k3^6 + 5469*k2^2*k3^8 + 529*k3^10) + 
          6*k1^8*(46*k2^12 + 351*k2^10*k3^2 + 439*k2^8*k3^4 - 
            1943*k2^6*k3^6 + 1323*k2^4*k3^8 - 156*k2^2*k3^10 - 60*k3^12))))*
     Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^10*k1^12*k2^8*k3^4) + 
  ((-1 + F^2)*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (70*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^4*(k1^2 + k2^2 - k3^2)^3*
      (k1^2 + k3^2) + b1^2*(-1 + F^2)^2*k1^2*k2^2*
      (14*(-3 + 3*F^2 - 5*f1)*k1^16 + 14*k1^14*(3*(-1 + F^2 - 3*f1)*k2^2 + 
         (18 - 18*F^2 + 19*f1)*k3^2) + k1^12*((84 - 84*F^2 + 630*f1)*k2^4 + 
         (-487 + 487*F^2 - 1596*f1)*k2^2*k3^2 + 14*(-5 + 5*F^2 + 114*f1)*
          k3^4) - 2*k1^8*(k2^2 - k3^2)*(399*(-1 + F^2 - 7*f1)*k2^6 + 
         2*(69 - 69*F^2 + 1400*f1)*k2^4*k3^2 - 5*(-6 + 6*F^2 + 1855*f1)*k2^2*
          k3^4 + 35*(3 - 3*F^2 + 236*f1)*k3^6) + k1^4*(k2^2 - k3^2)^3*
        (98*(-4 + 4*F^2 - 7*f1)*k2^6 + (1081 - 1081*F^2 + 4438*f1)*k2^4*
          k3^2 + 3*(-197 + 197*F^2 + 1204*f1)*k2^2*k3^4 - 
         14*(-23 + 23*F^2 + 526*f1)*k3^6) - 
       k1^10*(14*(-74 + 74*F^2 + 225*f1)*k2^6 + (2543 - 2543*F^2 + 1484*f1)*
          k2^4*k3^2 + 9*(-239 + 239*F^2 - 1568*f1)*k2^2*k3^4 + 
         14*(40 - 40*F^2 + 629*f1)*k3^6) + 2*k1^6*(k2^2 - k3^2)^2*
        (7*(-103 + 103*F^2 - 435*f1)*k2^6 + 3*(709 - 709*F^2 + 2149*f1)*k2^4*
          k3^2 + (-1378 + 1378*F^2 + 4935*f1)*k2^2*k3^4 - 
         7*(-38 + 38*F^2 + 1095*f1)*k3^6) + 14*(k2^2 - k3^2)^6*
        (44*(-1 + F^2)*k2^2*k3^2 + 9*f1*(10*k2^4 - 11*k2^2*k3^2 + k3^4)) + 
       7*k1^2*(k2^2 - k3^2)^5*(201*(-1 + F^2)*k2^2*k3^2 + 
         14*f1*(27*k2^4 - 17*k2^2*k3^2 + 17*k3^4))) + 
     f1*k1^2*(56*f1^2*k1^2*k2^6*(k1^10 + k1^8*(15*k2^2 - 23*k3^2) - 
         2*k1^4*(5*k2^2 - 17*k3^2)*(k2^2 - k3^2)^2 + 
         5*k1^2*(9*k2^2 - 17*k3^2)*(k2^2 - k3^2)^3 - 21*(k2^2 - k3^2)^5 - 
         6*k1^6*(5*k2^4 - 14*k2^2*k3^2 + 9*k3^4)) + 14*Sqrt[2]*(c2 - c4)*
        (-1 + F^2)^2*k1^2*k2^2*k3^2*(3*k1^12 + 28*(k2^2 - k3^2)^6 + 
         3*k1^2*(k2^2 - k3^2)^4*(21*k2^2 - k3^2) + k1^10*(3*k2^2 + 17*k3^2) + 
         5*k1^4*(k2^2 - k3^2)^3*(3*k2^2 + 37*k3^2) + 
         2*k1^8*(73*k2^4 + 90*k2^2*k3^2 - 75*k3^4) + 
         k1^6*(-194*k2^6 + 534*k2^4*k3^2 - 630*k2^2*k3^4 + 290*k3^6)) + 
       2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*(3*k1^16 + 
         28*k2^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^6 + 
         k1^14*(-7*k2^2 + 15*k3^2) + k1^12*(311*k2^4 + 115*k2^2*k3^2 + 
           72*k3^4) + k1^6*(k2^2 - k3^2)^2*(131*k2^6 + 177*k2^4*k3^2 + 
           769*k2^2*k3^4 - 933*k3^6) + k1^10*(-847*k2^6 + 1226*k2^4*k3^2 + 
           1131*k2^2*k3^4 - 830*k3^6) - k1^4*(k2^2 - k3^2)^3*
          (763*k2^6 - 1550*k2^4*k3^2 + 1137*k2^2*k3^4 - 190*k3^6) + 
         k1^2*(k2^2 - k3^2)^4*(275*k2^6 + 200*k2^4*k3^2 - 583*k2^2*k3^4 + 
           228*k3^6) + k1^8*(813*k2^8 - 3074*k2^6*k3^2 + 4656*k2^4*k3^4 - 
           4030*k2^2*k3^6 + 1635*k3^8)) - (-1 + F^2)*f1*
        (3*k1^16*(8*k2^2 - 7*k3^2) + k1^14*(22*k2^2*k3^2 - 21*k3^4) - 
         56*(k2^2 - k3^2)^6*(4*k2^6 + 12*k2^4*k3^2 - 2*k2^2*k3^4 - 3*k3^6) + 
         k1^12*(-176*k2^6 + 873*k2^4*k3^2 - 1610*k2^2*k3^4 + 735*k3^6) + 
         k1^2*(k2^2 - k3^2)^5*(960*k2^6 - 2132*k2^4*k3^2 + 227*k2^2*k3^4 + 
           1155*k3^6) + k1^10*(-160*k2^8 + 1872*k2^6*k3^2 - 6543*k2^4*k3^4 + 
           7704*k2^2*k3^6 - 2793*k3^8) - k1^4*(k2^2 - k3^2)^3*
          (1088*k2^8 + 3201*k2^6*k3^2 - 1731*k2^4*k3^4 - 4371*k2^2*k3^6 + 
           3381*k3^8) - k1^6*(k2^2 - k3^2)^2*(224*k2^8 + 1714*k2^6*k3^2 + 
           2023*k2^4*k3^4 - 9736*k2^2*k3^6 + 5439*k3^8) + 
         k1^8*(888*k2^10 + 173*k2^8*k3^2 - 7884*k2^6*k3^4 + 18570*k2^4*k3^6 - 
           16892*k2^2*k3^8 + 5145*k3^10))) - b1*(-1 + F^2)*
      (7*f1^2*k1^2*k2^2*(23*k1^14*k3^2 + 225*k3^2*(-k2^2 + k3^2)^7 + 
         k1^12*(-88*k2^4 + 273*k2^2*k3^2 - 331*k3^4) + 7*k1^2*(k2^2 - k3^2)^5*
          (24*k2^4 - 161*k2^2*k3^2 + 107*k3^4) - k1^4*(k2^2 - k3^2)^3*
          (120*k2^6 + 1237*k2^4*k3^2 - 2544*k2^2*k3^4 + 507*k3^6) + 
         k1^10*(-120*k2^6 + 451*k2^4*k3^2 - 1920*k2^2*k3^4 + 1245*k3^6) + 
         3*k1^8*(240*k2^8 - 385*k2^6*k3^2 - 449*k2^4*k3^4 + 1325*k2^2*k3^6 - 
           635*k3^8) - k1^6*(560*k2^10 + 363*k2^8*k3^2 - 3104*k2^6*k3^4 + 
           1606*k2^4*k3^6 + 1560*k2^2*k3^8 - 985*k3^10)) + 
       (-1 + F^2)*f1*(3*k1^20 + k1^18*(88*k2^2 - 54*k3^2) - 
         45*k2^2*(k2^2 - k3^2)^8*(12*k2^2 - k3^2) + 
         k1^16*(-98*k2^4 - 192*k2^2*k3^2 + 261*k3^4) + 
         k1^14*(4910*k2^6 + 263*k2^4*k3^2 + 929*k2^2*k3^4 - 567*k3^6) - 
         k1^2*(k2^2 - k3^2)^6*(1646*k2^6 - 44*k2^4*k3^2 - 337*k2^2*k3^4 - 
           33*k3^6) + k1^6*(k2^2 - k3^2)^3*(730*k2^8 - 7675*k2^6*k3^2 + 
           3768*k2^4*k3^4 + 340*k2^2*k3^6 - 459*k3^8) - k1^4*(k2^2 - k3^2)^4*
          (995*k2^8 + 4038*k2^6*k3^2 - 2706*k2^4*k3^4 + 115*k2^2*k3^6 + 
           198*k3^8) + k1^12*(-9824*k2^8 + 9852*k2^6*k3^2 + 2094*k2^4*k3^4 - 
           2961*k2^2*k3^6 + 567*k3^8) + k1^10*(3662*k2^10 - 11336*k2^8*k3^2 + 
           11529*k2^6*k3^4 - 7937*k2^4*k3^6 + 3697*k2^2*k3^8 - 63*k3^10) + 
         k1^8*(3710*k2^12 - 20111*k2^10*k3^2 + 31893*k2^8*k3^4 - 
           22568*k2^6*k3^6 + 8222*k2^4*k3^8 - 705*k2^2*k3^10 - 441*k3^12)) + 
       4*(-1 + F^2)^2*k1^2*k2^2*(-35*Sqrt[2]*(c2 - c4)*k1^6*k3^4*
          (k1^2 + k2^2 - k3^2)^3 + ((c2 + c4)*(3*k1^16 + 
            3*k1^14*(k2^2 - 6*k3^2) - 21*k1^2*k2^2*(7*k2^2 - 5*k3^2)*
             (k2^2 - k3^2)^5 - 28*k2^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^6 + 
            k1^12*(11*k2^4 + 50*k2^2*k3^2 - 45*k3^4) + k1^6*(k2^2 - k3^2)^2*
             (361*k2^6 - 468*k2^4*k3^2 + 119*k2^2*k3^4 + 12*k3^6) + 
            k1^10*(-153*k2^6 + 336*k2^4*k3^2 - 381*k2^2*k3^4 + 190*k3^6) + 
            k1^8*(-147*k2^8 + 392*k2^6*k3^2 - 468*k2^4*k3^4 + 420*k2^2*k3^6 - 
              165*k3^8) + k1^4*(k2^2 - k3^2)^2*(153*k2^8 - 408*k2^6*k3^2 + 
              228*k2^4*k3^4 - 92*k2^2*k3^6 + 23*k3^8)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^10*k1^12*k2^6*k3^6) - 
  ((-1 + F^2)*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (-70*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^4*(k1^2 + k2^2 - k3^2)^3*
      (k2^2 + k3^2) + b1^2*(-1 + F^2)^2*k1^2*k2^2*
      (98*(-4 + 4*F^2 + 21*f1)*k1^2*k2^2*(k2^2 - k3^2)^6 + 
       1134*f1*k2^2*(k2^2 - k3^2)^7 + 7*k1^14*(6*(-1 + F^2 - f1)*k2^2 + 
         (-1 + F^2 + 2*f1)*k3^2) + k1^12*(42*(-1 + F^2 + 9*f1)*k2^4 + 
         (-179 + 179*F^2 - 588*f1)*k2^2*k3^2 + 105*(-3 + 3*F^2 + 2*f1)*
          k3^4) + 7*k1^4*(k2^2 - k3^2)^3*((-206 + 206*F^2 - 46*f1)*k2^6 - 
         3*(-67 + 67*F^2 - 98*f1)*k2^4*k3^2 + 2*(-52 + 52*F^2 - 105*f1)*k2^2*
          k3^4 + (-11 + 11*F^2 - 38*f1)*k3^6) - 2*k1^8*(k2^2 - k3^2)*
        (7*(-74 + 74*F^2 - 1227*f1)*k2^6 + (-69 + 69*F^2 + 2324*f1)*k2^4*
          k3^2 + (1224 - 1224*F^2 + 791*f1)*k2^2*k3^4 + 385*(-1 + F^2 + 2*f1)*
          k3^6) - 21*k1^6*(k2^2 - k3^2)^2*((-38 + 38*F^2 + 518*f1)*k2^6 + 
         (55 - 55*F^2 - 458*f1)*k2^4*k3^2 + 2*(-10 + 10*F^2 + 41*f1)*k2^2*
          k3^4 + 5*(-1 + F^2 + 10*f1)*k3^6) - 
       14*k1^10*((-6 + 6*F^2 + 679*f1)*k2^6 + 7*(-3 + 3*F^2 + 16*f1)*k2^4*
          k3^2 + (136 - 136*F^2 + 99*f1)*k2^2*k3^4 + 5*(-13 + 13*F^2 + 14*f1)*
          k3^6)) - 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*
      (f1*(2*k1^20 + 45*k2^2*(k2^2 - k3^2)^8*(k2^2 + 3*k3^2) - 
         k1^18*(5*k2^2 + 17*k3^2) + 9*k1^2*k2^2*(k2^2 - k3^2)^7*
          (10*k2^2 + 59*k3^2) - 3*k1^4*(k2^2 - k3^2)^6*
          (47*k2^4 - 199*k2^2*k3^2 - 9*k3^4) + 
         k1^16*(-76*k2^4 + 35*k2^2*k3^2 + 87*k3^4) + 
         k1^14*(249*k2^6 - 371*k2^4*k3^2 + 303*k2^2*k3^4 - 277*k3^6) - 
         k1^6*(k2^2 - k3^2)^3*(181*k2^8 + 26*k2^6*k3^2 + 78*k2^4*k3^4 + 
           442*k2^2*k3^6 - 167*k3^8) + k1^8*(k2^2 - k3^2)^2*
          (443*k2^8 - 158*k2^6*k3^2 + 1080*k2^4*k3^4 - 1466*k2^2*k3^6 + 
           437*k3^8) + k1^12*(-17*k2^8 - 721*k2^6*k3^2 + 1716*k2^4*k3^4 - 
           1289*k2^2*k3^6 + 535*k3^8) + k1^10*(-409*k2^10 + 1058*k2^8*k3^2 + 
           843*k2^6*k3^4 - 3179*k2^4*k3^6 + 2314*k2^2*k3^8 - 627*k3^10)) - 
       2*b1*(-1 + F^2)*k1^4*(k1^14*(k2^2 - 2*k3^2) - 
         28*k2^4*(k2^2 - k3^2)^6 + k1^12*(10*k2^4 + 33*k2^2*k3^2 - 6*k3^4) + 
         k1^10*(-93*k2^6 + 193*k2^4*k3^2 - 150*k2^2*k3^4 + 30*k3^6) + 
         k1^8*(-56*k2^8 + 224*k2^6*k3^2 - 345*k2^4*k3^4 + 150*k2^2*k3^6 - 
           20*k3^8) - k1^2*(k2^2 - k3^2)^3*(83*k2^8 - 94*k2^6*k3^2 + 
           30*k2^4*k3^4 + 50*k2^2*k3^6 - 14*k3^8) + 3*k1^4*(k2^2 - k3^2)^2*
          (14*k2^8 - 55*k2^6*k3^2 + 53*k2^4*k3^4 - 49*k2^2*k3^6 + 14*k3^8) + 
         3*k1^6*(69*k2^10 - 194*k2^8*k3^2 + 165*k2^6*k3^4 - 65*k2^4*k3^6 + 
           35*k2^2*k3^8 - 10*k3^10))) - 
     f1*(56*f1^2*k1^4*k2^2*(-9*k1^10*(k2^2 - k3^2)^2 + 
         30*k1^6*(k2^2 - k3^2)^4 - 21*k1^2*(k2^2 - k3^2)^6 + 
         k1^12*(k2^2 + k3^2) - 15*k1^4*(k2^2 - k3^2)^4*(k2^2 + k3^2) + 
         14*(k2^2 - k3^2)^6*(k2^2 + k3^2)) + 7*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*
        k2^2*k3^2*(k1^16 + 24*k1^14*(k2^2 - k3^2) + 
         154*k1^4*(k2^2 - k3^2)^6 + 162*k1^2*(k2^2 - k3^2)^7 + 
         45*(k2^2 - k3^2)^8 - 4*k1^6*(k2^2 - k3^2)^3*(41*k2^4 - 
           22*k2^2*k3^2 + 21*k3^4) - 6*k1^8*(k2^2 - k3^2)^2*
          (11*k2^4 - 62*k2^2*k3^2 + 35*k3^4) + 
         k1^12*(-6*k2^4 + 28*k2^2*k3^2 + 42*k3^4) + 
         k1^10*(-22*k2^6 + 306*k2^4*k3^2 - 354*k2^2*k3^4 + 70*k3^6)) + 
       (-1 + F^2)*f1*k1^2*(-168*k2^2*k3^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^6 + 
         4*k1^16*(16*k2^2 + 3*k3^2) + k1^14*(-40*k2^4 + 267*k2^2*k3^2 - 
           303*k3^4) + k1^2*(k2^2 - k3^2)^6*(416*k2^4 - 1089*k2^2*k3^2 + 
           189*k3^4) - 6*k1^12*(32*k2^6 - 157*k2^4*k3^2 + 408*k2^2*k3^4 - 
           191*k3^6) - 2*k1^4*(k2^2 - k3^2)^4*(464*k2^6 + 701*k2^4*k3^2 - 
           1216*k2^2*k3^4 + 351*k3^6) + k1^10*(-144*k2^8 + 329*k2^6*k3^2 - 
           2935*k2^4*k3^4 + 4515*k2^2*k3^6 - 1605*k3^8) + 
         3*k1^6*(k2^2 - k3^2)^2*(72*k2^8 - 641*k2^6*k3^2 + 1335*k2^4*k3^4 - 
           1051*k2^2*k3^6 + 221*k3^8) + 8*k1^8*(76*k2^10 - 117*k2^8*k3^2 + 
           57*k2^6*k3^4 + 68*k2^4*k3^6 - 159*k2^2*k3^8 + 75*k3^10))) - 
     b1*(-1 + F^2)*(140*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k1^6*k2^4*k3^4*
        (k1^2 + k2^2 - k3^2)^3 + 7*f1^2*k1^2*
        (k1^14*(16*k2^4 + 65*k2^2*k3^2 - 81*k3^4) + 9*(k2^2 - k3^2)^7*
          (8*k2^4 - 23*k2^2*k3^2 + 5*k3^4) + 7*k1^2*(k2^2 - k3^2)^6*
          (8*k2^4 - 95*k2^2*k3^2 + 45*k3^4) + 3*k1^6*(-(k2^2*k3) + k3^3)^2*
          (-367*k2^6 + 1073*k2^4*k3^2 - 1085*k2^2*k3^4 + 315*k3^6) + 
         k1^12*(-96*k2^6 + 471*k2^4*k3^2 - 690*k2^2*k3^4 + 315*k3^6) - 
         k1^4*(k2^2 - k3^2)^4*(336*k2^6 + 859*k2^4*k3^2 - 1974*k2^2*k3^4 + 
           819*k3^6) - k1^10*(72*k2^8 + 203*k2^6*k3^2 + 725*k2^4*k3^4 - 
           963*k2^2*k3^6 + 315*k3^8) + 3*k1^8*(120*k2^10 - 359*k2^8*k3^2 + 
           838*k2^6*k3^4 - 1024*k2^4*k3^6 + 530*k2^2*k3^8 - 105*k3^10)) + 
       (-1 + F^2)*f1*(k1^18*(15*k2^2 - 2*k3^2) - 315*k2^2*(k2^2 - k3^2)^8*
          (2*k2^2 + k3^2) + k1^16*(-32*k2^4 - 123*k2^2*k3^2 + 87*k3^4) + 
         k1^14*(4154*k2^6 - 1865*k2^4*k3^2 + 3759*k2^2*k3^4 - 228*k3^6) - 
         21*k1^2*(k2^2 - k3^2)^6*(91*k2^6 - 10*k2^4*k3^2 - 69*k2^2*k3^4 + 
           4*k3^6) - k1^4*(k2^2 - k3^2)^4*(598*k2^8 + 2411*k2^6*k3^2 - 
           4303*k2^4*k3^4 + 2257*k2^2*k3^6 - 243*k3^8) + 
         3*k1^8*(k2^2 - k3^2)^2*(26*k2^8 - 2788*k2^6*k3^2 + 1501*k2^4*k3^4 + 
           834*k2^2*k3^6 - 181*k3^8) + k1^12*(-5922*k2^8 + 3809*k2^6*k3^2 + 
           5917*k2^4*k3^4 - 5921*k2^2*k3^6 - 11*k3^8) + k1^6*(k2^2 - k3^2)^3*
          (3846*k2^8 - 8127*k2^6*k3^2 + 6968*k2^4*k3^4 - 479*k2^2*k3^6 + 
           32*k3^8) + 2*k1^10*(500*k2^10 - 1184*k2^8*k3^2 - 153*k2^6*k3^4 + 
           703*k2^4*k3^6 - 151*k2^2*k3^8 + 285*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(3584*F^10*k1^10*k2^8*k3^6), 
 ((-1 + F^2)^2*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (5*b1^2*(-1 + F^2)^2*k1^4*(k1^2 + k2^2 - k3^2)*(9*(-1 + F^2)*k1^8*k2^2 - 
       3*k1^6*(4*(-1 + F^2)*k2^4 - 6*(-1 + F^2)*k2^2*k3^2 - 49*f1*k3^4) - 
       7*(k2^3 - k2*k3^2)^2*(9*(-1 + F^2)*k2^4 - 2*(-2 + 2*F^2 + 21*f1)*
          k3^4) + k1^4*(-66*(-1 + F^2)*k2^6 + 138*(-1 + F^2)*k2^4*k3^2 + 
         (67 - 67*F^2 + 756*f1)*k2^2*k3^4 - 294*f1*k3^6) + 
       k1^2*(-60*(-1 + F^2)*k2^8 + 102*(-1 + F^2)*k2^6*k3^2 + 
         (34 - 34*F^2 + 819*f1)*k2^4*k3^4 - 2*(-4 + 4*F^2 + 441*f1)*k2^2*
          k3^6 + 147*f1*k3^8)) + b1*(-1 + F^2)*f1*(6*(-1 + F^2)*k1^16 + 
       2520*(-1 + F^2)*k2^4*(k2^2 - k3^2)^6 + 3*(-1 + F^2)*k1^14*
        (186*k2^2 + 35*k3^2) + k1^12*(2754*(-1 + F^2)*k2^4 - 
         4125*(-1 + F^2)*k2^2*k3^2 + 2*(-1381 + 1381*F^2 - 735*f1)*k3^4) + 
       42*k1^2*(k2^2 - k3^2)^4*(215*(-1 + F^2)*k2^6 - 135*(-1 + F^2)*k2^4*
          k3^2 + 3*(-12 + 12*F^2 + 35*f1)*k2^2*k3^4 - 
         3*(-12 + 12*F^2 + 35*f1)*k3^6) - 10*k1^10*(327*(-1 + F^2)*k2^6 - 
         6*(-1 + F^2)*k2^4*k3^2 + (542 - 542*F^2 - 1981*f1)*k2^2*k3^4 + 
         (-454 + 454*F^2 + 441*f1)*k3^6) - k1^6*(k2^2 - k3^2)*
        (5934*(-1 + F^2)*k2^8 - 12171*(-1 + F^2)*k2^6*k3^2 + 
         3*(-1423 + 1423*F^2 - 21420*f1)*k2^4*k3^4 + 
         (5651 - 5651*F^2 + 105840*f1)*k2^2*k3^6 + 
         7*(-397 + 397*F^2 - 5460*f1)*k3^8) - 
       2*k1^8*(4071*(-1 + F^2)*k2^8 - 8295*(-1 + F^2)*k2^6*k3^2 + 
         2*(-3068 + 3068*F^2 - 14525*f1)*k2^4*k3^4 + 
         10*(383 - 383*F^2 + 4396*f1)*k2^2*k3^6 + 30*(-19 + 19*F^2 - 441*f1)*
          k3^8) + 5*k1^4*(k2^2 - k3^2)^2*(1110*(-1 + F^2)*k2^8 - 
         993*(-1 + F^2)*k2^6*k3^2 + 2*(-411 + 411*F^2 + 3185*f1)*k2^4*k3^4 - 
         7*(-137 + 137*F^2 + 1540*f1)*k2^2*k3^6 + 14*(-22 + 22*F^2 + 315*f1)*
          k3^8)) - 2*f1*(-35*f1^2*k1^2*k3^4*(21*k1^10 + 
         k1^8*(221*k2^2 - 189*k3^2) + 7*k1^2*(13*k2^2 - 45*k3^2)*
          (k2^2 - k3^2)^3 + 63*(k2^2 - k3^2)^5 + 
         8*k1^6*(56*k2^4 - 122*k2^2*k3^2 + 63*k3^4) + 
         12*k1^4*(23*k2^6 - 97*k2^4*k3^2 + 123*k2^2*k3^4 - 49*k3^6)) + 
       16*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^4*
        (10*k1^10 + 5*k1^8*(4*k2^2 - 5*k3^2) + 35*k3^2*(k2^2 - k3^2)^4 + 
         k1^6*(k2^4 + 3*k2^2*k3^2 - 5*k3^4) - 5*k1^2*(k2^2 - k3^2)^2*
          (5*k2^4 - 27*k2^2*k3^2 + 19*k3^4) - 
         10*k1^4*(3*k2^6 - 15*k2^4*k3^2 + 20*k2^2*k3^4 - 8*k3^6)) + 
       (-1 + F^2)*f1*(3*k1^16 + 3*k1^14*(79*k2^2 - 65*k3^2) - 
         1260*k2^4*(k2^2 - k3^2)^6 + k1^12*(-111*k2^4 + 582*k2^2*k3^2 + 
           274*k3^4) - 21*k1^2*(k2^2 - k3^2)^4*(75*k2^6 + 145*k2^4*k3^2 - 
           104*k2^2*k3^4 - 36*k3^6) + k1^10*(-585*k2^6 + 5949*k2^4*k3^2 - 
           6146*k2^2*k3^4 + 1270*k3^6) + k1^4*(k2^2 - k3^2)^3*
          (1767*k2^6 - 12429*k2^4*k3^2 - 678*k2^2*k3^4 + 3220*k3^6) + 
         k1^8*(-1551*k2^8 + 6660*k2^6*k3^2 - 15988*k2^4*k3^4 + 
           14960*k2^2*k3^6 - 4305*k3^8) + k1^6*(2883*k2^10 - 
           14145*k2^8*k3^2 + 9840*k2^6*k3^4 + 15520*k2^4*k3^6 - 
           19515*k2^2*k3^8 + 5417*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(14336*F^12*k1^12*k2^8*k3^4) + 
  ((-1 + F^2)^2*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (35*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^2*(k1^6 - 9*k1^2*(k2^2 - k3^2)^2 - 
       7*(k2^2 - k3^2)^3 + k1^4*(-k2^2 + k3^2)) - 7*b1^2*(-1 + F^2)^2*k1^2*
      k2^2*(k1^2 + k2^2 - k3^2)*(30*(-1 + F^2)*k1^10 + 
       2268*f1*k3^2*(k2^2 - k3^2)^4 + k1^8*(-90*(-1 + F^2)*k2^2 + 
         (-70 + 70*F^2 - 407*f1)*k3^2) - 
       7*k1^2*((-15 + 15*F^2 - 416*f1)*k2^2 + 326*f1*k3^2)*
        (-(k2^2*k3) + k3^3)^2 + k1^6*(-150*(-1 + F^2)*k2^4 + 
         (-355 + 355*F^2 - 398*f1)*k2^2*k3^2 + 2*(95 - 95*F^2 + 514*f1)*
          k3^4) + k1^4*(210*(-1 + F^2)*k2^6 + (520 - 520*F^2 + 833*f1)*k2^4*
          k3^2 + 2*(-190 + 190*F^2 - 203*f1)*k2^2*k3^4 + 
         (70 - 70*F^2 - 367*f1)*k3^6)) + b1*(-1 + F^2)*
      (-7*f1^2*k2^2*(93*k1^14 + k1^12*(1175*k2^2 - 1657*k3^2) + 
         63*k1^2*(185*k2^2 - 99*k3^2)*(k2^2 - k3^2)^5 + 
         4125*(k2^2 - k3^2)^7 + 7*k1^4*(k2^2 - k3^2)^3*
          (779*k2^4 + 632*k2^2*k3^2 - 731*k3^4) + 
         k1^10*(1469*k2^4 - 1900*k2^2*k3^2 + 3815*k3^4) + 
         k1^8*(-7425*k2^6 + 26419*k2^4*k3^2 - 21275*k2^2*k3^4 + 2185*k3^6) - 
         5*k1^6*(1773*k2^8 - 9932*k2^6*k3^2 + 16974*k2^4*k3^4 - 
           11148*k2^2*k3^6 + 2333*k3^8)) - (-1 + F^2)*f1*
        (84*k1^16 + 840*k2^2*(k2^2 - k3^2)^6*(12*k2^2 - k3^2) - 
         21*k1^14*(28*k2^2 + 25*k3^2) + 14*k1^2*k2^2*(k2^2 - k3^2)^4*
          (1512*k2^4 - 767*k2^2*k3^2 + 135*k3^4) + 
         k1^12*(-3992*k2^4 + 4472*k2^2*k3^2 + 945*k3^4) - 
         10*k1^10*(496*k2^6 - 589*k2^4*k3^2 + 113*k2^2*k3^4 + 273*k3^6) + 
         5*k1^4*(k2^2 - k3^2)^2*(3080*k2^8 - 4526*k2^6*k3^2 + 
           5599*k2^4*k3^4 - 3538*k2^2*k3^6 + 441*k3^8) + 
         k1^8*(3260*k2^8 - 25802*k2^6*k3^2 + 46180*k2^4*k3^4 - 
           28092*k2^2*k3^6 + 6510*k3^8) + k1^6*(3964*k2^10 - 
           36915*k2^8*k3^2 + 100060*k2^6*k3^4 - 106240*k2^4*k3^6 + 
           45620*k2^2*k3^8 - 6489*k3^10)) + 20*(-1 + F^2)^2*k1^4*k2^2*
        (k1^6 - 9*k1^2*(k2^2 - k3^2)^2 - 7*(k2^2 - k3^2)^3 + 
         k1^4*(-k2^2 + k3^2))*((7*(c2 - c4)*k1^2*k3^2)/Sqrt[2] + 
         ((c2 + c4)*(3*k1^4 - 5*k2^4 + 3*k2^2*k3^2 - 6*k1^2*(k2^2 - k3^2)))/
          Sqrt[2])) + 2*f1*(35*f1^2*k1^2*k2^2*(27*k1^10*k3^2 + 
         315*k3^2*(-k2^2 + k3^2)^5 + k1^8*(32*k2^4 + 75*k2^2*k3^2 - 
           75*k3^4) + 7*k1^2*(k2^2 - k3^2)^3*(32*k2^4 - 129*k2^2*k3^2 + 
           129*k3^4) + 4*k1^6*(8*k2^6 - 53*k2^4*k3^2 + 102*k2^2*k3^4 - 
           51*k3^6) - 24*k1^4*(12*k2^8 + 10*k2^6*k3^2 - 92*k2^4*k3^4 + 
           105*k2^2*k3^6 - 35*k3^8)) + (-1 + F^2)*f1*
        (42*k1^16 - 420*k2^2*(k2^2 - k3^2)^6*(12*k2^2 - k3^2) + 
         k1^14*(-180*k2^2 + 168*k3^2) + k1^12*(-1166*k2^4 + 2541*k2^2*k3^2 - 
           1890*k3^4) - 7*k1^2*(k2^2 - k3^2)^4*(1712*k2^6 - 267*k2^4*k3^2 - 
           505*k2^2*k3^4 - 60*k3^6) + k1^4*(k2^2 - k3^2)^3*
          (1030*k2^6 - 24217*k2^4*k3^2 + 12589*k2^2*k3^4 + 2478*k3^6) + 
         k1^10*(-3432*k2^6 + 6605*k2^4*k3^2 - 8369*k2^2*k3^4 + 5460*k3^6) + 
         2*k1^8*(2407*k2^8 - 8579*k2^6*k3^2 + 5600*k2^4*k3^4 + 
           4345*k2^2*k3^6 - 3885*k3^8) + 2*k1^6*(5686*k2^10 - 
           29505*k2^8*k3^2 + 47635*k2^6*k3^4 - 27035*k2^4*k3^6 + 
           195*k2^2*k3^8 + 3024*k3^10)) - 4*(-1 + F^2)^2*k1^2*k2^2*
        (-35*Sqrt[2]*(c2 - c4)*k1^2*k3^2*(k1^8 + k1^6*(5*k2^2 - 8*k3^2) - 
           21*k1^2*(k2^2 - k3^2)^3 - 14*(k2^2 - k3^2)^4 - 
           3*k1^4*(k2^4 - k2^2*k3^2)) + 
         ((c2 + c4)*(5*k1^10*(4*k2^2 - 15*k3^2) + 280*k2^2*(3*k2^2 - 2*k3^2)*
             (k2^2 - k3^2)^4 + 5*k1^8*(56*k2^4 - 133*k2^2*k3^2 + 111*k3^4) - 
            k1^6*(584*k2^6 - 847*k2^4*k3^2 + 280*k2^2*k3^4 + 15*k3^6) + 
            20*k1^2*(k2^2 - k3^2)^2*(33*k2^6 + 17*k2^4*k3^2 - 89*k2^2*k3^4 + 
              45*k3^6) - 5*k1^4*(192*k2^8 - 837*k2^6*k3^2 + 1379*k2^4*k3^4 - 
              1007*k2^2*k3^6 + 273*k3^8)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(14336*F^12*k1^12*k2^6*k3^6) - 
  ((-1 + F^2)^2*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))^2*
    (-70*b1*(-1 + F^2)^3*k1^4*k2^2*(k1^6 - 9*k1^2*(k2^2 - k3^2)^2 - 
       7*(k2^2 - k3^2)^3 + k1^4*(-k2^2 + k3^2))*(b1^2*k2^2*k3^2 + 
       2*Sqrt[2]*(c2 - c4)*k2^2*k3^2 + b1*k1^2*(6*k2^2 - 3*k3^2) - 
       2*b1*k2^2*(3*k2^2 + k3^2)) - (-1 + F^2)*f1^2*
      (32*k1^16 + k1^14*(2*(684 + 973*b1)*k2^2 - 7*(92 + 153*b1)*k3^2) + 
       105*(k2^2 - k3^2)^6*(6*(16 + 55*b1)*k2^4 - (48 + 385*b1)*k2^2*k3^2 + 
         55*b1*k3^4) + k1^12*(14*(152 + 705*b1)*k2^4 + (3788 - 12075*b1)*k2^2*
          k3^2 + 5*(-428 + 441*b1)*k3^4) + 7*k1^4*(k2^2 - k3^2)^4*
        (2*(984 + 6139*b1)*k2^4 + (900 - 15631*b1)*k2^2*k3^2 + 
         9*(-52 + 497*b1)*k3^4) + 21*k1^2*(k2^2 - k3^2)^4*
        (10*(116 + 511*b1)*k2^6 - (1408 + 11445*b1)*k2^4*k3^2 + 
         24*(17 + 315*b1)*k2^2*k3^4 - 1225*b1*k3^6) + 
       k1^10*(6*(2644 + 2639*b1)*k2^6 + (472 + 36925*b1)*k2^4*k3^2 - 
         104*(289 + 385*b1)*k2^2*k3^4 + 5*(2648 + 2205*b1)*k3^6) - 
       k1^6*(k2^2 - k3^2)^2*((23928 + 71330*b1)*k2^6 - (62044 + 112735*b1)*
          k2^4*k3^2 + 8*(6478 + 3535*b1)*k2^2*k3^4 - (13708 + 3675*b1)*
          k3^6) - k1^8*(k2^2 - k3^2)*(10*(2960 + 9821*b1)*k2^6 - 
         5*(12168 + 32179*b1)*k2^4*k3^2 + 56*(976 + 1905*b1)*k2^2*k3^4 - 
         5*(4184 + 5439*b1)*k3^6)) - 28*f1^3*k1^2*
      (5*k1^12*(8*k2^2 - 21*k3^2) + 2835*k1^2*k3^2*(k2^2 - k3^2)^5 - 
       210*(4*k2^2 - 3*k3^2)*(k2^2 - k3^2)^6 + 315*k1^10*k3^2*
        (-k2^2 + k3^2) - 6*k1^8*(100*k2^6 - 293*k2^4*k3^2 + 310*k2^2*k3^4 - 
         105*k3^6) + 5*k1^4*(k2^2 - k3^2)^2*(280*k2^6 + 433*k2^4*k3^2 - 
         1610*k2^2*k3^4 + 945*k3^6) + 120*k1^6*(23*k2^6*k3^2 - 79*k2^4*k3^4 + 
         84*k2^2*k3^6 - 28*k3^8)) + 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*
      (10*b1*(-1 + F^2)*k1^2*k2^2*(5*k1^10 + k1^8*(k2^2 + 2*k3^2) + 
         21*k2^2*(k2^2 - k3^2)^3*(k2^2 + 2*k3^2) + 
         k1^6*(-54*k2^4 + 93*k2^2*k3^2 - 48*k3^4) - 3*k1^2*(k2^2 - k3^2)^2*
          (5*k2^4 - 39*k2^2*k3^2 + 7*k3^4) + k1^4*(-86*k2^6 + 243*k2^4*k3^2 - 
           219*k2^2*k3^4 + 62*k3^6)) + 
       f1*(8*k1^14 + 7*k1^12*(112*k2^2 - 47*k3^2) + 
         1680*k2^2*(k2^2 - k3^2)^6 + k1^10*(2088*k2^4 - 4297*k2^2*k3^2 + 
           1025*k3^4) + k1^8*(-4560*k2^6 + 5058*k2^4*k3^2 + 1070*k2^2*k3^4 - 
           50*k3^6) + 21*k1^2*(k2^2 - k3^2)^3*(216*k2^6 - 461*k2^4*k3^2 + 
           204*k2^2*k3^4 + 31*k3^6) + k1^4*(k2^2 - k3^2)^2*
          (3248*k2^6 + 711*k2^4*k3^2 - 1176*k2^2*k3^4 + 2347*k3^6) - 
         10*k1^6*(676*k2^8 - 2413*k2^6*k3^2 + 2424*k2^4*k3^4 - 
           922*k2^2*k3^6 + 235*k3^8))) - 2*(-1 + F^2)^2*f1*k1^2*
      (-14*Sqrt[2]*(c2 - c4)*k1^2*k2^2*k3^2*(-35*(4*k2^2 - 3*k3^2)*
          (k2^2 - k3^2)^3 + 15*k1^2*(k2^2 - k3^2)^2*(4*k2^2 + 21*k3^2) + 
         k1^6*(4*k2^2 + 105*k3^2) + 35*k1^4*(4*k2^4 + 5*k2^2*k3^2 - 
           9*k3^4)) + 7*b1^2*k1^2*k3^2*(k1^6*(233*k2^4 - 360*k2^2*k3^2 - 
           105*k3^4) + 15*k1^2*(k2^2 - k3^2)^2*(97*k2^4 - 21*k3^4) - 
         105*(k2^2 - k3^2)^3*(3*k2^4 + k3^4) + 
         5*k1^4*(119*k2^6 - 191*k2^4*k3^2 + 9*k2^2*k3^4 + 63*k3^6)) + 
       b1*(2*k1^12*(18*k2^2 + 73*k3^2) - k1^10*(2108*k2^4 + 911*k2^2*k3^2 + 
           2485*k3^4) + 840*(k2^2 - k3^2)^4*(11*k2^6 - 15*k2^4*k3^2 + 
           7*k2^2*k3^4 + k3^6) + 7*k1^2*(k2^2 - k3^2)^3*
          (2868*k2^6 - 4243*k2^4*k3^2 + 1722*k2^2*k3^4 + 513*k3^6) + 
         k1^8*(-1160*k2^6 - 8174*k2^4*k3^2 + 9800*k2^2*k3^4 + 2370*k3^6) - 
         20*k1^6*(380*k2^8 - 562*k2^6*k3^2 - 450*k2^4*k3^4 + 667*k2^2*k3^6 - 
           11*k3^8) + 20*k1^4*(887*k2^10 - 2331*k2^8*k3^2 + 2341*k2^6*k3^4 - 
           1040*k2^4*k3^6 + 18*k2^2*k3^8 + 125*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(28672*F^12*k1^10*k2^8*k3^6), 
 -1/7168*((-1 + F^2)*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
     (140*b1^3*(-1 + F^2)^3*k1^6*k2^2*(k1^2 + k2^2)*k3^4*
       (k1^2 + k2^2 - k3^2)^4 - 4*b1^2*(-1 + F^2)^2*k1^2*k2^2*
       (k1^2 + k2^2 - k3^2)*(9*(-1 + F^2)*k1^16 - 48*(-1 + F^2)*k2^4*
         (k2^2 - k3^2)^6 + 3*(-1 + F^2)*k1^14*(11*k2^2 + 16*k3^2) - 
        k1^2*(k2^2 - k3^2)^5*(57*(-1 + F^2)*k2^4 + 14*(-2 + 2*F^2 + 21*f1)*
           k3^4) + k1^12*(165*(-1 + F^2)*k2^4 + 45*(-1 + F^2)*k2^2*k3^2 - 
          2*(-92 + 92*F^2 + 147*f1)*k3^4) + k1^10*(-459*(-1 + F^2)*k2^6 + 
          1197*(-1 + F^2)*k2^4*k3^2 - 14*(-59 + 59*F^2 + 249*f1)*k2^2*k3^4 + 
          14*(-11 + 11*F^2 + 105*f1)*k3^6) + k1^6*(k2^2 - k3^2)^2*
         (99*(-1 + F^2)*k2^6 + 12*(-1 + F^2)*k2^4*k3^2 + 
          3*(-31 + 31*F^2 - 980*f1)*k2^2*k3^4 + 10*(-1 + F^2 + 294*f1)*
           k3^6) + k1^4*(k2^2 - k3^2)^3*(135*(-1 + F^2)*k2^6 - 
          30*(-1 + F^2)*k2^4*k3^2 - 7*(-17 + 17*F^2 + 210*f1)*k2^2*k3^4 + 
          2*(-32 + 32*F^2 + 735*f1)*k3^6) + k1^8*(k2^2 - k3^2)*
         (123*(-1 + F^2)*k2^6 - 159*(-1 + F^2)*k2^4*k3^2 + 
          (-265 + 265*F^2 - 4956*f1)*k2^2*k3^4 + (-1 + F^2 + 2940*f1)*
           k3^6)) - 4*f1*k1^2*(k1^2 + k2^2 - k3^2)*
       (56*f1^2*k1^2*k2^2*k3^4*(3*k1^10 - 2*k1^4*(5*k2^2 - 3*k3^2)*
           (k2^2 - k3^2)^2 + k1^2*(31*k2^2 - 11*k3^2)*(k2^2 - k3^2)^3 + 
          7*(k2^2 - k3^2)^5 + k1^8*(3*k2^2 + k3^2) - 
          2*k1^6*(17*k2^4 - 24*k2^2*k3^2 + 7*k3^4)) - 8*Sqrt[2]*(c2 + c4)*
         (-1 + F^2)^2*k3^4*(k1^14 - 2*k3^2*(k2^2 - k3^2)^6 - 
          k1^12*(11*k2^2 + 8*k3^2) - k1^6*(k2^2 - k3^2)^2*
           (59*k2^4 + 28*k2^2*k3^2 - 55*k3^4) + k1^2*(k2^2 - k3^2)^4*
           (8*k2^4 - 33*k2^2*k3^2 + 13*k3^4) + 
          k1^10*(-46*k2^4 + 15*k2^2*k3^2 + 27*k3^4) + k1^4*(k2^2 - k3^2)^3*
           (17*k2^4 - 61*k2^2*k3^2 + 36*k3^4) + 
          k1^8*(-70*k2^6 + 82*k2^4*k3^2 + 38*k2^2*k3^4 - 50*k3^6)) + 
        (-1 + F^2)*f1*(9*k1^16*k3^2 - 48*k2^2*k3^2*(k2^2 - k3^2)^6*
           (2*k2^2 - k3^2) + k1^14*(-48*k2^4 - 9*k2^2*k3^2 + 30*k3^4) + 
          3*k1^12*(48*k2^6 - 285*k2^4*k3^2 + 170*k2^2*k3^4 - 67*k3^6) + 
          k1^2*(k2^2 - k3^2)^5*(96*k2^6 - 99*k2^4*k3^2 + 149*k2^2*k3^4 + 
            84*k3^6) + 3*k1^6*(k2^2 - k3^2)^2*(240*k2^8 - 49*k2^6*k3^2 - 
            280*k2^4*k3^4 + 583*k2^2*k3^6 - 158*k3^8) + 
          k1^10*(1407*k2^6*k3^2 - 496*k2^4*k3^4 - 815*k2^2*k3^6 + 240*k3^8) - 
          k1^4*(k2^2 - k3^2)^3*(432*k2^8 + 165*k2^6*k3^2 + 457*k2^4*k3^4 - 
            727*k2^2*k3^6 + 345*k3^8) + k1^8*(-480*k2^10 + 579*k2^8*k3^2 - 
            1444*k2^6*k3^4 + 2150*k2^4*k3^6 - 940*k2^2*k3^8 + 135*k3^10))) - 
      b1*(-1 + F^2)*(32*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^6*
         (k1^14 + 2*k1^12*(k2^2 - k3^2) - 3*k1^10*(k2^2 - k3^2)^2 - 
          5*k1^6*(k2^2 - k3^2)^4 + 7*k1^2*(k2^2 - k3^2)^6 + 
          2*(k2^2 - k3^2)^7 + 2*k1^4*(k2^2 - k3^2)^3*(11*k2^4 - 6*k2^2*k3^2 + 
            3*k3^4) + k1^8*(-26*k2^6 + 46*k2^4*k3^2 - 30*k2^2*k3^4 + 
            10*k3^6)) + 7*f1^2*k1^2*k3^4*(123*k1^16 + 
          24*k1^14*(38*k2^2 - 27*k3^2) - 8*k1^2*(38*k2^2 - 45*k3^2)*
           (k2^2 - k3^2)^6 - 45*(k2^2 - k3^2)^8 - 
          4*k1^12*(13*k2^4 + 634*k2^2*k3^2 - 315*k3^4) - 
          4*k1^4*(k2^2 - k3^2)^4*(137*k2^4 - 750*k2^2*k3^2 + 273*k3^4) - 
          8*k1^6*(k2^2 - k3^2)^2*(194*k2^6 - 1161*k2^4*k3^2 + 
            1012*k2^2*k3^4 - 189*k3^6) - 8*k1^10*(602*k2^6 - 691*k2^4*k3^2 + 
            105*k3^6) - 2*k1^8*(1979*k2^8 - 8220*k2^6*k3^2 + 9666*k2^4*k3^4 - 
            3740*k2^2*k3^6 + 315*k3^8)) + (-1 + F^2)*f1*
         (3*k1^22 - 6*k1^20*(17*k2^2 - 2*k3^2) - 120*k2^4*(k2^2 - k3^2)^9 + 
          k1^18*(231*k2^4 - 1464*k2^2*k3^2 - 100*k3^4) - 
          3*k1^2*(k2^2 - k3^2)^7*(159*k2^6 + 73*k2^4*k3^2 - 68*k2^2*k3^4 - 
            36*k3^6) + 4*k1^16*(1488*k2^6 - 1296*k2^4*k3^2 - 310*k2^2*k3^4 - 
            k3^6) - 2*k1^14*(7749*k2^8 - 9132*k2^6*k3^2 + 12426*k2^4*k3^4 - 
            8032*k2^2*k3^6 - 483*k3^8) + k1^6*(k2^2 - k3^2)^4*
           (2823*k2^8 - 10332*k2^6*k3^2 + 634*k2^4*k3^4 + 1660*k2^2*k3^6 - 
            481*k3^8) - 2*k1^4*(k2^2 - k3^2)^5*(291*k2^8 + 1989*k2^6*k3^2 - 
            1645*k2^4*k3^4 - 291*k2^2*k3^6 + 232*k3^8) + 
          4*k1^12*(3231*k2^10 - 24*k2^8*k3^2 - 13856*k2^6*k3^4 + 
            17385*k2^4*k3^6 - 5693*k2^2*k3^8 - 595*k3^10) - 
          4*k1^8*(k2^2 - k3^2)^2*(294*k2^10 + 1962*k2^8*k3^2 + 
            2772*k2^6*k3^4 - 3275*k2^4*k3^6 + 740*k2^2*k3^8 + 195*k3^10) + 
          k1^10*(-3978*k2^12 + 12456*k2^10*k3^2 - 42820*k2^8*k3^4 + 
            75096*k2^6*k3^6 - 52842*k2^4*k3^8 + 9680*k2^2*k3^10 + 
            2408*k3^12))))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^10*k1^11*k2^7*k3^4) + 
  ((-1 + F^2)*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (140*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^4*(k1^2 + k2^2 - k3^2)^4*
      (k1^2 + k3^2) + 2*b1^2*(-1 + F^2)^2*k1^2*k2^2*
      (7*(-4 + 4*F^2 - 3*f1)*k1^18 + 7*k1^16*(8*(-3 + 3*F^2 - 5*f1)*k2^2 + 
         (54 - 54*F^2 + 53*f1)*k3^2) + 
       4*k1^14*(7*(-7 + 7*F^2 + 123*f1)*k2^4 + (187 - 187*F^2 + 266*f1)*k2^2*
          k3^2 + 98*(-2 + 2*F^2 - f1)*k3^4) + 
       2*k1^12*(28*(-14 + 14*F^2 - f1)*k2^6 + 4*(-16 + 16*F^2 - 245*f1)*k2^4*
          k3^2 + 3*(173 - 173*F^2 + 1064*f1)*k2^2*k3^4 - 
         35*(-1 + F^2 + 56*f1)*k3^6) + 4*k1^6*(k2^2 - k3^2)^3*
        (7*(-41 + 41*F^2 - 165*f1)*k2^6 + (857 - 857*F^2 + 2177*f1)*k2^4*
          k3^2 + 2*(-208 + 208*F^2 + 1701*f1)*k2^2*k3^4 - 
         14*(-3 + 3*F^2 + 284*f1)*k3^6) + 2*k1^4*(k2^2 - k3^2)^4*
        (28*(-4 + 4*F^2 - 7*f1)*k2^6 + 2*(163 - 163*F^2 + 644*f1)*k2^4*k3^2 + 
         (-81 + 81*F^2 + 2072*f1)*k2^2*k3^4 - 7*(-11 + 11*F^2 + 452*f1)*
          k3^6) - 2*k1^10*(k2^2 - k3^2)*(7*(-98 + 98*F^2 + 585*f1)*k2^6 + 
         (1759 - 1759*F^2 - 1785*f1)*k2^4*k3^2 + 
         (-1731 + 1731*F^2 - 10633*f1)*k2^2*k3^4 + 7*(70 - 70*F^2 + 997*f1)*
          k3^6) - 2*k1^8*(k2^2 - k3^2)^2*(588*(-1 + F^2 - 7*f1)*k2^6 + 
         (443 - 443*F^2 + 4249*f1)*k2^4*k3^2 + 2*(-204 + 204*F^2 - 6223*f1)*
          k2^2*k3^4 + 7*(43 - 43*F^2 + 1471*f1)*k3^6) + 
       (k2^2 - k3^2)^7*(352*(-1 + F^2)*k2^2*k3^2 + 
         7*f1*(80*k2^4 - 79*k2^2*k3^2 - k3^4)) + 7*k1^2*(k2^2 - k3^2)^6*
        (134*(-1 + F^2)*k2^2*k3^2 + f1*(189*k2^4 - 82*k2^2*k3^2 + 
           145*k3^4))) + 4*f1*k1^2*(-56*f1^2*k1^2*k2^6*(k1^2 - k2^2 + k3^2)^2*
        (3*k1^8 + 4*k1^6*k2^2 - 4*k1^2*(k2^2 - 6*k3^2)*(k2^2 - k3^2)^2 + 
         7*(k2^2 - k3^2)^4 - 2*k1^4*(5*k2^4 - 22*k2^2*k3^2 + 17*k3^4)) + 
       14*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k1^2*k2^2*k3^2*
        (k1^14 + k1^12*(6*k2^2 - 2*k3^2) + 8*(k2^2 - k3^2)^7 + 
         3*k1^2*(k2^2 - k3^2)^5*(7*k2^2 + k3^2) + 2*k1^4*(k2^2 - k3^2)^4*
          (3*k2^2 + 47*k3^2) + k1^10*(-205*k2^4 + 34*k2^2*k3^2 - 37*k3^4) - 
         k1^6*(k2^2 - k3^2)^2*(169*k2^4 - 210*k2^2*k3^2 + 185*k3^4) + 
         4*k1^8*(83*k2^6 - 43*k2^4*k3^2 - 75*k2^2*k3^4 + 35*k3^6)) + 
       2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k2^2*(k1^18 + 8*k1^16*k2^2 + 
         8*k2^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^7 + 
         k1^14*(-372*k2^4 + 63*k2^2*k3^2 - 9*k3^4) + k1^6*(k2^2 - k3^2)^3*
          (108*k2^6 + 229*k2^4*k3^2 + 248*k2^2*k3^4 - 425*k3^6) + 
         4*k1^8*(k2^2 - k3^2)^2*(160*k2^6 - 441*k2^4*k3^2 + 342*k2^2*k3^4 - 
           249*k3^6) + 2*k1^12*(544*k2^6 - 881*k2^4*k3^2 + 68*k2^2*k3^4 - 
           99*k3^6) - 2*k1^4*(k2^2 - k3^2)^4*(176*k2^6 - 335*k2^4*k3^2 + 
           236*k2^2*k3^4 - 37*k3^6) + k1^2*(k2^2 - k3^2)^5*
          (113*k2^6 + 52*k2^4*k3^2 - 189*k2^2*k3^4 + 72*k3^6) + 
         k1^10*(-1258*k2^8 + 3457*k2^6*k3^2 - 1133*k2^4*k3^4 - 
           1841*k2^2*k3^6 + 775*k3^8)) + (-1 + F^2)*f1*
        (15*k1^18*k3^2 + k1^16*(-48*k2^4 + 97*k2^2*k3^2 - 72*k3^4) - 
         k1^14*(16*k2^6 + 401*k2^4*k3^2 + 81*k2^2*k3^4 - 36*k3^6) + 
         16*(k2^2 - k3^2)^7*(4*k2^6 + 12*k2^4*k3^2 - 2*k2^2*k3^4 - 3*k3^6) - 
         k1^2*(k2^2 - k3^2)^6*(384*k2^6 - 700*k2^4*k3^2 + 129*k2^2*k3^4 + 
           369*k3^6) - k1^8*(k2^2 - k3^2)^2*(752*k2^8 + 269*k2^6*k3^2 - 
           2794*k2^4*k3^4 + 5685*k2^2*k3^6 - 2520*k3^8) + 
         k1^12*(192*k2^8 - 491*k2^6*k3^2 + 2194*k2^4*k3^4 - 1615*k2^2*k3^6 + 
           504*k3^8) + k1^4*(k2^2 - k3^2)^4*(544*k2^8 + 1335*k2^6*k3^2 - 
           1058*k2^4*k3^4 - 1373*k2^2*k3^6 + 1224*k3^8) + 
         k1^6*(k2^2 - k3^2)^3*(176*k2^8 + 901*k2^6*k3^2 + 128*k2^4*k3^4 - 
           3809*k2^2*k3^6 + 2268*k3^8) + k1^10*(224*k2^10 - 943*k2^8*k3^2 + 
           4537*k2^6*k3^4 - 8379*k2^4*k3^6 + 6199*k2^2*k3^8 - 1638*k3^10))) + 
     b1*(-1 + F^2)*(7*f1^2*k1^2*k2^2*(17*k1^16*k3^2 + 
         225*k3^2*(k2^2 - k3^2)^8 - 8*k1^14*(44*k2^4 + 23*k2^2*k3^2 - 
           24*k3^4) - 56*k1^2*(k2^2 - k3^2)^6*(4*k2^4 - 23*k2^2*k3^2 + 
           14*k3^4) + 4*k1^12*(176*k2^6 - 341*k2^4*k3^2 + 662*k2^2*k3^4 - 
           389*k3^6) + 4*k1^4*(k2^2 - k3^2)^4*(48*k2^6 + 291*k2^4*k3^2 - 
           746*k2^2*k3^4 + 67*k3^6) + 8*k1^6*(k2^2 - k3^2)^2*
          (140*k2^8 + 215*k2^6*k3^2 - 462*k2^4*k3^4 - 353*k2^2*k3^6 + 
           316*k3^8) + 8*k1^10*(60*k2^8 - k2^6*k3^2 + 692*k2^4*k3^4 - 
           1245*k2^2*k3^6 + 510*k3^8) - 2*k1^8*(960*k2^10 - 2475*k2^8*k3^2 + 
           572*k2^6*k3^4 + 6078*k2^4*k3^6 - 7620*k2^2*k3^8 + 2485*k3^10)) + 
       (-1 + F^2)*f1*(18*k1^22 + 40*k2^2*(k2^2 - k3^2)^9*(12*k2^2 - k3^2) - 
         2*k1^20*(35*k2^2 + 27*k3^2) - k1^18*(240*k2^4 + 323*k2^2*k3^2 + 
           144*k3^4) + k1^2*(k2^2 - k3^2)^7*(1688*k2^6 + 105*k2^4*k3^2 - 
           313*k2^2*k3^4 - 72*k3^6) + 4*k1^16*(5478*k2^6 - 702*k2^4*k3^2 - 
           67*k2^2*k3^4 + 234*k3^6) - 2*k1^6*(k2^2 - k3^2)^4*
          (183*k2^8 - 4280*k2^6*k3^2 - 362*k2^4*k3^4 + 2268*k2^2*k3^6 - 
           657*k3^8) + 2*k1^4*(k2^2 - k3^2)^5*(605*k2^8 + 2846*k2^6*k3^2 - 
           1122*k2^4*k3^4 - 460*k2^2*k3^6 + 243*k3^8) - 
         4*k1^14*(13125*k2^8 - 12028*k2^6*k3^2 + 624*k2^4*k3^4 - 
           1282*k2^2*k3^6 + 441*k3^8) + 4*k1^12*(11687*k2^10 - 
           23225*k2^8*k3^2 + 9143*k2^6*k3^4 + 3884*k2^4*k3^6 - 
           2252*k2^2*k3^8 + 315*k3^10) - 4*k1^8*(k2^2 - k3^2)^2*
          (1442*k2^10 - 6972*k2^8*k3^2 + 2729*k2^6*k3^4 + 1096*k2^4*k3^6 - 
           1397*k2^2*k3^8 + 414*k3^10) + k1^10*(-13112*k2^12 + 
           50794*k2^10*k3^2 - 63376*k2^8*k3^4 + 33644*k2^6*k3^6 - 
           10688*k2^4*k3^8 + 2234*k2^2*k3^10 + 504*k3^12)) - 
       8*(-1 + F^2)^2*k1^2*k2^2*(k1^2 + k2^2 - k3^2)*
        (-35*Sqrt[2]*(c2 - c4)*k1^6*k3^4*(k1^2 + k2^2 - k3^2)^3 + 
         ((c2 + c4)*(2*k1^16 + 5*k1^14*(2*k2^2 - 5*k3^2) - 
            2*k1^2*k2^2*(25*k2^2 - 19*k3^2)*(k2^2 - k3^2)^5 - 
            16*k2^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^6 + 
            k1^12*(18*k2^4 - 9*k2^2*k3^2 - 19*k3^4) + 
            2*k1^10*(61*k2^6 + 25*k2^4*k3^2 - 170*k2^2*k3^4 + 88*k3^6) + 
            k1^4*(k2^2 - k3^2)^2*(182*k2^8 - 509*k2^6*k3^2 + 267*k2^4*k3^4 - 
              79*k2^2*k3^6 + 11*k3^8) - 2*k1^8*(205*k2^8 - 489*k2^6*k3^2 + 
              480*k2^4*k3^4 - 293*k2^2*k3^6 + 97*k3^8) + 
            k1^6*(174*k2^10 - 409*k2^8*k3^2 + 382*k2^6*k3^4 - 56*k2^4*k3^6 - 
              140*k2^2*k3^8 + 49*k3^10)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(7168*F^10*k1^11*k2^5*k3^6) - 
  ((-1 + F^2)*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (-140*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^4*(k1^2 + k2^2 - k3^2)^4*
      (k2^2 + k3^2) + 2*b1^2*(-1 + F^2)^2*k1^2*k2^2*
      (56*(-4 + 4*F^2 + 21*f1)*k1^2*k2^2*(k2^2 - k3^2)^7 + 
       567*f1*k2^2*(k2^2 - k3^2)^8 + 7*k1^16*((-4 + 4*F^2 - 15*f1)*k2^2 + 
         6*(-1 + F^2 + 2*f1)*k3^2) + 14*k1^14*(12*(-1 + F^2 - f1)*k2^4 + 
         (13 - 13*F^2 + 16*f1)*k2^2*k3^2 + (-13 + 13*F^2 - 4*f1)*k3^4) + 
       28*k1^4*(k2^2 - k3^2)^4*((-41 + 41*F^2 - f1)*k2^6 + 
         (31 - 31*F^2 + 49*f1)*k2^4*k3^2 + (-19 + 19*F^2 - 35*f1)*k2^2*k3^4 + 
         (-1 + F^2 - 13*f1)*k3^6) + 4*k1^12*(49*(-1 + F^2 + 89*f1)*k2^6 + 
         (-284 + 284*F^2 + 525*f1)*k2^4*k3^2 + (-45 + 45*F^2 - 1729*f1)*k2^2*
          k3^4 - 35*(-8 + 8*F^2 + 7*f1)*k3^6) + 28*k1^10*(k2^2 - k3^2)*
        (2*(-14 + 14*F^2 - 733*f1)*k2^6 + (21 - 21*F^2 + 32*f1)*k2^4*k3^2 + 
         2*(-73 + 73*F^2 - 193*f1)*k2^2*k3^4 - 5*(-13 + 13*F^2 + 20*f1)*
          k3^6) - 2*k1^8*(k2^2 - k3^2)^2*(343*(-2 + 2*F^2 - 51*f1)*k2^6 + 
         (-127 + 127*F^2 + 5348*f1)*k2^4*k3^2 + (1912 - 1912*F^2 + 1127*f1)*
          k2^2*k3^4 + 35*(-17 + 17*F^2 + 46*f1)*k3^6) - 
       14*k1^6*(k2^2 - k3^2)^3*((-84 + 84*F^2 + 916*f1)*k2^6 + 
         (99 - 99*F^2 - 652*f1)*k2^4*k3^2 + 2*(-7 + 7*F^2 - 2*f1)*k2^2*k3^4 + 
         (-17 + 17*F^2 + 124*f1)*k3^6)) - 4*f1*(k1^2 + k2^2 - k3^2)*
      (56*f1^2*k1^4*k2^2*(k2^2 - k3^2)*(k1^2 - k2^2 + k3^2)^2*
        (k1^8 - k1^2*(3*k2^2 - 11*k3^2)*(k2^2 - k3^2)^2 + 
         4*(k2^2 - k3^2)^3*(k2^2 + k3^2) + k1^6*(3*k2^2 + k3^2) + 
         k1^4*(-5*k2^4 + 14*k2^2*k3^2 - 9*k3^4)) + 
       (7*(c2 - c4)*(-1 + F^2)^2*k2^2*k3^2*(-3*k1^16 + 
          7*k1^14*(k2^2 - k3^2) + 27*k1^4*(k2^2 - k3^2)^6 + 
          61*k1^2*(k2^2 - k3^2)^7 + 20*(k2^2 - k3^2)^8 + k1^8*(k2^2 - k3^2)^2*
           (187*k2^4 + 186*k2^2*k3^2 - 85*k3^4) + 
          k1^12*(25*k2^4 + 94*k2^2*k3^2 + 41*k3^4) - k1^6*(k2^2 - k3^2)^3*
           (163*k2^4 - 86*k2^2*k3^2 + 83*k3^4) - 
          k1^10*(161*k2^6 - 403*k2^4*k3^2 + 227*k2^2*k3^4 + 15*k3^6)))/
        Sqrt[2] - (-1 + F^2)*f1*k1^2*(12*k1^16*k3^2 + 
         48*k2^2*k3^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^6 + 
         k1^14*(-64*k2^4 + 23*k2^2*k3^2 + 33*k3^4) + 
         2*k1^12*(72*k2^6 - 563*k2^4*k3^2 + 280*k2^2*k3^4 - 141*k3^6) - 
         k1^2*(k2^2 - k3^2)^5*(160*k2^6 - 355*k2^4*k3^2 + 306*k2^2*k3^4 - 
           63*k3^6) + 2*k1^4*(k2^2 - k3^2)^4*(264*k2^6 + 145*k2^4*k3^2 - 
           328*k2^2*k3^4 + 111*k3^6) - k1^6*(k2^2 - k3^2)^2*
          (576*k2^8 - 929*k2^6*k3^2 + 931*k2^4*k3^4 - 883*k2^2*k3^6 + 
           177*k3^8) + k1^10*(-96*k2^8 + 1669*k2^6*k3^2 - 219*k2^4*k3^4 - 
           1561*k2^2*k3^6 + 495*k3^8) + 8*k1^8*(28*k2^10 - 155*k2^8*k3^2 + 
           185*k2^6*k3^4 - 123*k2^4*k3^6 + 95*k2^2*k3^8 - 30*k3^10))) - 
     b1*(-1 + F^2)*(280*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k1^6*k2^4*k3^4*
        (k1^2 + k2^2 - k3^2)^4 + 7*f1^2*k1^2*(8*k1^14*(k2^2 - k3^2)^2*
          (16*k2^2 + 81*k3^2) + k1^16*(40*k2^4 + k2^2*k3^2 - 123*k3^4) + 
         9*(k2^2 - k3^2)^8*(8*k2^4 - 23*k2^2*k3^2 + 5*k3^4) + 
         8*k1^2*(k2^2 - k3^2)^7*(8*k2^4 - 95*k2^2*k3^2 + 45*k3^4) - 
         8*k1^6*k3^2*(-k2^2 + k3^2)^3*(-185*k2^6 + 583*k2^4*k3^2 - 
           651*k2^2*k3^4 + 189*k3^6) - 4*k1^4*(k2^2 - k3^2)^5*
          (112*k2^6 + 293*k2^4*k3^2 - 658*k2^2*k3^4 + 273*k3^6) + 
         6*k1^8*(k2^2 - k3^2)^2*(120*k2^8 - 23*k2^6*k3^2 + 543*k2^4*k3^4 - 
           425*k2^2*k3^6 + 105*k3^8) - 4*k1^12*(96*k2^8 - 355*k2^6*k3^2 + 
           661*k2^4*k3^4 - 1005*k2^2*k3^6 + 315*k3^8) - 
         8*k1^10*(24*k2^10 + 497*k2^8*k3^2 - 498*k2^6*k3^4 - 344*k2^4*k3^6 + 
           426*k2^2*k3^8 - 105*k3^10)) + (-1 + F^2)*f1*
        (k1^20*(54*k2^2 - 71*k3^2) - 280*k2^2*(k2^2 - k3^2)^9*
          (2*k2^2 + k3^2) + k1^18*(-74*k2^4 - 30*k2^2*k3^2 + 484*k3^4) - 
         2*k1^2*(k2^2 - k3^2)^7*(997*k2^6 - 146*k2^4*k3^2 - 707*k2^2*k3^4 + 
           48*k3^6) - 8*k1^16*(2249*k2^6 - 436*k2^4*k3^2 - 1306*k2^2*k3^4 + 
           159*k3^6) - k1^4*(k2^2 - k3^2)^5*(1130*k2^8 + 2317*k2^6*k3^2 - 
           4571*k2^4*k3^4 + 2711*k2^2*k3^6 - 435*k3^8) - 
         4*k1^10*(k2^2 - k3^2)^2*(287*k2^8 + 1521*k2^6*k3^2 + 
           1590*k2^4*k3^4 + 613*k2^2*k3^6 + 21*k3^8) + 8*k1^8*(k2^2 - k3^2)^3*
          (97*k2^8 - 2189*k2^6*k3^2 + 885*k2^4*k3^4 + 571*k2^2*k3^6 + 
           28*k3^8) + 4*k1^6*(k2^2 - k3^2)^4*(1410*k2^8 - 2674*k2^6*k3^2 + 
           2409*k2^4*k3^4 - 188*k2^2*k3^6 + 163*k3^8) + 
         4*k1^14*(8866*k2^8 - 10070*k2^6*k3^2 + 8063*k2^4*k3^4 - 
           7596*k2^2*k3^6 + 385*k3^8) - 2*k1^12*(9518*k2^10 - 
           17797*k2^8*k3^2 - 788*k2^6*k3^4 + 21910*k2^4*k3^6 - 
           13186*k2^2*k3^8 + 343*k3^10))) + 2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*
      (k1^2 + k2^2 - k3^2)*(2*b1*(-1 + F^2)*k1^4*(4*k1^14*(3*k2^2 - 2*k3^2) - 
         32*k2^4*(k2^2 - k3^2)^6 + k1^12*(32*k2^4 + 15*k2^2*k3^2 + 8*k3^4) + 
         k1^10*(108*k2^6 + 63*k2^4*k3^2 - 227*k2^2*k3^4 + 32*k3^6) + 
         k1^8*(-448*k2^8 + 994*k2^6*k3^2 - 942*k2^4*k3^4 + 366*k2^2*k3^6 - 
           48*k3^8) - k1^2*(k2^2 - k3^2)^3*(92*k2^8 - 59*k2^6*k3^2 + 
           36*k2^4*k3^4 + 57*k2^2*k3^6 - 16*k3^8) + k1^4*(k2^2 - k3^2)^2*
          (192*k2^8 - 337*k2^6*k3^2 + 156*k2^4*k3^4 - 125*k2^2*k3^6 + 
           40*k3^8) + k1^6*(228*k2^10 - 550*k2^8*k3^2 + 36*k2^6*k3^4 + 
           360*k2^4*k3^6 - 66*k2^2*k3^8 - 8*k3^10)) + 
       f1*(k1^20 - 40*k2^2*(k2^2 - k3^2)^8*(k2^2 + 3*k3^2) + 
         k1^18*(-23*k2^2 + 4*k3^2) - k1^2*k2^2*(k2^2 - k3^2)^7*
          (55*k2^2 + 406*k3^2) + k1^16*(196*k2^4 - 357*k2^2*k3^2 - 72*k3^4) + 
         k1^4*(k2^2 - k3^2)^6*(193*k2^4 - 257*k2^2*k3^2 - 27*k3^4) + 
         k1^14*(204*k2^6 - 219*k2^4*k3^2 + 395*k2^2*k3^4 + 292*k3^6) + 
         k1^12*(-1498*k2^8 + 3203*k2^6*k3^2 - 3222*k2^4*k3^4 + 
           987*k2^2*k3^6 - 590*k3^8) + k1^6*(k2^2 - k3^2)^3*
          (76*k2^8 + 811*k2^6*k3^2 - 342*k2^4*k3^4 + 747*k2^2*k3^6 - 
           172*k3^8) - k1^8*(k2^2 - k3^2)^2*(900*k2^8 + 1255*k2^6*k3^2 + 
           870*k2^4*k3^4 - 1473*k2^2*k3^6 + 464*k3^8) + 
         k1^10*(1846*k2^10 - 2523*k2^8*k3^2 - 2127*k2^6*k3^4 + 
           4451*k2^4*k3^6 - 2331*k2^2*k3^8 + 684*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(7168*F^10*k1^9*k2^7*k3^6), 
 ((-1 + F^2)^2*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (5*b1^2*(-1 + F^2)^2*k1^4*(k1^2 + k2^2 - k3^2)^2*
      (9*(-1 + F^2)*k1^8*k2^2 + 3*k1^6*(8*(-1 + F^2)*k2^4 - 
         6*(-1 + F^2)*k2^2*k3^2 + 49*f1*k3^4) - 7*(k2^3 - k2*k3^2)^2*
        (9*(-1 + F^2)*k2^4 - 2*(-2 + 2*F^2 + 21*f1)*k3^4) + 
       k1^4*(-42*(-1 + F^2)*k2^6 + 114*(-1 + F^2)*k2^4*k3^2 + 
         (67 - 67*F^2 + 924*f1)*k2^2*k3^4 - 294*f1*k3^6) + 
       k1^2*(-24*(-1 + F^2)*k2^8 + 66*(-1 + F^2)*k2^6*k3^2 + 
         (50 - 50*F^2 + 903*f1)*k2^4*k3^4 + 2*(-4 + 4*F^2 - 441*f1)*k2^2*
          k3^6 + 147*f1*k3^8)) - b1*(-1 + F^2)*f1*(48*(-1 + F^2)*k1^18 + 
       3*(-1 + F^2)*k1^16*(128*k2^2 - 317*k3^2) - 1440*(-1 + F^2)*k2^4*
        (k2^2 - k3^2)^7 - 3*k1^14*(804*(-1 + F^2)*k2^4 - 
         654*(-1 + F^2)*k2^2*k3^2 + (-477 + 477*F^2 - 980*f1)*k3^4) - 
       84*k1^2*(k2^2 - k3^2)^5*(77*(-1 + F^2)*k2^6 - 45*(-1 + F^2)*k2^4*
          k3^2 + (-12 + 12*F^2 + 35*f1)*k2^2*k3^4 + (12 - 12*F^2 - 35*f1)*
          k3^6) - k1^12*(6144*(-1 + F^2)*k2^6 - 17271*(-1 + F^2)*k2^4*k3^2 + 
         3*(-6101 + 6101*F^2 + 5040*f1)*k2^2*k3^4 + 
         2*(4819 - 4819*F^2 + 2940*f1)*k3^6) + k1^6*(k2^2 - k3^2)^2*
        (5916*(-1 + F^2)*k2^8 - 12174*(-1 + F^2)*k2^6*k3^2 - 
         7*(-397 + 397*F^2 + 10100*f1)*k2^4*k3^4 - 
         8*(-328 + 328*F^2 - 14455*f1)*k2^2*k3^6 + 
         7*(-283 + 283*F^2 - 5460*f1)*k3^8) - k1^4*(k2^2 - k3^2)^3*
        (5664*(-1 + F^2)*k2^8 - 4233*(-1 + F^2)*k2^6*k3^2 + 
         80*(-44 + 44*F^2 + 343*f1)*k2^4*k3^4 - 161*(-27 + 27*F^2 + 280*f1)*
          k2^2*k3^6 + 28*(-47 + 47*F^2 + 630*f1)*k3^8) + 
       2*k1^10*(2802*(-1 + F^2)*k2^8 - 990*(-1 + F^2)*k2^6*k3^2 - 
         15*(-603 + 603*F^2 + 2198*f1)*k2^4*k3^4 + 
         20*(-527 + 527*F^2 + 1981*f1)*k2^2*k3^6 - 
         5*(-983 + 983*F^2 + 882*f1)*k3^8) + k1^8*(k2^2 - k3^2)*
        (10176*(-1 + F^2)*k2^8 - 16137*(-1 + F^2)*k2^6*k3^2 + 
         (639 - 639*F^2 - 91840*f1)*k2^4*k3^4 + (3947 - 3947*F^2 + 140560*f1)*
          k2^2*k3^6 - 3*(-79 + 79*F^2 + 11760*f1)*k3^8)) + 
     4*f1*(35*f1^2*k1^2*k3^4*(k1^10*(58*k2^2 - 42*k3^2) + 
         14*k1^2*(k2^2 - 9*k3^2)*(k2^2 - k3^2)^4 + 21*(k2^2 - k3^2)^6 + 
         6*k1^4*(k2^2 - k3^2)^2*(13*k2^4 - 66*k2^2*k3^2 + 49*k3^4) + 
         k1^8*(245*k2^4 - 442*k2^2*k3^2 + 189*k3^4) + 
         16*k1^6*(16*k2^6 - 56*k2^4*k3^2 + 61*k2^2*k3^4 - 21*k3^6)) - 
       8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^4*(11*k1^12 + 
         k1^10*(40*k2^2 - 42*k3^2) + 28*k3^2*(k2^2 - k3^2)^5 - 
         5*k1^4*(k2^2 - k3^2)^2*(5*k2^4 - 30*k2^2*k3^2 + 21*k3^4) + 
         2*k1^8*(27*k2^4 - 54*k2^2*k3^2 + 25*k3^4) - 2*k1^2*(k2^2 - k3^2)^3*
          (12*k2^4 - 69*k2^2*k3^2 + 47*k3^4) + 4*k1^6*(6*k2^6 - 8*k2^4*k3^2 - 
           3*k2^2*k3^4 + 5*k3^6)) + (-1 + F^2)*f1*(12*k1^18 + 
         360*k2^4*(k2^2 - k3^2)^7 + 6*k1^16*(-5*k2^2 + k3^2) + 
         k1^14*(-99*k2^4 + 288*k2^2*k3^2 - 154*k3^4) + 3*k1^2*(k2^2 - k3^2)^5*
          (195*k2^6 + 373*k2^4*k3^2 - 260*k2^2*k3^4 - 84*k3^6) + 
         4*k1^12*(87*k2^6 - 630*k2^4*k3^2 + 469*k2^2*k3^4 - 33*k3^6) - 
         4*k1^4*(k2^2 - k3^2)^4*(144*k2^6 - 1347*k2^4*k3^2 - 106*k2^2*k3^4 + 
           364*k3^6) - k1^6*(k2^2 - k3^2)^2*(1245*k2^8 - 6906*k2^6*k3^2 + 
           63*k2^4*k3^4 + 7772*k2^2*k3^6 - 3294*k3^8) + 
         k1^10*(-309*k2^8 - 3558*k2^6*k3^2 + 8783*k2^4*k3^4 - 
           7032*k2^2*k3^6 + 1780*k3^8) + 2*k1^8*(477*k2^10 - 1281*k2^8*k3^2 + 
           4498*k2^6*k3^4 - 8638*k2^4*k3^6 + 6745*k2^2*k3^8 - 1801*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(7168*F^12*k1^11*k2^7*k3^4) - 
  ((-1 + F^2)^2*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (-70*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^2*(k1^2 + k2^2 - k3^2)^2*
      (k1^4 + 2*k1^2*(k2^2 - k3^2) - 7*(k2^2 - k3^2)^2) + 
     14*b1^2*(-1 + F^2)^2*k1^2*k2^2*(k1^2 + k2^2 - k3^2)^2*
      (30*(-1 + F^2)*k1^10 + 1512*f1*k3^2*(k2^2 - k3^2)^4 + 
       k1^8*(30*(-1 + F^2)*k2^2 + (50 - 50*F^2 - 551*f1)*k3^2) - 
       35*k1^2*((-3 + 3*F^2 - 32*f1)*k2^2 + 14*f1*k3^2)*
        (-(k2^2*k3) + k3^3)^2 + k1^6*(-270*(-1 + F^2)*k2^4 + 
         (-515 + 515*F^2 - 526*f1)*k2^2*k3^2 + 2*(115 - 115*F^2 + 578*f1)*
          k3^4) + k1^4*(210*(-1 + F^2)*k2^6 + (460 - 460*F^2 - 7*f1)*k2^4*
          k3^2 + 2*(-160 + 160*F^2 + 637*f1)*k2^2*k3^4 + 
         (70 - 70*F^2 - 1147*f1)*k3^6)) - b1*(-1 + F^2)*
      (-7*f1^2*k2^2*(-163*k1^16 + 24*k1^14*(31*k2^2 - 55*k3^2) + 
         24*k1^2*(555*k2^2 - 254*k3^2)*(k2^2 - k3^2)^6 + 
         4125*(k2^2 - k3^2)^8 + 28*k1^4*(k2^2 - k3^2)^4*
          (253*k2^4 + 362*k2^2*k3^2 - 275*k3^4) + 
         4*k1^12*(235*k2^4 - 3314*k2^2*k3^2 + 2899*k3^4) + 
         8*k1^10*(1199*k2^6 - 1886*k2^4*k3^2 + 3815*k2^2*k3^4 - 3000*k3^6) - 
         8*k1^6*(k2^2 - k3^2)^2*(1821*k2^6 - 8833*k2^4*k3^2 + 
           8723*k2^2*k3^4 - 1471*k3^6) - 2*k1^8*(7465*k2^8 - 
           35076*k2^6*k3^2 + 42246*k2^4*k3^4 - 8740*k2^2*k3^6 - 5895*k3^8)) - 
       2*(-1 + F^2)*f1*(96*k1^18 + 3*k1^16*(248*k2^2 - 427*k3^2) + 
         480*k2^2*(k2^2 - k3^2)^7*(12*k2^2 - k3^2) + 28*k1^2*k2^2*
          (k2^2 - k3^2)^5*(504*k2^4 - 197*k2^2*k3^2 + 45*k3^4) + 
         k1^14*(-992*k2^4 - 1831*k2^2*k3^2 + 3570*k3^4) - 
         k1^12*(7312*k2^6 - 13682*k2^4*k3^2 + 3533*k2^2*k3^4 + 4515*k3^6) - 
         2*k1^10*(5200*k2^8 - 7979*k2^6*k3^2 + 1680*k2^4*k3^4 + 
           1929*k2^2*k3^6 - 2310*k3^8) + k1^4*(k2^2 - k3^2)^3*
          (11520*k2^8 - 10836*k2^6*k3^2 + 18487*k2^4*k3^4 - 13256*k2^2*k3^6 + 
           1125*k3^8) + k1^6*(k2^2 - k3^2)^2*(1216*k2^8 - 24419*k2^6*k3^2 + 
           64216*k2^4*k3^4 - 33959*k2^2*k3^6 + 3906*k3^8) + 
         k1^8*(3176*k2^10 - 34653*k2^8*k3^2 + 91858*k2^6*k3^4 - 
           89508*k2^4*k3^6 + 34398*k2^2*k3^8 - 5271*k3^10)) + 
       40*(-1 + F^2)^2*k1^4*k2^2*(k1^2 + k2^2 - k3^2)^2*
        (k1^4 + 2*k1^2*(k2^2 - k3^2) - 7*(k2^2 - k3^2)^2)*
        ((7*(c2 - c4)*k1^2*k3^2)/Sqrt[2] + 
         ((c2 + c4)*(3*k1^4 - 5*k2^4 + 3*k2^2*k3^2 - 6*k1^2*(k2^2 - k3^2)))/
          Sqrt[2])) - 8*f1*(7*f1^2*k1^2*k2^2*(34*k1^12*k3^2 - 
         525*k3^2*(k2^2 - k3^2)^6 - 10*k1^10*(8*k2^4 - 27*k2^2*k3^2 + 
           27*k3^4) + 14*k1^2*(k2^2 - k3^2)^4*(40*k2^4 - 129*k2^2*k3^2 + 
           129*k3^4) - 60*k1^4*(k2^2 - k3^2)^2*(16*k2^6 + 17*k2^4*k3^2 - 
           70*k2^2*k3^4 + 35*k3^6) + 5*k1^8*(64*k2^6 - 13*k2^4*k3^2 - 
           150*k2^2*k3^4 + 75*k3^6) + 40*k1^6*(4*k2^8 - 19*k2^6*k3^2 + 
           49*k2^4*k3^4 - 51*k2^2*k3^6 + 17*k3^8)) + 
       (-1 + F^2)*f1*(24*k1^18 + 4*k1^16*(23*k2^2 - 27*k3^2) - 
         120*k2^2*(k2^2 - k3^2)^7*(12*k2^2 - k3^2) + 
         k1^14*(154*k2^4 + 197*k2^2*k3^2 - 168*k3^4) - 
         6*k1^12*(99*k2^6 - 372*k2^4*k3^2 + 577*k2^2*k3^4 - 322*k3^6) - 
         k1^2*(k2^2 - k3^2)^5*(4184*k2^6 - 315*k2^4*k3^2 - 1093*k2^2*k3^4 - 
           312*k3^6) + 2*k1^4*(k2^2 - k3^2)^4*(199*k2^6 - 5264*k2^4*k3^2 + 
           2221*k2^2*k3^4 + 954*k3^6) + k1^10*(-2860*k2^8 + 7121*k2^6*k3^2 - 
           9678*k2^4*k3^4 + 10793*k2^2*k3^6 - 5040*k3^8) + 
         k1^6*(k2^2 - k3^2)^2*(5202*k2^8 - 24469*k2^6*k3^2 + 
           22860*k2^4*k3^4 + 159*k2^2*k3^6 - 4872*k3^8) + 
         4*k1^8*(578*k2^10 - 3331*k2^8*k3^2 + 4464*k2^6*k3^4 + 
           300*k2^4*k3^6 - 3670*k2^2*k3^8 + 1659*k3^10)) + 
       4*(-1 + F^2)^2*k1^2*k2^2*((-7*(c2 - c4)*k1^2*k3^2*(k1^2 + k2^2 - k3^2)^
            2*(k1^6 - 7*k1^2*(k2^2 - k3^2)^2 + 56*(k2^2 - k3^2)^3 + 
            k1^4*(-22*k2^2 + 52*k3^2)))/Sqrt[2] + 
         ((c2 + c4)*(k1^12*(14*k2^2 - 11*k3^2) - 112*k2^2*(3*k2^2 - 2*k3^2)*
             (k2^2 - k3^2)^5 - 6*k1^10*(19*k2^4 - 49*k2^2*k3^2 + 55*k3^4) - 
            2*k1^8*(178*k2^6 - 519*k2^4*k3^2 + 700*k2^2*k3^4 - 355*k3^6) + 
            5*k1^4*(k2^2 - k3^2)^2*(110*k2^6 - 363*k2^4*k3^2 + 
              408*k2^2*k3^4 - 147*k3^6) - 2*k1^2*(k2^2 - k3^2)^3*
             (213*k2^6 - 8*k2^4*k3^2 - 353*k2^2*k3^4 + 188*k3^6) + 
            2*k1^6*(334*k2^8 - 826*k2^6*k3^2 + 677*k2^4*k3^4 - 
              180*k2^2*k3^6 - 5*k3^8)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(14336*F^12*k1^11*k2^5*k3^6) - 
  ((-1 + F^2)^2*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (-140*b1*(-1 + F^2)^3*k1^4*k2^2*(k1^2 + k2^2 - k3^2)^2*
      (k1^4 + 2*k1^2*(k2^2 - k3^2) - 7*(k2^2 - k3^2)^2)*
      (b1^2*k2^2*k3^2 + 2*Sqrt[2]*(c2 - c4)*k2^2*k3^2 + 
       b1*k1^2*(6*k2^2 - 3*k3^2) - 2*b1*k2^2*(3*k2^2 + k3^2)) + 
     (-1 + F^2)*f1^2*(512*k1^18 + k1^16*(6*(-64 + 49*b1)*k2^2 + 
         (-1408 + 735*b1)*k3^2) - 15*(k2^2 - k3^2)^7*(6*(128 + 385*b1)*k2^4 - 
         (384 + 2695*b1)*k2^2*k3^2 + 385*b1*k3^4) - 
       8*k1^14*(2*(-516 + 973*b1)*k2^4 + (916 - 3017*b1)*k2^2*k3^2 + 
         9*(-44 + 119*b1)*k3^4) - 28*k1^4*(k2^2 - k3^2)^5*
        ((744 + 4186*b1)*k2^4 - 7*(-96 + 731*b1)*k2^2*k3^2 + 
         3*(-72 + 497*b1)*k3^4) - 24*k1^2*(k2^2 - k3^2)^5*
        (10*(134 + 511*b1)*k2^6 - (1504 + 11445*b1)*k2^4*k3^2 + 
         4*(97 + 1890*b1)*k2^2*k3^4 - 1225*b1*k3^6) - 8*k1^10*(k2^2 - k3^2)*
        ((8532 + 25214*b1)*k2^6 + 3*(-696 + 3605*b1)*k2^4*k3^2 - 
         4*(2873 + 3990*b1)*k2^2*k3^4 + 35*(136 + 105*b1)*k3^6) + 
       4*k1^12*(2*(68 + 4613*b1)*k2^6 + (-12136 + 10969*b1)*k2^4*k3^2 + 
         8*(1917 + 140*b1)*k2^2*k3^4 + 15*(-248 + 147*b1)*k3^6) + 
       8*k1^6*(k2^2 - k3^2)^3*(14*(416 + 1227*b1)*k2^6 - 
         (14764 + 23891*b1)*k2^4*k3^2 + 8*(1537 + 231*b1)*k2^2*k3^4 - 
         (3356 + 735*b1)*k3^6) + 2*k1^8*(k2^2 - k3^2)^2*
        (2*(15728 + 57785*b1)*k2^6 - (63008 + 132895*b1)*k2^4*k3^2 + 
         8*(6884 + 9765*b1)*k2^2*k3^4 - 3*(7712 + 9065*b1)*k3^6)) + 
     112*f1^3*k1^2*(30*k1^14*k3^2 - 945*k1^2*k3^2*(k2^2 - k3^2)^6 + 
       60*(4*k2^2 - 3*k3^2)*(k2^2 - k3^2)^7 - 120*k1^6*(-(k2^2*k3) + k3^3)^2*
        (9*k2^4 - 28*k2^2*k3^2 + 14*k3^4) - 10*k1^12*(8*k2^4 - 29*k2^2*k3^2 + 
         21*k3^4) + 9*k1^10*(11*k2^4*k3^2 - 70*k2^2*k3^4 + 35*k3^6) - 
       10*k1^4*(k2^2 - k3^2)^3*(56*k2^6 + 93*k2^4*k3^2 - 322*k2^2*k3^4 + 
         189*k3^6) + 4*k1^8*(100*k2^8 - 369*k2^6*k3^2 + 579*k2^4*k3^4 - 
         415*k2^2*k3^6 + 105*k3^8)) - 4*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*
      (k1^2 + k2^2 - k3^2)*(-10*b1*(-1 + F^2)*k1^2*k2^2*
        (5*k1^10 + 3*k1^8*(7*k2^2 - 6*k3^2) + 21*k2^2*(k2^2 - k3^2)^3*
          (k2^2 + 2*k3^2) + k1^6*(-10*k2^4 + 17*k2^2*k3^2 - 16*k3^4) - 
         3*k1^2*(k2^2 - k3^2)^2*(9*k2^4 - 31*k2^2*k3^2 + 7*k3^4) + 
         k1^4*(-74*k2^6 + 171*k2^4*k3^2 - 147*k2^2*k3^4 + 50*k3^6)) + 
       f1*(64*k1^14 + k1^12*(208*k2^2 - 371*k3^2) - 
         960*k2^2*(k2^2 - k3^2)^6 + k1^10*(-2576*k2^4 + 3309*k2^2*k3^2 + 
           3*k3^4) - 3*k1^2*(k2^2 - k3^2)^3*(688*k2^6 - 1663*k2^4*k3^2 + 
           772*k2^2*k3^4 + 133*k3^6) + k1^8*(-736*k2^6 + 6758*k2^4*k3^2 - 
           7502*k2^2*k3^4 + 538*k3^6) - k1^4*(k2^2 - k3^2)^2*
          (1072*k2^6 + 5587*k2^4*k3^2 - 720*k2^2*k3^4 + 1111*k3^6) + 
         2*k1^6*(3568*k2^8 - 9293*k2^6*k3^2 + 5556*k2^4*k3^4 - 70*k2^2*k3^6 + 
           239*k3^8))) - 4*(-1 + F^2)^2*f1*k1^2*
      (14*Sqrt[2]*(c2 - c4)*k1^2*k2^2*k3^2*(k1^8*(44*k2^2 - 105*k3^2) + 
         35*(4*k2^2 - 3*k3^2)*(k2^2 - k3^2)^4 - 70*k1^4*(k2^2 - k3^2)^2*
          (4*k2^2 + 9*k3^2) - 20*k1^2*(k2^2 - k3^2)^3*(4*k2^2 + 21*k3^2) - 
         4*k1^6*(4*k2^4 + 101*k2^2*k3^2 - 105*k3^4)) + 
       7*b1^2*k1^2*k3^2*(10*k1^4*(k2^2 - k3^2)^2*(119*k2^4 - 72*k2^2*k3^2 - 
           63*k3^4) + 20*k1^2*(k2^2 - k3^2)^3*(97*k2^4 - 21*k3^4) + 
         5*k1^8*(169*k2^4 - 144*k2^2*k3^2 - 21*k3^4) - 105*(k2^2 - k3^2)^4*
          (3*k2^4 + k3^4) + 4*k1^6*(233*k2^6 - 593*k2^4*k3^2 + 
           255*k2^2*k3^4 + 105*k3^6)) + b1*(16*k1^14*(4*k2^2 + 11*k3^2) + 
         k1^12*(-1720*k2^4 + 2611*k2^2*k3^2 - 5419*k3^4) + 
         672*(k2^2 - k3^2)^5*(9*k2^6 - 11*k2^4*k3^2 + 5*k2^2*k3^4 + k3^6) + 
         7*k1^2*(k2^2 - k3^2)^4*(2112*k2^6 - 2857*k2^4*k3^2 + 
           1218*k2^2*k3^4 + 387*k3^6) + k1^10*(-6624*k2^6 + 2165*k2^4*k3^2 - 
           5906*k2^2*k3^4 + 12897*k3^6) + k1^4*(k2^2 - k3^2)^2*
          (16904*k2^8 - 20481*k2^6*k3^2 + 13019*k2^4*k3^4 - 4771*k2^2*k3^6 - 
           1791*k3^8) - 2*k1^8*(88*k2^8 + 9313*k2^6*k3^2 - 20103*k2^4*k3^4 + 
           6675*k2^2*k3^6 + 4315*k3^8) - 10*k1^6*(1136*k2^10 - 
           2921*k2^8*k3^2 + 472*k2^6*k3^4 + 3394*k2^4*k3^6 - 2008*k2^2*k3^8 - 
           73*k3^10))))*Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(28672*F^12*k1^9*k2^7*k3^6), 
 ((-1 + F^2)*f1*(28*b1^3*(-1 + F^2)^3*k1^6*k2^2*(k1^2 + k2^2)*k3^4*
      (k1^2 + k2^2 - k3^2)^5 - 4*b1^2*(-1 + F^2)^2*k1^2*k2^2*
      (k1^2 + k2^2 - k3^2)^2*(3*(-1 + F^2)*k1^16 - 3*(-1 + F^2)*k1^14*
        (19*k2^2 - 2*k3^2) - 6*(-1 + F^2)*k2^4*(k2^2 - k3^2)^6 + 
       3*k1^12*(51*(-1 + F^2)*k2^4 - 37*(-1 + F^2)*k2^2*k3^2 - 
         2*(-6 + 6*F^2 + 7*f1)*k3^4) - k1^2*(k2^2 - k3^2)^5*
        (3*(-1 + F^2)*k2^4 + 2*(-2 + 2*F^2 + 21*f1)*k3^4) - 
       k1^6*(k2^2 - k3^2)^2*(3*(-1 + F^2)*k2^6 - 18*(-1 + F^2)*k2^4*k3^2 + 
         (31 - 31*F^2 + 420*f1)*k2^2*k3^4 - 420*f1*k3^6) + 
       k1^8*(k2^2 - k3^2)*(15*(-1 + F^2)*k2^6 - 15*(-1 + F^2)*k2^4*k3^2 + 
         39*(-1 + F^2 - 28*f1)*k2^2*k3^4 + 7*(-1 + F^2 + 60*f1)*k3^6) + 
       k1^4*(k2^2 - k3^2)^3*(27*(-1 + F^2)*k2^6 - 6*(-1 + F^2)*k2^4*k3^2 + 
         (19 - 19*F^2 - 210*f1)*k2^2*k3^4 + 2*(-4 + 4*F^2 + 105*f1)*k3^6) + 
       k1^10*(-129*(-1 + F^2)*k2^6 + 339*(-1 + F^2)*k2^4*k3^2 - 
         14*(-17 + 17*F^2 + 63*f1)*k2^2*k3^4 + 2*(-19 + 19*F^2 + 105*f1)*
          k3^6)) - 4*f1*k1^2*(k1^2 + k2^2 - k3^2)^2*
      (56*f1^2*k1^2*k2^2*k3^4*(k1^2 - k2^2 + k3^2)^2*
        (k1^6 + k1^4*(7*k2^2 - 3*k3^2) + (k2^2 - k3^2)^3 + 
         k1^2*(7*k2^4 - 10*k2^2*k3^2 + 3*k3^4)) + 2*Sqrt[2]*(c2 + c4)*
        (-1 + F^2)^2*k3^4*(-k1^14 - k1^4*(10*k2^2 - 21*k3^2)*
          (k2^2 - k3^2)^4 + k3^2*(k2^2 - k3^2)^6 + k1^12*(6*k2^2 + 7*k3^2) + 
         k1^8*(k2^2 - k3^2)^2*(36*k2^2 + 35*k3^2) + k1^6*(k2^2 - k3^2)^2*
          (73*k2^4 + 10*k2^2*k3^2 - 35*k3^4) + k1^10*(29*k2^4 - 21*k3^4) - 
         k1^2*(k2^2 - k3^2)^4*(5*k2^4 - 20*k2^2*k3^2 + 7*k3^4)) + 
       (-1 + F^2)*f1*(-6*k2^2*k3^2*(k2^2 - k3^2)^6*(2*k2^2 - k3^2) + 
         3*k1^16*(2*k2^2 + k3^2) + k1^14*(-18*k2^4 + 9*k2^2*k3^2 - 2*k3^4) + 
         3*k1^2*(k2^2 - k3^2)^5*(6*k2^6 - k2^4*k3^2 + 9*k2^2*k3^4 + 4*k3^6) - 
         k1^12*(18*k2^6 + 441*k2^4*k3^2 - 66*k2^2*k3^4 + 23*k3^6) + 
         k1^6*(k2^2 - k3^2)^2*(234*k2^8 - 57*k2^6*k3^2 - 42*k2^4*k3^4 + 
           259*k2^2*k3^6 - 58*k3^8) + k1^10*(150*k2^8 + 609*k2^6*k3^2 - 
           206*k2^4*k3^4 - 193*k2^2*k3^6 + 40*k3^8) - k1^4*(k2^2 - k3^2)^3*
          (102*k2^8 - 3*k2^6*k3^2 + 79*k2^4*k3^4 - 113*k2^2*k3^6 + 47*k3^8) + 
         k1^8*(-270*k2^10 + 141*k2^8*k3^2 - 198*k2^6*k3^4 + 370*k2^4*k3^6 - 
           48*k2^2*k3^8 + 5*k3^10))) - b1*(-1 + F^2)*
      (8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^6*(k1^4 - (k2^2 - k3^2)^2)^2*
        (k1^8 + 4*k1^6*(k2^2 - k3^2) + 4*k1^2*(k2^2 - k3^2)^3 + 
         (k2^2 - k3^2)^4 + 2*k1^4*(11*k2^4 - 6*k2^2*k3^2 + 3*k3^4)) + 
       7*f1^2*k1^2*k3^4*(19*k1^18 + k1^16*(211*k2^2 - 123*k3^2) - 
         k1^2*(37*k2^2 - 45*k3^2)*(k2^2 - k3^2)^7 - 5*(k2^2 - k3^2)^9 - 
         4*k1^4*(k2^2 - k3^2)^5*(5*k2^4 - 112*k2^2*k3^2 + 39*k3^4) + 
         4*k1^14*(55*k2^4 - 228*k2^2*k3^2 + 81*k3^4) - 2*k1^8*(k2^2 - k3^2)^2*
          (219*k2^6 - 1541*k2^4*k3^2 + 809*k2^2*k3^4 - 63*k3^6) + 
         4*k1^6*(k2^2 - k3^2)^3*(3*k2^6 + 397*k2^4*k3^2 - 367*k2^2*k3^4 + 
           63*k3^6) - 4*k1^12*(449*k2^6 - 13*k2^4*k3^2 - 317*k2^2*k3^4 + 
           105*k3^6) + k1^10*(-2262*k2^8 + 4816*k2^6*k3^2 - 2764*k2^4*k3^4 + 
           210*k3^8)) + (-1 + F^2)*f1*(3*k1^24 - 12*k2^4*(k2^2 - k3^2)^10 - 
         3*k1^22*(13*k2^2 + 5*k3^2) + k1^20*(-315*k2^4 - 414*k2^2*k3^2 + 
           44*k3^4) - 3*k1^2*(k2^2 - k3^2)^8*(19*k2^6 + 9*k2^4*k3^2 - 
           8*k2^2*k3^4 - 4*k3^6) - k1^18*(1005*k2^6 + 3063*k2^4*k3^2 - 
           864*k2^2*k3^4 + 160*k3^6) + k1^6*(k2^2 - k3^2)^5*
          (525*k2^8 - 1794*k2^6*k3^2 + 56*k2^4*k3^4 + 342*k2^2*k3^6 - 
           89*k3^8) - k1^4*(k2^2 - k3^2)^6*(111*k2^8 + 552*k2^6*k3^2 - 
           441*k2^4*k3^4 - 94*k2^2*k3^6 + 64*k3^8) + 
         2*k1^16*(3417*k2^8 - 3888*k2^6*k3^2 + 164*k2^4*k3^4 + 
           982*k2^2*k3^6 + 253*k3^8) - k1^8*(k2^2 - k3^2)^3*
          (441*k2^10 + 2067*k2^8*k3^2 + 2794*k2^6*k3^4 - 2646*k2^4*k3^6 + 
           773*k2^2*k3^8 + 155*k3^10) - 2*k1^10*(k2^2 - k3^2)^2*
          (597*k2^10 - 1035*k2^8*k3^2 + 4407*k2^6*k3^4 - 4951*k2^4*k3^6 + 
           1516*k2^2*k3^8 + 362*k3^10) - 2*k1^14*(5259*k2^10 - 
           9753*k2^8*k3^2 + 10698*k2^6*k3^4 - 9924*k2^4*k3^6 + 
           3223*k2^2*k3^8 + 497*k3^10) + 2*k1^12*(3165*k2^12 - 
           4098*k2^10*k3^2 - 7506*k2^8*k3^4 + 19554*k2^6*k3^6 - 
           14553*k2^4*k3^8 + 2864*k2^2*k3^10 + 574*k3^12))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(14336*F^10*k1^12*k2^8*k3^4) - 
  ((-1 + F^2)*f1*(28*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^4*(k1^2 + k2^2 - k3^2)^5*
      (k1^2 + k3^2) + 2*b1^2*(-1 + F^2)^2*k1^2*k2^2*(k1^2 + k2^2 - k3^2)*
      (7*f1*(k1^18 + (k2^2 - k3^2)^8*(8*k2^2 + k3^2) + 
         k1^16*(-4*k2^2 + 5*k3^2) - 4*k1^4*(k2^2 - k3^2)^5*
          (5*k2^4 - 9*k2^2*k3^2 - 34*k3^4) - 
         4*k1^14*(64*k2^4 - 11*k2^2*k3^2 + 6*k3^4) + k1^2*(k2^2 - k3^2)^6*
          (13*k2^4 + 2*k2^2*k3^2 + 21*k3^4) + 2*k1^8*(k2^2 - k3^2)^2*
          (198*k2^6 - 219*k2^4*k3^2 + 268*k2^2*k3^4 - 183*k3^6) + 
         4*k1^12*(193*k2^6 - 192*k2^4*k3^2 + 3*k2^2*k3^4 - 4*k3^6) - 
         4*k1^6*(k2^2 - k3^2)^3*(22*k2^6 - 31*k2^4*k3^2 - 87*k2^2*k3^4 + 
           80*k3^6) - 2*k1^10*(411*k2^8 - 782*k2^6*k3^2 + 202*k2^4*k3^4 + 
           266*k2^2*k3^6 - 97*k3^8)) + 2*(-1 + F^2)*
        (7*k1^16*(2*k2^2 - 5*k3^2) + 45*k1^2*k2^2*k3^2*(k2^2 - k3^2)^6 + 
         22*k2^2*k3^2*(k2^2 - k3^2)^7 - 2*k1^14*(70*k2^4 + 59*k2^2*k3^2 - 
           49*k3^4) - k1^8*(k2^2 - k3^2)^2*(238*k2^6 - 359*k2^4*k3^2 + 
           240*k2^2*k3^4 - 91*k3^6) + k1^12*(210*k2^6 - 228*k2^4*k3^2 + 
           25*k2^2*k3^4 - 49*k3^6) + k1^4*(k2^2 - k3^2)^4*
          (14*k2^6 - 90*k2^4*k3^2 + 41*k2^2*k3^4 - 7*k3^6) + 
         2*k1^6*(k2^2 - k3^2)^3*(42*k2^6 - 104*k2^4*k3^2 + 27*k2^2*k3^4 + 
           7*k3^6) + k1^10*(56*k2^8 + 85*k2^6*k3^2 - 478*k2^4*k3^4 + 
           421*k2^2*k3^6 - 84*k3^8))) + 
     4*f1*k1^2*(56*f1^2*k1^2*k2^6*(k1^2 + k2^2 - k3^2)^2*
        (k1^2 - k2^2 + k3^2)^3*(k1^4 - 2*k1^2*(k2^2 - 3*k3^2) + 
         (k2^2 - k3^2)^2) + (-1 + F^2)*f1*(k1^2 + k2^2 - k3^2)^2*
        (3*k1^16*(2*k2^2 + k3^2) + k1^14*(-12*k2^4 + 16*k2^2*k3^2 - 
           15*k3^4) + 2*(k2^2 - k3^2)^6*(4*k2^6 + 12*k2^4*k3^2 - 
           2*k2^2*k3^4 - 3*k3^6) + k1^12*(10*k2^6 - 383*k2^4*k3^2 - 
           64*k2^2*k3^4 + 21*k3^6) - k1^2*(k2^2 - k3^2)^5*
          (80*k2^6 - 50*k2^4*k3^2 + 17*k2^2*k3^4 + 39*k3^6) - 
         k1^6*(k2^2 - k3^2)^2*(396*k2^8 - 148*k2^6*k3^2 - 99*k2^4*k3^4 + 
           334*k2^2*k3^6 - 147*k3^8) + k1^10*(-88*k2^8 + 322*k2^6*k3^2 + 
           219*k2^4*k3^4 - 74*k2^2*k3^6 + 21*k3^8) + k1^4*(k2^2 - k3^2)^3*
          (262*k2^8 - 55*k2^6*k3^2 - 63*k2^4*k3^4 - 137*k2^2*k3^6 + 
           105*k3^8) + k1^8*(290*k2^10 - 483*k2^8*k3^2 + 532*k2^6*k3^4 - 
           672*k2^4*k3^6 + 438*k2^2*k3^8 - 105*k3^10)) + 
       4*(-1 + F^2)^2*k2^2*((7*(c2 - c4)*k1^2*k3^2*(k1^14*(k2^2 - k3^2) + 
            (k2^2 - k3^2)^8 + k1^2*(k2^2 - k3^2)^6*(3*k2^2 + k3^2) + 
            k1^4*(k2^2 - k3^2)^5*(k2^2 + 19*k3^2) + k1^8*(k2^2 - k3^2)^2*
             (171*k2^4 + 50*k2^2*k3^2 - 45*k3^4) + 
            k1^12*(83*k2^4 - 2*k2^2*k3^2 - k3^4) - k1^6*(k2^2 - k3^2)^3*
             (53*k2^4 - 50*k2^2*k3^2 + 45*k3^4) + k1^10*(-207*k2^6 + 
              225*k2^4*k3^2 - 37*k2^2*k3^4 + 19*k3^6)))/Sqrt[2] + 
         ((c2 + c4)*(k2^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^8 + 
            k1^18*(3*k2^2 - k3^2) + 3*k1^16*(41*k2^4 + k2^2*k3^2 - k3^4) + 
            k1^8*(k2^2 - k3^2)^3*(186*k2^6 - 527*k2^4*k3^2 + 300*k2^2*k3^4 - 
              231*k3^6) + k1^6*(k2^2 - k3^2)^4*(36*k2^6 + 73*k2^4*k3^2 + 
              24*k2^2*k3^4 - 77*k3^6) - k1^4*(k2^2 - k3^2)^5*
             (68*k2^6 - 123*k2^4*k3^2 + 84*k2^2*k3^4 - 13*k3^6) - 
            k1^14*(508*k2^6 - 947*k2^4*k3^2 + 24*k2^2*k3^4 + 7*k3^6) + 
            k1^2*(k2^2 - k3^2)^6*(19*k2^6 + 6*k2^4*k3^2 - 27*k2^2*k3^4 + 
              10*k3^6) - k1^10*(k2^2 - k3^2)^2*(574*k2^6 - 1029*k2^4*k3^2 - 
              342*k2^2*k3^4 + 245*k3^6) + k1^12*(780*k2^8 - 2299*k2^6*k3^2 + 
              1627*k2^4*k3^4 - 213*k2^2*k3^6 + 105*k3^8)))/Sqrt[2])) + 
     b1*(-1 + F^2)*(7*f1^2*k1^2*k2^2*(9*k1^18*k3^2 + 
         25*k3^2*(k2^2 - k3^2)^9 + k1^16*(96*k2^4 + 17*k2^2*k3^2 - 25*k3^4) - 
         k1^2*(k2^2 - k3^2)^7*(32*k2^4 - 161*k2^2*k3^2 + 89*k3^4) + 
         4*k1^4*(k2^2 - k3^2)^5*(8*k2^6 + 21*k2^4*k3^2 - 92*k2^2*k3^4 - 
           5*k3^6) - 4*k1^14*(88*k2^6 + 387*k2^4*k3^2 - 48*k2^2*k3^4 + 
           25*k3^6) - 2*k1^8*(k2^2 - k3^2)^2*(240*k2^8 - 367*k2^6*k3^2 + 
           57*k2^4*k3^4 + 1259*k2^2*k3^6 - 613*k3^8) + 4*k1^6*(k2^2 - k3^2)^3*
          (56*k2^8 + 89*k2^6*k3^2 - 189*k2^4*k3^4 - 197*k2^2*k3^6 + 
           145*k3^8) + 4*k1^12*(88*k2^8 - 159*k2^6*k3^2 + 535*k2^4*k3^4 - 
           389*k2^2*k3^6 + 149*k3^8) + 2*k1^10*(80*k2^10 + 223*k2^8*k3^2 + 
           208*k2^6*k3^4 - 1946*k2^4*k3^6 + 2040*k2^2*k3^8 - 605*k3^10)) + 
       (-1 + F^2)*f1*(6*k1^24 + 4*k2^2*(k2^2 - k3^2)^10*(12*k2^2 - k3^2) - 
         4*k1^22*(k2^2 + 9*k3^2) + k1^20*(-602*k2^4 - 251*k2^2*k3^2 + 
           66*k3^4) + k1^2*(k2^2 - k3^2)^8*(192*k2^6 + 29*k2^4*k3^2 - 
           33*k2^2*k3^4 - 12*k3^6) + k1^18*(-6992*k2^6 - 743*k2^4*k3^2 + 
           759*k2^2*k3^4 + 36*k3^6) + 4*k1^16*(6447*k2^8 - 7425*k2^6*k3^2 + 
           611*k2^4*k3^4 - 48*k2^2*k3^6 - 81*k3^8) + 4*k1^6*(k2^2 - k3^2)^5*
          (7*k2^8 + 230*k2^6*k3^2 + 255*k2^4*k3^4 - 321*k2^2*k3^6 + 
           69*k3^8) + k1^4*(k2^2 - k3^2)^6*(158*k2^8 + 869*k2^6*k3^2 - 
           166*k2^4*k3^4 - 247*k2^2*k3^6 + 90*k3^8) - 
         4*k1^14*(8046*k2^10 - 15280*k2^8*k3^2 + 7337*k2^6*k3^4 - 
           376*k2^4*k3^6 + 399*k2^2*k3^8 - 126*k3^10) - 
         2*k1^10*(k2^2 - k3^2)^2*(2024*k2^10 - 5569*k2^8*k3^2 + 
           2569*k2^6*k3^4 + 477*k2^4*k3^6 - 505*k2^2*k3^8 + 108*k3^10) - 
         2*k1^8*(k2^2 - k3^2)^3*(473*k2^10 - 2621*k2^8*k3^2 - 552*k2^6*k3^4 + 
           1906*k2^4*k3^6 - 1205*k2^2*k3^8 + 207*k3^10) + 
         2*k1^12*(9278*k2^12 - 28207*k2^10*k3^2 + 26760*k2^8*k3^4 - 
           6380*k2^6*k3^6 - 2104*k2^4*k3^8 + 779*k2^2*k3^10 - 126*k3^12)) - 
       8*(-1 + F^2)^2*k1^2*k2^2*(k1^2 + k2^2 - k3^2)^2*
        (-7*Sqrt[2]*(c2 - c4)*k1^6*k3^4*(k1^2 + k2^2 - k3^2)^3 + 
         ((c2 + c4)*(k1^14*(2*k2^2 - 5*k3^2) - 2*k1^2*k2^2*(k2^2 - k3^2)^6 - 
            2*k2^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^6 - 
            k1^12*(42*k2^4 + 9*k2^2*k3^2 + k3^4) + 2*k1^10*
             (61*k2^6 - 45*k2^4*k3^2 - 28*k2^2*k3^4 + 16*k3^6) + 
            k1^4*(k2^2 - k3^2)^2*(34*k2^8 - 101*k2^6*k3^2 + 45*k2^4*k3^4 - 
              11*k2^2*k3^6 + k3^8) - 2*k1^8*(57*k2^8 - 117*k2^6*k3^2 + 
              119*k2^4*k3^4 - 63*k2^2*k3^6 + 20*k3^8) + 
            k1^6*(6*k2^10 + 51*k2^8*k3^2 - 82*k2^6*k3^4 + 64*k2^4*k3^6 - 
              52*k2^2*k3^8 + 13*k3^10)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(14336*F^10*k1^12*k2^6*k3^6) + 
  ((-1 + F^2)*f1*(-28*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^4*(k1^2 + k2^2 - k3^2)^5*
      (k2^2 + k3^2) - 2*b1^2*(-1 + F^2)^2*k1^2*k2^2*
      (7*f1*(k1^18*(3*k2^2 - 4*k3^2) - 21*k1^2*k2^2*(k2^2 - k3^2)^8 - 
         9*k2^2*(k2^2 - k3^2)^9 - 4*k1^4*(k2^2 - k3^2)^6*
          (k2^4 + 8*k2^2*k3^2 + 3*k3^4) + 3*k1^16*(5*k2^4 - 9*k2^2*k3^2 + 
           4*k3^4) - 2*k1^8*(k2^2 - k3^2)^3*(839*k2^6 - 268*k2^4*k3^2 - 
           45*k2^2*k3^4 - 78*k3^6) + 4*k1^14*(175*k2^6 + 105*k2^4*k3^2 + 
           117*k2^2*k3^4 + 3*k3^6) + 4*k1^6*(k2^2 - k3^2)^4*
          (107*k2^6 - 65*k2^4*k3^2 - 11*k2^2*k3^4 + 17*k3^6) + 
         2*k1^10*(k2^2 - k3^2)^2*(1493*k2^6 - 96*k2^4*k3^2 + 433*k2^2*k3^4 + 
           90*k3^6) - 4*k1^12*(605*k2^8 - 484*k2^6*k3^2 - 406*k2^4*k3^4 + 
           260*k2^2*k3^6 + 25*k3^8)) - 2*(-1 + F^2)*k1^2*
        (k1^2 + k2^2 - k3^2)^2*(7*k1^12*k3^2 + 14*k2^2*(k2^2 - k3^2)^6 + 
         14*k1^2*k2^2*(k2^2 - k3^2)^3*(5*k2^4 + k3^4) + 
         2*k1^10*(7*k2^4 - 148*k2^2*k3^2 + 7*k3^4) - 7*k1^4*(k2^2 - k3^2)^2*
          (44*k2^6 - 27*k2^4*k3^2 + 6*k2^2*k3^4 + 5*k3^6) - 
         2*k1^8*(77*k2^6 - 268*k2^4*k3^2 + 219*k2^2*k3^4 + 42*k3^6) + 
         k1^6*(364*k2^8 - 758*k2^6*k3^2 + 998*k2^4*k3^4 - 702*k2^2*k3^6 + 
           98*k3^8))) - b1*(-1 + F^2)*(56*Sqrt[2]*(c2 - c4)*(-1 + F^2)^2*k1^6*
        k2^4*k3^4*(k1^2 + k2^2 - k3^2)^5 + (-1 + F^2)*f1*
        (k1^22*(18*k2^2 - 23*k3^2) - 28*k2^2*(k2^2 - k3^2)^10*
          (2*k2^2 + k3^2) + k1^20*(252*k2^4 + 33*k2^2*k3^2 + 163*k3^4) + 
         k1^18*(6642*k2^6 + 4608*k2^4*k3^2 + 2582*k2^2*k3^4 - 488*k3^6) - 
         2*k1^2*(k2^2 - k3^2)^8*(115*k2^6 - 20*k2^4*k3^2 - 77*k2^2*k3^4 + 
           6*k3^6) - 2*k1^12*(k2^2 - k3^2)^2*(1676*k2^8 - 3237*k2^6*k3^2 - 
           2599*k2^4*k3^4 + 4821*k2^2*k3^6 - 245*k3^8) - 
         4*k1^16*(4898*k2^8 - 5125*k2^6*k3^2 - 1031*k2^4*k3^4 + 
           2753*k2^2*k3^6 - 199*k3^8) - 4*k1^10*(k2^2 - k3^2)^3*
          (531*k2^8 + 477*k2^6*k3^2 + 524*k2^4*k3^4 + 273*k2^2*k3^6 - 
           77*k3^8) - k1^4*(k2^2 - k3^2)^6*(196*k2^8 + 251*k2^6*k3^2 - 
           541*k2^4*k3^4 + 361*k2^2*k3^6 - 75*k3^8) + 4*k1^8*(k2^2 - k3^2)^4*
          (104*k2^8 - 952*k2^6*k3^2 + 263*k2^4*k3^4 + 214*k2^2*k3^6 + 
           67*k3^8) + k1^6*(k2^2 - k3^2)^5*(906*k2^8 - 1537*k2^6*k3^2 + 
           1459*k2^4*k3^4 - 123*k2^2*k3^6 + 191*k3^8) + 
         2*k1^14*(8658*k2^10 - 17279*k2^8*k3^2 + 15466*k2^6*k3^4 - 
           14816*k2^4*k3^6 + 8356*k2^2*k3^8 - 385*k3^10)) - 
       7*f1^2*k1^2*(-((k2^2 - k3^2)^9*(8*k2^4 - 23*k2^2*k3^2 + 5*k3^4)) + 
         k1^18*(24*k2^4 + 23*k2^2*k3^2 + 19*k3^4) - k1^2*(k2^2 - k3^2)^8*
          (8*k2^4 - 95*k2^2*k3^2 + 45*k3^4) + 
         k1^16*(-40*k2^6 + 39*k2^4*k3^2 + 124*k2^2*k3^4 - 123*k3^6) + 
         4*k1^6*k3^2*(k2^2 - k3^2)^4*(47*k2^6 - 169*k2^4*k3^2 + 
           217*k2^2*k3^4 - 63*k3^6) + 4*k1^4*(k2^2 - k3^2)^6*
          (16*k2^6 + 43*k2^4*k3^2 - 94*k2^2*k3^4 + 39*k3^6) - 
         4*k1^14*(16*k2^8 + 669*k2^6*k3^2 + k2^4*k3^4 + 227*k2^2*k3^6 - 
           81*k3^8) - 2*k1^8*(k2^2 - k3^2)^3*(72*k2^8 + 159*k2^6*k3^2 + 
           281*k2^4*k3^4 - 255*k2^2*k3^6 + 63*k3^8) + 2*k1^10*(k2^2 - k3^2)^2*
          (24*k2^8 + 1201*k2^6*k3^2 - 305*k2^4*k3^4 - 321*k2^2*k3^6 + 
           105*k3^8) + 4*k1^12*(32*k2^10 - 9*k2^8*k3^2 - 136*k2^6*k3^4 - 
           222*k2^4*k3^6 + 440*k2^2*k3^8 - 105*k3^10))) + 
     4*f1*(k1^2 + k2^2 - k3^2)^2*(28*f1^2*k1^4*k2^2*(k1^2 - k2^2 + k3^2)^3*
        (-(k1^2*(k2^2 - 3*k3^2)*(k2^2 - k3^2)^2) + k1^6*(k2^2 + k3^2) + 
         (k2^2 - k3^2)^3*(k2^2 + k3^2) - k1^4*(k2^4 - 4*k2^2*k3^2 + 
           3*k3^4)) + (7*(c2 - c4)*(-1 + F^2)^2*k2^2*k3^2*
         (k1^16 + k1^14*(k2^2 - k3^2) + k1^4*(k2^2 - k3^2)^6 - 
          5*k1^2*(k2^2 - k3^2)^7 - 2*(k2^2 - k3^2)^8 - k1^8*(k2^2 - k3^2)^2*
           (75*k2^4 + 26*k2^2*k3^2 - 5*k3^4) - 
          k1^12*(53*k2^4 + 38*k2^2*k3^2 + 5*k3^4) + k1^6*(k2^2 - k3^2)^3*
           (27*k2^4 - 6*k2^2*k3^2 + 11*k3^4) + 
          k1^10*(105*k2^6 - 171*k2^4*k3^2 + 59*k2^2*k3^4 + 7*k3^6)))/
        Sqrt[2] + (-1 + F^2)*f1*k1^2*(6*k2^2*k3^2*(3*k2^2 - 2*k3^2)*
          (k2^2 - k3^2)^6 + 4*k1^16*(4*k2^2 + k3^2) + 
         k1^14*(-66*k2^4 + k2^2*k3^2 - 5*k3^4) + 
         2*k1^12*(58*k2^6 - 412*k2^4*k3^2 + 18*k2^2*k3^4 - 13*k3^6) - 
         k1^2*(k2^2 - k3^2)^5*(26*k2^6 - 35*k2^4*k3^2 + 30*k2^2*k3^4 - 
           9*k3^6) + 2*k1^4*(k2^2 - k3^2)^4*(58*k2^6 + 14*k2^4*k3^2 - 
           42*k2^2*k3^4 + 15*k3^6) - k1^6*(k2^2 - k3^2)^2*
          (206*k2^8 - 187*k2^6*k3^2 + 39*k2^4*k3^4 - 109*k2^2*k3^6 + 
           19*k3^8) + k1^10*(-150*k2^8 + 1027*k2^6*k3^2 - 463*k2^4*k3^4 - 
           223*k2^2*k3^6 + 65*k3^8) + 2*k1^8*(100*k2^10 - 277*k2^8*k3^2 + 
           184*k2^6*k3^4 - 69*k2^4*k3^6 + 82*k2^2*k3^8 - 20*k3^10))) + 
     2*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*(k1^2 + k2^2 - k3^2)^2*
      (2*b1*(-1 + F^2)*k1^4*(k1^14*(4*k2^2 - 2*k3^2) - 
         4*k2^4*(k2^2 - k3^2)^6 + k1^12*(-52*k2^4 - 5*k2^2*k3^2 + 4*k3^4) + 
         k1^10*(140*k2^6 - 71*k2^4*k3^2 - 31*k2^2*k3^4 + 2*k3^6) - 
         k1^2*(k2^2 - k3^2)^3*(12*k2^8 - k2^6*k3^2 + 6*k2^4*k3^4 + 
           7*k2^2*k3^6 - 2*k3^8) - 2*k1^8*(62*k2^8 - 121*k2^6*k3^2 + 
           85*k2^4*k3^4 - 35*k2^2*k3^6 + 4*k3^8) + k1^4*(k2^2 - k3^2)^2*
          (52*k2^8 - 61*k2^6*k3^2 + 12*k2^4*k3^4 - 9*k2^2*k3^6 + 4*k3^8) - 
         2*k1^6*(2*k2^10 - 2*k2^8*k3^2 + 62*k2^6*k3^4 - 78*k2^4*k3^6 + 
           17*k2^2*k3^8 - k3^10)) + f1*(k1^20 - 4*k2^2*(k2^2 - k3^2)^8*
          (k2^2 + 3*k3^2) - k1^18*(19*k2^2 + 4*k3^2) - 
         k1^2*k2^2*(k2^2 - k3^2)^7*(3*k2^2 + 34*k3^2) - 
         k1^16*(80*k2^4 + 113*k2^2*k3^2) + k1^4*(k2^2 - k3^2)^6*
          (25*k2^4 - k2^2*k3^2 - 3*k3^4) + k1^14*(476*k2^6 - 291*k2^4*k3^2 + 
           267*k2^2*k3^4 + 28*k3^6) - k1^6*(k2^2 - k3^2)^3*
          (4*k2^8 - 179*k2^6*k3^2 + 30*k2^4*k3^4 - 99*k2^2*k3^6 + 20*k3^8) - 
         k1^8*(k2^2 - k3^2)^2*(180*k2^8 + 503*k2^6*k3^2 + 94*k2^4*k3^4 - 
           161*k2^2*k3^6 + 56*k3^8) - k1^12*(786*k2^8 - 771*k2^6*k3^2 + 
           550*k2^4*k3^4 + 37*k2^2*k3^6 + 70*k3^8) + 
         k1^10*(574*k2^10 - 267*k2^8*k3^2 - 1047*k2^6*k3^4 + 907*k2^4*k3^6 - 
           251*k2^2*k3^8 + 84*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(14336*F^10*k1^10*k2^8*k3^6), 
 ((-1 + F^2)^2*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (b1^2*(-1 + F^2)^2*k1^4*(k1^2 + k2^2 - k3^2)^3*(9*(-1 + F^2)*k1^8*k2^2 - 
       3*k1^6*(52*(-1 + F^2)*k2^4 - 54*(-1 + F^2)*k2^2*k3^2 + 147*f1*k3^4) + 
       21*(k2^3 - k2*k3^2)^2*(9*(-1 + F^2)*k2^4 - 2*(-2 + 2*F^2 + 21*f1)*
          k3^4) + k1^4*(90*(-1 + F^2)*k2^6 - 270*(-1 + F^2)*k2^4*k3^2 + 
         (-185 + 185*F^2 - 3444*f1)*k2^2*k3^4 + 882*f1*k3^6) - 
       3*k1^2*(12*(-1 + F^2)*k2^8 + 30*(-1 + F^2)*k2^6*k3^2 + 
         (66 - 66*F^2 + 1015*f1)*k2^4*k3^4 + 6*(-4 + 4*F^2 - 147*f1)*k2^2*
          k3^6 + 147*f1*k3^8)) + b1*(-1 + F^2)*f1*(24*(-1 + F^2)*k1^20 + 
       3*(-1 + F^2)*k1^18*(136*k2^2 - 339*k3^2) - 540*(-1 + F^2)*k2^4*
        (k2^2 - k3^2)^8 + k1^16*(1872*(-1 + F^2)*k2^4 - 2619*(-1 + F^2)*k2^2*
          k3^2 + 4*(-278 + 278*F^2 + 567*f1)*k3^4) - 12*k1^2*(k2^2 - k3^2)^6*
        (247*(-1 + F^2)*k2^6 - 135*(-1 + F^2)*k2^4*k3^2 + 
         3*(-12 + 12*F^2 + 35*f1)*k2^2*k3^4 - 3*(-12 + 12*F^2 + 35*f1)*
          k3^6) - k1^14*(4788*(-1 + F^2)*k2^6 - 10683*(-1 + F^2)*k2^4*k3^2 + 
         4*(-2578 + 2578*F^2 + 2065*f1)*k2^2*k3^4 + 
         15*(397 - 397*F^2 + 588*f1)*k3^6) + k1^10*(k2^2 - k3^2)*
        (5196*(-1 + F^2)*k2^8 - 51*(-1 + F^2)*k2^6*k3^2 + 
         (26231 - 26231*F^2 - 87780*f1)*k2^4*k3^4 + 
         (-21979 + 21979*F^2 + 110040*f1)*k2^2*k3^6 + 
         (10541 - 10541*F^2 - 8820*f1)*k3^8) + k1^6*(k2^2 - k3^2)^3*
        (3684*(-1 + F^2)*k2^8 - 8163*(-1 + F^2)*k2^6*k3^2 + 
         (5909 - 5909*F^2 - 45612*f1)*k2^4*k3^4 + 3*(33 - 33*F^2 + 25088*f1)*
          k2^2*k3^6 + 3*(-269 + 269*F^2 - 7644*f1)*k3^8) - 
       k1^4*(k2^2 - k3^2)^4*(3492*(-1 + F^2)*k2^8 - 2151*(-1 + F^2)*k2^6*
          k3^2 + 4*(-457 + 457*F^2 + 3675*f1)*k2^4*k3^4 - 
         7*(-347 + 347*F^2 + 3360*f1)*k2^2*k3^6 + 140*(-5 + 5*F^2 + 63*f1)*
          k3^8) + k1^12*(-7428*(-1 + F^2)*k2^8 + 29997*(-1 + F^2)*k2^6*k3^2 - 
         28*(-1706 + 1706*F^2 + 1935*f1)*k2^4*k3^4 + 
         9*(-4211 + 4211*F^2 + 5040*f1)*k2^2*k3^6 + 
         12*(1201 - 1201*F^2 + 735*f1)*k3^8) + k1^8*(k2^2 - k3^2)^2*
        (8028*(-1 + F^2)*k2^8 - 11025*(-1 + F^2)*k2^6*k3^2 - 
         2*(-6107 + 6107*F^2 + 38150*f1)*k2^4*k3^4 + 
         (-163 + 163*F^2 + 122920*f1)*k2^2*k3^6 - 12*(-94 + 94*F^2 + 2205*f1)*
          k3^8)) + 4*f1*(7*f1^2*k1^2*k3^4*(18*k1^14 + 16*k1^12*k2^2 - 
         45*(k2^2 - k3^2)^7 + 21*k1^2*(k2^2 - k3^2)^5*(k2^2 + 15*k3^2) - 
         15*k1^10*(45*k2^4 - 58*k2^2*k3^2 + 21*k3^4) - 
         20*k1^6*(k2^2 - k3^2)^2*(37*k2^4 - 118*k2^2*k3^2 + 63*k3^4) - 
         6*k1^4*(k2^2 - k3^2)^3*(7*k2^4 - 174*k2^2*k3^2 + 147*k3^4) - 
         15*k1^8*(87*k2^6 - 245*k2^4*k3^2 + 221*k2^2*k3^4 - 63*k3^6)) + 
       4*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^4*(k1^2 + k2^2 - k3^2)^2*
        (13*k1^10 + 4*k1^8*(10*k2^2 - 9*k3^2) + 28*k3^2*(k2^2 - k3^2)^4 + 
         k1^6*(44*k2^4 - 78*k2^2*k3^2 + 32*k3^4) - k1^2*(k2^2 - k3^2)^2*
          (29*k2^4 - 116*k2^2*k3^2 + 57*k3^4) + 
         4*k1^4*(9*k2^6 - 18*k2^4*k3^2 + 4*k2^2*k3^4 + 5*k3^6)) - 
       (-1 + F^2)*f1*(6*k1^20 + k1^18*(33*k2^2 - 36*k3^2) + 
         135*k2^4*(k2^2 - k3^2)^8 + k1^16*(-288*k2^4 + 636*k2^2*k3^2 + 
           2*k3^4) + 3*k1^2*(k2^2 - k3^2)^6*(90*k2^6 + 179*k2^4*k3^2 - 
           121*k2^2*k3^4 - 36*k3^6) + k1^14*(459*k2^6 - 795*k2^4*k3^2 + 
           164*k2^2*k3^4 + 48*k3^6) - k1^4*(k2^2 - k3^2)^5*
          (267*k2^6 - 2955*k2^4*k3^2 - 224*k2^2*k3^4 + 812*k3^6) - 
         k1^6*(k2^2 - k3^2)^3*(639*k2^8 - 4950*k2^6*k3^2 + 491*k2^4*k3^4 + 
           5052*k2^2*k3^6 - 2352*k3^8) + k1^12*(321*k2^8 - 4662*k2^6*k3^2 + 
           7555*k2^4*k3^4 - 4452*k2^2*k3^6 + 678*k3^8) + 
         k1^8*(k2^2 - k3^2)^2*(861*k2^8 + 330*k2^6*k3^2 + 3971*k2^4*k3^4 - 
           7856*k2^2*k3^6 + 3366*k3^8) - k1^10*(891*k2^10 + 825*k2^8*k3^2 - 
           8581*k2^6*k3^4 + 14547*k2^4*k3^6 - 10098*k2^2*k3^8 + 
           2416*k3^10))))*Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(14336*F^12*k1^12*k2^8*k3^4) + 
  ((-1 + F^2)^2*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (14*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^2*(k1^2 + k2^2 - k3^2)^3*
      (k1^4 - 18*k1^2*(k2^2 - k3^2) + 21*(k2^2 - k3^2)^2) - 
     14*b1^2*(-1 + F^2)^2*k1^2*k2^2*(k1^2 + k2^2 - k3^2)^3*
      (6*(-1 + F^2)*k1^10 - 648*f1*k3^2*(k2^2 - k3^2)^4 + 
       k1^8*(-114*(-1 + F^2)*k2^2 + (-110 + 110*F^2 + 433*f1)*k3^2) - 
       k1^2*((63 - 63*F^2 + 128*f1)*k2^2 + 250*f1*k3^2)*
        (-(k2^2*k3) + k3^3)^2 + 3*k1^6*(78*(-1 + F^2)*k2^4 + 
         (131 - 131*F^2 + 118*f1)*k2^2*k3^2 + 2*(-27 + 27*F^2 - 122*f1)*
          k3^4) - 3*k1^4*(42*(-1 + F^2)*k2^6 + (80 - 80*F^2 - 27*f1)*k2^4*
          k3^2 + 2*(-26 + 26*F^2 + 153*f1)*k2^2*k3^4 + (14 - 14*F^2 - 239*f1)*
          k3^6)) + b1*(-1 + F^2)*
      (7*f1^2*k2^2*(-117*k1^18 + 9*k1^2*(555*k2^2 - 211*k3^2)*
          (k2^2 - k3^2)^7 + 1375*(k2^2 - k3^2)^9 + 
         k1^16*(-489*k2^2 + 409*k3^2) + 28*k1^4*(k2^2 - k3^2)^5*
          (105*k2^4 + 220*k2^2*k3^2 - 121*k3^4) + 
         4*k1^14*(211*k2^4 - 990*k2^2*k3^2 + 943*k3^4) - 
         12*k1^6*(k2^2 - k3^2)^3*(627*k2^6 - 3141*k2^4*k3^2 + 
           2741*k2^2*k3^4 - 67*k3^6) - 4*k1^12*(1645*k2^6 + 2215*k2^4*k3^2 - 
           8697*k2^2*k3^4 + 4901*k3^6) - 2*k1^8*(k2^2 - k3^2)^2*
          (4511*k2^6 - 17117*k2^4*k3^2 + 2893*k2^2*k3^4 + 10289*k3^6) + 
         2*k1^10*(6789*k2^8 - 15032*k2^6*k3^2 + 27738*k2^4*k3^4 - 
           36000*k2^2*k3^6 + 16505*k3^8)) + 2*(-1 + F^2)*f1*
        (12*k1^20 + k1^18*(552*k2^2 - 855*k3^2) + 180*k2^2*(k2^2 - k3^2)^8*
          (12*k2^2 - k3^2) + 4*k1^2*k2^2*(k2^2 - k3^2)^6*
          (1512*k2^4 - 415*k2^2*k3^2 + 135*k3^4) + 
         k1^16*(1928*k2^4 - 6108*k2^2*k3^2 + 3717*k3^4) + 
         k1^14*(1920*k2^6 - 2107*k2^4*k3^2 + 9420*k2^2*k3^4 - 6531*k3^6) - 
         k1^6*(k2^2 - k3^2)^3*(336*k2^8 + 11849*k2^6*k3^2 - 42153*k2^4*k3^4 + 
           20385*k2^2*k3^6 - 1377*k3^8) + k1^4*(k2^2 - k3^2)^4*
          (5468*k2^8 - 2040*k2^6*k3^2 + 8289*k2^4*k3^4 - 6788*k2^2*k3^6 + 
           351*k3^8) + k1^8*(k2^2 - k3^2)^2*(2680*k2^8 - 26472*k2^6*k3^2 + 
           54995*k2^4*k3^4 - 21282*k2^2*k3^6 + 2415*k3^8) + 
         k1^12*(-8664*k2^8 + 22672*k2^6*k3^2 - 14649*k2^4*k3^4 - 
           3120*k2^2*k3^6 + 5985*k3^8) - k1^10*(11768*k2^10 - 
           24679*k2^8*k3^2 + 3924*k2^6*k3^4 + 13954*k2^4*k3^6 - 
           8684*k2^2*k3^8 + 3717*k3^10)) + 8*(-1 + F^2)^2*k1^4*k2^2*
        (k1^2 + k2^2 - k3^2)^3*(k1^4 - 18*k1^2*(k2^2 - k3^2) + 
         21*(k2^2 - k3^2)^2)*((7*(c2 - c4)*k1^2*k3^2)/Sqrt[2] + 
         ((c2 + c4)*(3*k1^4 - 5*k2^4 + 3*k2^2*k3^2 - 6*k1^2*(k2^2 - k3^2)))/
          Sqrt[2])) - 8*f1*(-7*f1^2*k1^2*k2^2*(225*k3^2*(k2^2 - k3^2)^7 - 
         21*k1^2*(k2^2 - k3^2)^5*(16*k2^4 - 43*k2^2*k3^2 + 43*k3^4) + 
         2*k1^12*(8*k2^4 - 51*k2^2*k3^2 + 51*k3^4) + 
         3*k1^10*(80*k2^6 - 143*k2^4*k3^2 + 270*k2^2*k3^4 - 135*k3^6) - 
         10*k1^6*(k2^2 - k3^2)^2*(16*k2^6 - 31*k2^4*k3^2 + 102*k2^2*k3^4 - 
           51*k3^6) + 60*k1^4*(k2^2 - k3^2)^3*(12*k2^6 + 7*k2^4*k3^2 - 
           42*k2^2*k3^4 + 21*k3^6) - 15*k1^8*(32*k2^8 - 63*k2^6*k3^2 - 
           19*k2^4*k3^4 + 75*k2^2*k3^6 - 25*k3^8)) + 
       (-1 + F^2)*f1*(3*k1^20 + k1^18*(70*k2^2 - 75*k3^2) - 
         45*k2^2*(k2^2 - k3^2)^8*(12*k2^2 - k3^2) - 
         2*k1^16*(95*k2^4 + 69*k2^2*k3^2 - 120*k3^4) - k1^2*(k2^2 - k3^2)^6*
          (1870*k2^6 + 12*k2^4*k3^2 - 449*k2^2*k3^4 - 201*k3^6) + 
         k1^14*(776*k2^6 - 369*k2^4*k3^2 - 643*k2^2*k3^4 + 168*k3^6) + 
         k1^4*(k2^2 - k3^2)^5*(269*k2^6 - 5822*k2^4*k3^2 + 2100*k2^2*k3^4 + 
           1353*k3^6) + k1^8*(k2^2 - k3^2)^2*(1122*k2^8 - 8679*k2^6*k3^2 + 
           5800*k2^4*k3^4 + 6965*k2^2*k3^6 - 5880*k3^8) + 
         k1^6*(k2^2 - k3^2)^3*(2960*k2^8 - 15791*k2^6*k3^2 + 
           14202*k2^4*k3^4 + 1349*k2^2*k3^6 - 3840*k3^8) + 
         k1^12*(-24*k2^8 + 1879*k2^6*k3^2 - 4668*k2^4*k3^4 + 5599*k2^2*k3^6 - 
           2226*k3^8) + k1^10*(-2576*k2^10 + 8451*k2^8*k3^2 - 
           12699*k2^6*k3^4 + 16439*k2^4*k3^6 - 14697*k2^2*k3^8 + 
           5082*k3^10)) + 4*(-1 + F^2)^2*k1^2*k2^2*
        ((-7*(c2 - c4)*k1^2*k3^2*(k1^2 + k2^2 - k3^2)^3*
           (3*k1^6 - 6*k1^4*(k2^2 - 6*k3^2) - 21*k1^2*(k2^2 - k3^2)^2 + 
            28*(k2^2 - k3^2)^3))/Sqrt[2] + 
         ((c2 + c4)*(k1^14*(10*k2^2 - 33*k3^2) - 56*k2^2*(3*k2^2 - 2*k3^2)*
             (k2^2 - k3^2)^6 + k1^12*(108*k2^4 + 25*k2^2*k3^2 - 147*k3^4) + 
            k1^4*(k2^2 - k3^2)^3*(380*k2^6 - 1243*k2^4*k3^2 + 
              1386*k2^2*k3^4 - 483*k3^6) + k1^6*(k2^2 - k3^2)^2*
             (742*k2^6 - 1121*k2^4*k3^2 + 490*k2^2*k3^4 - 15*k3^6) - 
            2*k1^2*(k2^2 - k3^2)^4*(151*k2^6 - 41*k2^4*k3^2 - 179*k2^2*k3^4 + 
              99*k3^6) + k1^10*(-322*k2^6 + 884*k2^4*k3^2 - 1332*k2^2*k3^4 + 
              750*k3^6) - 2*k1^8*(224*k2^8 - 771*k2^6*k3^2 + 1302*k2^4*k3^4 - 
              1175*k2^2*k3^6 + 420*k3^8)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(28672*F^12*k1^12*k2^6*k3^6) - 
  ((-1 + F^2)^2*f1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
    (-28*b1*(-1 + F^2)^3*k1^4*k2^2*(k1^2 + k2^2 - k3^2)^3*
      (k1^4 - 18*k1^2*(k2^2 - k3^2) + 21*(k2^2 - k3^2)^2)*
      (b1^2*k2^2*k3^2 + 2*Sqrt[2]*(c2 - c4)*k2^2*k3^2 + 
       b1*k1^2*(6*k2^2 - 3*k3^2) - 2*b1*k2^2*(3*k2^2 + k3^2)) - 
     (-1 + F^2)*f1^2*(256*k1^20 + k1^18*(2*(248 + 805*b1)*k2^2 - 
         (1760 + 679*b1)*k3^2) + k1^16*(2*(-5456 + 441*b1)*k2^4 + 
         9*(944 + 147*b1)*k2^2*k3^2 + 9*(512 - 245*b1)*k3^4) - 
       5*(k2^2 - k3^2)^8*(6*(144 + 385*b1)*k2^4 - (432 + 2695*b1)*k2^2*k3^2 + 
         385*b1*k3^4) - 12*k1^4*(k2^2 - k3^2)^6*((832 + 4298*b1)*k2^4 + 
         (1136 - 5005*b1)*k2^2*k3^2 + 3*(-96 + 497*b1)*k3^4) - 
       4*k1^14*((-8696 + 518*b1)*k2^6 + (15384 - 8281*b1)*k2^4*k3^2 - 
         24*(365 + 378*b1)*k2^2*k3^4 + (2264 - 3213*b1)*k3^6) - 
       3*k1^2*(k2^2 - k3^2)^6*(30*(152 + 511*b1)*k2^6 - 21*(224 + 1635*b1)*
          k2^4*k3^2 + 40*(26 + 567*b1)*k2^2*k3^4 - 3675*b1*k3^6) + 
       4*k1^12*(k2^2 - k3^2)*((2272 + 47418*b1)*k2^6 - 3*(6896 + 3661*b1)*
          k2^4*k3^2 + 48*(519 + 665*b1)*k2^2*k3^4 + 5*(-992 + 441*b1)*k3^6) + 
       4*k1^6*(k2^2 - k3^2)^4*((7464 + 20818*b1)*k2^6 - 7*(2552 + 3653*b1)*
          k2^4*k3^2 - 8*(-1829 + 364*b1)*k2^2*k3^4 - (4232 + 735*b1)*k3^6) - 
       2*k1^10*(k2^2 - k3^2)^2*(2*(18496 + 82677*b1)*k2^6 + 
         (-11024 + 25725*b1)*k2^4*k3^2 - 24*(1808 + 2485*b1)*k2^2*k3^4 + 
         9*(1872 + 1225*b1)*k3^6) + 2*k1^8*(k2^2 - k3^2)^3*
        (10*(1920 + 8323*b1)*k2^6 - (41680 + 57337*b1)*k2^4*k3^2 + 
         24*(1454 + 1001*b1)*k2^2*k3^4 - (16640 + 16317*b1)*k3^6)) - 
     56*f1^3*k1^2*(180*k1^14*k3^2*(k2^2 - k3^2) + 45*(4*k2^2 - 3*k3^2)*
        (k2^2 - k3^2)^8 + 810*k1^2*k3^2*(-k2^2 + k3^2)^7 + 
       k1^16*(20*k2^2 + 9*k3^2) + 48*k1^6*k3^2*(-k2^2 + k3^2)^3*
        (17*k2^4 - 84*k2^2*k3^2 + 42*k3^4) - 
       6*k1^12*(40*k2^6 - 137*k2^4*k3^2 + 250*k2^2*k3^4 - 105*k3^6) + 
       6*k1^8*(k2^2 - k3^2)^2*(100*k2^6 - 233*k2^4*k3^2 + 310*k2^2*k3^4 - 
         105*k3^6) - 10*k1^4*(k2^2 - k3^2)^4*(56*k2^6 + 101*k2^4*k3^2 - 
         322*k2^2*k3^4 + 189*k3^6) - 18*k1^10*(37*k2^6*k3^2 + 33*k2^4*k3^4 - 
         105*k2^2*k3^6 + 35*k3^8)) + 4*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*
      (k1^2 + k2^2 - k3^2)^2*(2*b1*(-1 + F^2)*k1^2*k2^2*
        (5*k1^10 - 63*k2^2*(k2^2 - k3^2)^3*(k2^2 + 2*k3^2) + 
         k1^8*(-79*k2^2 + 82*k3^2) - 9*k1^6*(10*k2^4 - 13*k2^2*k3^2 + 
           4*k3^4) + 9*k1^2*(k2^2 - k3^2)^2*(13*k2^4 - 23*k2^2*k3^2 + 
           7*k3^4) + 3*k1^4*(58*k2^6 - 103*k2^4*k3^2 + 83*k2^2*k3^4 - 
           38*k3^6)) + f1*(32*k1^14 + k1^12*(392*k2^2 - 549*k3^2) - 
         360*k2^2*(k2^2 - k3^2)^6 + k1^10*(-128*k2^4 - 69*k2^2*k3^2 + 
           805*k3^4) - 9*k1^2*(k2^2 - k3^2)^3*(64*k2^6 - 195*k2^4*k3^2 + 
           100*k2^2*k3^4 + 17*k3^6) - 2*k1^8*(1788*k2^6 - 4269*k2^4*k3^2 + 
           2765*k2^2*k3^4 + 37*k3^6) - k1^4*(k2^2 - k3^2)^2*
          (296*k2^6 + 4725*k2^4*k3^2 + 72*k2^2*k3^4 + 289*k3^6) + 
         6*k1^6*(752*k2^8 - 1273*k2^6*k3^2 + 20*k2^4*k3^4 + 514*k2^2*k3^6 - 
           13*k3^8))) + 4*(-1 + F^2)^2*f1*k1^2*
      (14*Sqrt[2]*(c2 - c4)*k1^2*k2^2*k3^2*(k1^2 + k2^2 - k3^2)^2*
        (k1^6*(20*k2^2 - 63*k3^2) + 21*(4*k2^2 - 3*k3^2)*(k2^2 - k3^2)^3 - 
         3*k1^2*(k2^2 - k3^2)^2*(76*k2^2 + 63*k3^2) + 
         k1^4*(92*k2^4 - 281*k2^2*k3^2 + 189*k3^4)) - 
       7*b1^2*k1^2*k3^2*(-6*k1^6*(k2^2 - k3^2)^2*(233*k2^4 - 360*k2^2*k3^2 - 
           105*k3^4) - 10*k1^4*(k2^2 - k3^2)^3*(119*k2^4 - 72*k2^2*k3^2 - 
           63*k3^4) - 15*k1^2*(k2^2 - k3^2)^4*(97*k2^4 - 21*k3^4) + 
         63*(k2^2 - k3^2)^5*(3*k2^4 + k3^4) + 
         k1^10*(-683*k2^4 + 720*k2^2*k3^2 + 63*k3^4) - 
         15*k1^8*(169*k2^6 - 313*k2^4*k3^2 + 123*k2^2*k3^4 + 21*k3^6)) + 
       b1*(k1^16*(60*k2^2 - 8*k3^2) + k1^14*(3368*k2^4 + 2285*k2^2*k3^2 - 
           4485*k3^4) - 4*k1^12*(1314*k2^6 - 2938*k2^4*k3^2 + 
           5508*k2^2*k3^4 - 4227*k3^6) + 84*(k2^2 - k3^2)^6*
          (31*k2^6 - 34*k2^4*k3^2 + 15*k2^2*k3^4 + 4*k3^6) + 
         21*k1^2*(k2^2 - k3^2)^5*(336*k2^6 - 413*k2^4*k3^2 + 186*k2^2*k3^4 + 
           63*k3^6) + k1^10*(-7904*k2^8 + 11357*k2^6*k3^2 - 9687*k2^4*k3^4 + 
           29795*k2^2*k3^6 - 22601*k3^8) + 4*k1^4*(k2^2 - k3^2)^3*
          (2590*k2^8 - 2066*k2^6*k3^2 + 1392*k2^4*k3^4 - 991*k2^2*k3^6 - 
           205*k3^8) - 3*k1^6*(k2^2 - k3^2)^2*(3400*k2^8 - 5629*k2^6*k3^2 - 
           3193*k2^4*k3^4 + 5953*k2^2*k3^6 + 429*k3^8) - 
         8*k1^8*(11*k2^10 + 2312*k2^8*k3^2 - 7566*k2^6*k3^4 + 
           6913*k2^4*k3^6 - 215*k2^2*k3^8 - 1455*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(57344*F^12*k1^10*k2^8*k3^6), 
 -1/7168*((-1 + F^2)^2*f1*(k1^2 + k2^2 - k3^2)*
     Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
     (-(b1^2*(-1 + F^2)^2*k1^4*(k1^2 + k2^2 - k3^2)^3*
        (27*(-1 + F^2)*k1^8*k2^2 - 3*k1^6*(24*(-1 + F^2)*k2^4 - 
           30*(-1 + F^2)*k2^2*k3^2 + 49*f1*k3^4) + 7*(k2^3 - k2*k3^2)^2*
          (9*(-1 + F^2)*k2^4 - 2*(-2 + 2*F^2 + 21*f1)*k3^4) + 
         3*k1^4*(10*(-1 + F^2)*k2^6 - 22*(-1 + F^2)*k2^4*k3^2 + 
           17*(-1 + F^2 - 28*f1)*k2^2*k3^4 + 98*f1*k3^6) + 
         k1^2*(-48*(-1 + F^2)*k2^8 + 6*(-1 + F^2)*k2^6*k3^2 + 
           (-82 + 82*F^2 - 1155*f1)*k2^4*k3^4 + 2*(20 - 20*F^2 + 441*f1)*k2^2*
            k3^6 - 147*f1*k3^8))) + b1*(-1 + F^2)*f1*(3*(-1 + F^2)*k1^20 + 
        120*(-1 + F^2)*k2^4*(k2^2 - k3^2)^8 + 3*(-1 + F^2)*k1^18*
         (39*k2^2 + 146*k3^2) + k1^16*(-1284*(-1 + F^2)*k2^4 + 
          1575*(-1 + F^2)*k2^2*k3^2 + (821 - 821*F^2 - 861*f1)*k3^4) + 
        3*k1^2*(k2^2 - k3^2)^6*(223*(-1 + F^2)*k2^6 - 95*(-1 + F^2)*k2^4*
           k3^2 + 3*(-12 + 12*F^2 + 35*f1)*k2^2*k3^4 - 
          3*(-12 + 12*F^2 + 35*f1)*k3^6) + k1^14*(-1308*(-1 + F^2)*k2^6 + 
          345*(-1 + F^2)*k2^4*k3^2 + 5*(-395 + 395*F^2 + 777*f1)*k2^2*k3^4 + 
          (1558 - 1558*F^2 + 3675*f1)*k3^6) - k1^6*(k2^2 - k3^2)^3*
         (1836*(-1 + F^2)*k2^8 - 2871*(-1 + F^2)*k2^6*k3^2 + 
          (3350 - 3350*F^2 - 11879*f1)*k2^4*k3^4 + (141 - 141*F^2 + 20678*f1)*
           k2^2*k3^6 + (-262 + 262*F^2 - 5439*f1)*k3^8) - 
        k1^8*(k2^2 - k3^2)^2*(1740*(-1 + F^2)*k2^8 - 1917*(-1 + F^2)*k2^6*
           k3^2 + (6551 - 6551*F^2 - 20265*f1)*k2^4*k3^4 + 
          (-1241 + 1241*F^2 + 35490*f1)*k2^2*k3^6 + 
          (1033 - 1033*F^2 - 5145*f1)*k3^8) + k1^12*(5442*(-1 + F^2)*k2^8 - 
          16917*(-1 + F^2)*k2^6*k3^2 + (-20703 + 20703*F^2 + 24815*f1)*k2^4*
           k3^4 + (14181 - 14181*F^2 - 16310*f1)*k2^2*k3^6 + 
          (-5249 + 5249*F^2 - 5145*f1)*k3^8) - k1^10*(k2^2 - k3^2)*
         (714*(-1 + F^2)*k2^8 + 2121*(-1 + F^2)*k2^6*k3^2 - 
          7*(-1674 + 1674*F^2 + 4615*f1)*k2^4*k3^4 + 
          (-10357 + 10357*F^2 + 34930*f1)*k2^2*k3^6 + 
          3*(1534 - 1534*F^2 + 245*f1)*k3^8) + k1^4*(k2^2 - k3^2)^4*
         (531*(-1 + F^2)*k2^8 + 357*(-1 + F^2)*k2^6*k3^2 + 
          5*(-27 + 27*F^2 + 833*f1)*k2^4*k3^4 + (551 - 551*F^2 - 6370*f1)*
           k2^2*k3^6 + (-104 + 104*F^2 + 2205*f1)*k3^8)) - 
      f1*(32*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^4*(k1^2 + k2^2 - k3^2)^2*
         (2*k1^10 + k1^8*(7*k2^2 - 5*k3^2) + 4*k3^2*(k2^2 - k3^2)^4 + 
          k1^6*(7*k2^4 - 10*k2^2*k3^2 + 5*k3^4) - k1^2*(k2^2 - k3^2)^2*
           (5*k2^4 - 18*k2^2*k3^2 + 7*k3^4) + k1^4*(13*k2^6 - 33*k2^4*k3^2 + 
            19*k2^2*k3^4 + k3^6)) + 7*f1^2*k1^2*k3^4*
         (39*k1^14 + 3*k1^12*(99*k2^2 - 35*k3^2) - 45*(k2^2 - k3^2)^7 + 
          7*k1^2*(k2^2 - k3^2)^5*(19*k2^2 + 45*k3^2) + k1^4*(k2^2 - k3^2)^3*
           (83*k2^4 + 1018*k2^2*k3^2 - 861*k3^4) + 
          k1^10*(-889*k2^4 + 274*k2^2*k3^2 - 105*k3^4) - 
          3*k1^6*(k2^2 - k3^2)^2*(273*k2^4 - 898*k2^2*k3^2 + 385*k3^4) + 
          k1^8*(-1871*k2^6 + 4237*k2^4*k3^2 - 3101*k2^2*k3^4 + 735*k3^6)) + 
        (-1 + F^2)*f1*(3*k1^20 - 120*k2^4*(k2^2 - k3^2)^8 + 
          k1^18*(-69*k2^2 + 51*k3^2) + k1^16*(300*k2^4 - 2376*k2^2*k3^2 - 
            77*k3^4) + k1^14*(1380*k2^6 - 2196*k2^4*k3^2 + 1837*k2^2*k3^4 - 
            109*k3^6) - 3*k1^2*(k2^2 - k3^2)^6*(55*k2^6 + 241*k2^4*k3^2 - 
            132*k2^2*k3^4 - 36*k3^6) + k1^4*(k2^2 - k3^2)^5*
           (483*k2^6 - 2985*k2^4*k3^2 - 606*k2^2*k3^4 + 916*k3^6) + 
          k1^6*(k2^2 - k3^2)^3*(228*k2^8 - 4248*k2^6*k3^2 - 1117*k2^4*k3^4 + 
            5634*k2^2*k3^6 - 2737*k3^8) + k1^12*(-4782*k2^8 + 
            13752*k2^6*k3^2 - 13833*k2^4*k3^4 + 6162*k2^2*k3^6 - 403*k3^8) - 
          k1^8*(k2^2 - k3^2)^2*(2028*k2^8 - 1680*k2^6*k3^2 + 3403*k2^4*k3^4 - 
            7990*k2^2*k3^6 + 3791*k3^8) + k1^10*(4770*k2^10 - 
            5862*k2^8*k3^2 - 6423*k2^6*k3^4 + 17333*k2^4*k3^6 - 
            12215*k2^2*k3^8 + 2397*k3^10))))*
     Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
     Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(F^12*k1^11*k2^7*k3^4) + 
  ((-1 + F^2)^2*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (14*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^2*(k1^2 + k2^2 - k3^2)^4*
      (3*k1^4 - 10*k1^2*(k2^2 - k3^2) + 7*(k2^2 - k3^2)^2) - 
     14*b1^2*(-1 + F^2)^2*k1^2*k2^2*(k1^2 + k2^2 - k3^2)^4*
      (18*(-1 + F^2)*k1^10 - 162*f1*k3^2*(k2^2 - k3^2)^4 + 
       7*k1^2*k3^2*(k2^2 - k3^2)^2*((-3 + 3*F^2 + 8*f1)*k2^2 - 26*f1*k3^2) + 
       k1^8*(-78*(-1 + F^2)*k2^2 + (-66 + 66*F^2 + 181*f1)*k3^2) + 
       k1^6*(102*(-1 + F^2)*k2^4 + (155 - 155*F^2 + 142*f1)*k2^2*k3^2 + 
         2*(-31 + 31*F^2 - 134*f1)*k3^4) - k1^4*(42*(-1 + F^2)*k2^6 + 
         (68 - 68*F^2 + f1)*k2^4*k3^2 + 10*(-4 + 4*F^2 + 25*f1)*k2^2*k3^4 + 
         (14 - 14*F^2 - 191*f1)*k3^6)) + b1*(-1 + F^2)*
      (-7*f1^2*k2^2*(k1^20 + k1^18*(234*k2^2 - 280*k3^2) - 
         6*k1^2*(185*k2^2 - 56*k3^2)*(k2^2 - k3^2)^8 - 275*(k2^2 - k3^2)^10 - 
         k1^4*(k2^2 - k3^2)^6*(707*k2^4 + 1994*k2^2*k3^2 - 797*k3^4) + 
         k1^16*(-3303*k2^4 - 818*k2^2*k3^2 + 297*k3^4) - 
         4*k1^10*(k2^2 - k3^2)^2*(2209*k2^6 - 2148*k2^4*k3^2 + 
           5973*k2^2*k3^4 - 5266*k3^6) - 8*k1^14*(25*k2^6 - 531*k2^4*k3^2 + 
           943*k2^2*k3^4 - 541*k3^6) + 8*k1^6*(k2^2 - k3^2)^4*
          (279*k2^6 - 1415*k2^4*k3^2 + 1045*k2^2*k3^4 + 211*k3^6) + 
         2*k1^8*(k2^2 - k3^2)^3*(1517*k2^6 - 5815*k2^4*k3^2 - 
           1633*k2^2*k3^4 + 6315*k3^6) + 2*k1^12*(4465*k2^8 - 
           4396*k2^6*k3^2 - 12010*k2^4*k3^4 + 19604*k2^2*k3^6 - 7663*k3^8)) - 
       2*(-1 + F^2)*f1*(18*k1^22 - 40*k2^2*(k2^2 - k3^2)^9*(12*k2^2 - k3^2) + 
         3*k1^20*(48*k2^2 + 71*k3^2) - k1^2*k2^2*(k2^2 - k3^2)^7*
          (1512*k2^4 - 239*k2^2*k3^2 + 135*k3^4) - 
         4*k1^18*(176*k2^4 - 709*k2^2*k3^2 + 387*k3^4) + 
         k1^16*(-2536*k2^6 + 7733*k2^4*k3^2 - 9963*k2^2*k3^4 + 3864*k3^6) + 
         k1^14*(-4884*k2^8 + 5221*k2^6*k3^2 - 6950*k2^4*k3^4 + 
           11061*k2^2*k3^6 - 4872*k3^8) + k1^10*(k2^2 - k3^2)^2*
          (6712*k2^8 - 5327*k2^6*k3^2 - 12558*k2^4*k3^4 + 3721*k2^2*k3^6 - 
           1428*k3^8) + k1^6*(k2^2 - k3^2)^4*(370*k2^8 + 3399*k2^6*k3^2 - 
           16462*k2^4*k3^4 + 7447*k2^2*k3^6 - 234*k3^8) - 
         k1^4*(k2^2 - k3^2)^5*(1496*k2^8 + 364*k2^6*k3^2 + 2299*k2^4*k3^4 - 
           2104*k2^2*k3^6 + 57*k3^8) - k1^8*(k2^2 - k3^2)^3*
          (1400*k2^8 - 12743*k2^6*k3^2 + 28648*k2^4*k3^4 - 9609*k2^2*k3^6 + 
           528*k3^8) + k1^12*(5768*k2^10 - 19981*k2^8*k3^2 + 
           19463*k2^6*k3^4 - 3101*k2^4*k3^6 - 5551*k2^2*k3^8 + 3402*k3^10)) + 
       8*(-1 + F^2)^2*k1^4*k2^2*(k1^2 + k2^2 - k3^2)^4*
        (3*k1^4 - 10*k1^2*(k2^2 - k3^2) + 7*(k2^2 - k3^2)^2)*
        ((7*(c2 - c4)*k1^2*k3^2)/Sqrt[2] + 
         ((c2 + c4)*(3*k1^4 - 5*k2^4 + 3*k2^2*k3^2 - 6*k1^2*(k2^2 - k3^2)))/
          Sqrt[2])) + 2*f1*(k1^2 + k2^2 - k3^2)*
      (7*f1^2*k1^2*k2^2*(21*k1^14*k3^2 + 225*k3^2*(k2^2 - k3^2)^7 - 
         3*k1^12*(64*k2^4 + 7*k2^2*k3^2 - 7*k3^4) - k1^2*(k2^2 - k3^2)^5*
          (448*k2^4 - 807*k2^2*k3^2 + 807*k3^4) + 
         k1^10*(320*k2^6 - 1139*k2^4*k3^2 + 774*k2^2*k3^4 - 387*k3^6) - 
         3*k1^6*(k2^2 - k3^2)^2*(640*k2^6 - 381*k2^4*k3^2 - 38*k2^2*k3^4 + 
           19*k3^6) + k1^4*(k2^2 - k3^2)^3*(1600*k2^6 - 967*k2^4*k3^2 - 
           1746*k2^2*k3^4 + 873*k3^6) + k1^8*(640*k2^8 + 187*k2^6*k3^2 + 
           559*k2^4*k3^4 - 2079*k2^2*k3^6 + 693*k3^8)) + 
       (-1 + F^2)*f1*(18*k1^20 - 8*k1^18*(4*k2^2 - 3*k3^2) + 
         40*k2^2*(k2^2 - k3^2)^8*(12*k2^2 - k3^2) + 
         k1^16*(376*k2^4 - 639*k2^2*k3^2 - 408*k3^4) + k1^2*(k2^2 - k3^2)^6*
          (1464*k2^6 + 689*k2^4*k3^2 - 481*k2^2*k3^4 - 264*k3^6) + 
         k1^14*(2008*k2^6 - 2473*k2^4*k3^2 + 1121*k2^2*k3^4 + 672*k3^6) - 
         k1^4*(k2^2 - k3^2)^5*(1918*k2^6 - 6689*k2^4*k3^2 + 1905*k2^2*k3^4 + 
           1698*k3^6) - k1^6*(k2^2 - k3^2)^3*(1880*k2^8 - 14445*k2^6*k3^2 + 
           11714*k2^4*k3^4 + 3123*k2^2*k3^6 - 4512*k3^8) + 
         k1^12*(-5220*k2^8 + 7733*k2^6*k3^2 - 466*k2^4*k3^4 - 
           3867*k2^2*k3^6 + 924*k3^8) + k1^8*(k2^2 - k3^2)^2*
          (1144*k2^8 + 587*k2^6*k3^2 + 618*k2^4*k3^4 - 9013*k2^2*k3^6 + 
           6216*k3^8) + k1^10*(3560*k2^10 - 14789*k2^8*k3^2 + 
           20303*k2^6*k3^4 - 18431*k2^4*k3^6 + 13725*k2^2*k3^8 - 
           4368*k3^10)) + 8*(-1 + F^2)^2*k1^2*k2^2*
        (7*Sqrt[2]*(c2 - c4)*k1^2*k3^2*(k1^2 + k2^2 - k3^2)^3*
          (k1^6 - 11*k1^2*(k2^2 - k3^2)^2 + 8*(k2^2 - k3^2)^3 + 
           k1^4*(2*k2^2 + 13*k3^2)) + 
         ((c2 + c4)*(32*k2^2*(3*k2^2 - 2*k3^2)*(k2^2 - k3^2)^6 + 
            k1^14*(4*k2^2 + 33*k3^2) + k1^12*(-104*k2^4 + 57*k2^2*k3^2 + 
              81*k3^4) - k1^4*(k2^2 - k3^2)^3*(424*k2^6 - 881*k2^4*k3^2 + 
              782*k2^2*k3^4 - 237*k3^6) + 12*k1^2*(k2^2 - k3^2)^4*
             (11*k2^6 + 6*k2^4*k3^2 - 23*k2^2*k3^4 + 10*k3^6) - 
            k1^6*(k2^2 - k3^2)^2*(388*k2^6 - 377*k2^4*k3^2 - 160*k2^2*k3^4 + 
              189*k3^6) - 2*k1^10*(130*k2^6 + 29*k2^4*k3^2 - 437*k2^2*k3^4 + 
              282*k3^6) + k1^8*(944*k2^8 - 2434*k2^6*k3^2 + 2880*k2^4*k3^4 - 
              2146*k2^2*k3^6 + 756*k3^8)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(14336*F^12*k1^11*k2^5*k3^6) + 
  ((-1 + F^2)^2*f1*Sqrt[1 - (k1^2 + k2^2 - k3^2)^2/(4*k1^2*k2^2)]*
    (28*b1*(-1 + F^2)^3*k1^4*k2^2*(k1^2 + k2^2 - k3^2)^4*
      (3*k1^4 - 10*k1^2*(k2^2 - k3^2) + 7*(k2^2 - k3^2)^2)*
      (b1^2*k2^2*k3^2 + 2*Sqrt[2]*(c2 - c4)*k2^2*k3^2 + 
       b1*k1^2*(6*k2^2 - 3*k3^2) - 2*b1*k2^2*(3*k2^2 + k3^2)) - 
     (-1 + F^2)*f1^2*(32*k1^22 + k1^20*(-2*(268 + 273*b1)*k2^2 + 
         (316 + 595*b1)*k3^2) + 5*(k2^2 - k3^2)^9*(6*(32 + 77*b1)*k2^4 - 
         (96 + 539*b1)*k2^2*k3^2 + 77*b1*k3^4) + k1^4*(k2^2 - k3^2)^7*
        (2*(1380 + 6643*b1)*k2^4 + (5076 - 14623*b1)*k2^2*k3^2 + 
         9*(-124 + 497*b1)*k3^4) - 2*k1^18*(2*(-1514 + 805*b1)*k2^4 + 
         3*(2564 - 763*b1)*k2^2*k3^2 + (992 + 679*b1)*k3^4) + 
       k1^16*((20032 + 82222*b1)*k2^6 - (40688 + 33145*b1)*k2^4*k3^2 - 
         8*(-2440 + 5803*b1)*k2^2*k3^4 + 7*(656 - 315*b1)*k3^6) + 
       2*k1^2*(k2^2 - k3^2)^7*(10*(170 + 511*b1)*k2^6 - 
         5*(320 + 2289*b1)*k2^4*k3^2 + 4*(71 + 1890*b1)*k2^2*k3^4 - 
         1225*b1*k3^6) - 8*k1^14*(k2^2 - k3^2)*((4896 + 3374*b1)*k2^6 - 
         5*(1544 + 329*b1)*k2^4*k3^2 + 32*(142 + 539*b1)*k2^2*k3^4 + 
         119*(-8 + 9*b1)*k3^6) - 8*k1^6*(k2^2 - k3^2)^5*
        (2*(702 + 1799*b1)*k2^6 - (3092 + 3941*b1)*k2^4*k3^2 - 
         4*(-613 + 308*b1)*k2^2*k3^4 - (764 + 105*b1)*k3^6) - 
       2*k1^12*(k2^2 - k3^2)^2*(2*(2812 + 52353*b1)*k2^6 - 
         (28468 + 43911*b1)*k2^4*k3^2 + 24*(1564 + 3255*b1)*k2^2*k3^4 + 
         7*(-892 + 315*b1)*k3^6) + 4*k1^10*(k2^2 - k3^2)^3*
        (2*(5114 + 28497*b1)*k2^6 + (-2896 + 3353*b1)*k2^4*k3^2 - 
         28*(403 + 538*b1)*k2^2*k3^4 + 7*(592 + 315*b1)*k3^6) - 
       2*k1^8*(k2^2 - k3^2)^4*((5984 + 33530*b1)*k2^6 - 
         (15832 + 9779*b1)*k2^4*k3^2 - 8*(-1538 + 189*b1)*k2^2*k3^4 - 
         (6872 + 5439*b1)*k3^6)) - 28*f1^3*k1^2*(k1^2 + k2^2 - k3^2)^2*
      (9*k1^14*k3^2 - 20*(4*k2^2 - 3*k3^2)*(k2^2 - k3^2)^7 + 
       5*k1^2*(k2^2 - k3^2)^6*(32*k2^2 + 57*k3^2) + 
       k1^12*(-80*k2^4 + 26*k2^2*k3^2 + 54*k3^4) + 
       k1^10*(160*k2^6 - 1205*k2^4*k3^2 + 682*k2^2*k3^4 - 261*k3^6) - 
       k1^6*(k2^2 - k3^2)^2*(320*k2^6 + 785*k2^4*k3^2 + 638*k2^2*k3^4 - 
         159*k3^6) + 2*k1^4*(k2^2 - k3^2)^3*(40*k2^6 + 241*k2^4*k3^2 - 
         410*k2^2*k3^4 + 225*k3^6) + 8*k1^8*(10*k2^8 + 237*k2^6*k3^2 - 
         171*k2^4*k3^4 - 109*k2^2*k3^6 + 33*k3^8)) + 
     4*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*(k1^2 + k2^2 - k3^2)^3*
      (-2*b1*(-1 + F^2)*k1^2*k2^2*(15*k1^10 - 21*k2^2*(k2^2 - k3^2)^3*
          (k2^2 + 2*k3^2) + k1^8*(-17*k2^2 + 26*k3^2) + 
         k1^6*(-66*k2^4 + 75*k2^2*k3^2 - 36*k3^4) + 3*k1^2*(k2^2 - k3^2)^2*
          (17*k2^4 - 15*k2^2*k3^2 + 7*k3^4) + k1^4*(38*k2^6 - 39*k2^4*k3^2 + 
           27*k2^2*k3^4 - 26*k3^6)) + f1*(4*k1^14 + 80*k2^2*(k2^2 - k3^2)^6 + 
         k1^12*(56*k2^2 + 257*k3^2) + k1^10*(-1012*k2^4 + 937*k2^2*k3^2 - 
           533*k3^4) + 3*k1^2*(k2^2 - k3^2)^3*(28*k2^6 - 129*k2^4*k3^2 + 
           76*k2^2*k3^4 + 11*k3^6) + k1^4*(k2^2 - k3^2)^2*
          (88*k2^6 + 1881*k2^4*k3^2 + 180*k2^2*k3^4 + 29*k3^6) + 
         2*k1^8*(1168*k2^6 - 1845*k2^4*k3^2 + 823*k2^2*k3^4 + 121*k3^6) - 
         2*k1^6*(818*k2^8 - 667*k2^6*k3^2 - 978*k2^4*k3^4 + 844*k2^2*k3^6 - 
           17*k3^8))) + 4*(-1 + F^2)^2*f1*k1^2*(k1^2 + k2^2 - k3^2)*
      (14*Sqrt[2]*(c2 - c4)*k1^2*k2^2*k3^2*(k1^2 + k2^2 - k3^2)^2*
        (-7*(4*k2^2 - 3*k3^2)*(k2^2 - k3^2)^3 + 9*k1^2*(k2^2 - k3^2)^2*
          (12*k2^2 + 7*k3^2) + k1^6*(20*k2^2 + 21*k3^2) + 
         k1^4*(-100*k2^4 + 163*k2^2*k3^2 - 63*k3^4)) + 
       7*b1^2*k1^2*k3^2*(-2*k1^6*(k2^2 - k3^2)^2*(491*k2^4 - 540*k2^2*k3^2 - 
           105*k3^4) - 15*k1^2*(k2^2 - k3^2)^4*(43*k2^4 - 7*k3^4) + 
         21*(k2^2 - k3^2)^5*(3*k2^4 + k3^4) + 10*k1^4*(k2^2 - k3^2)^3*
          (5*k2^4 + 36*k2^2*k3^2 + 21*k3^4) + 
         k1^10*(187*k2^4 + 360*k2^2*k3^2 + 21*k3^4) - 
         k1^8*(1553*k2^6 - 2633*k2^4*k3^2 + 975*k2^2*k3^4 + 105*k3^6)) + 
       b1*(k1^16*(-54*k2^2 + 71*k3^2) - 2*k1^14*(541*k2^4 - 78*k2^2*k3^2 - 
           863*k3^4) + k1^12*(-5438*k2^6 + 995*k2^4*k3^2 + 10992*k2^2*k3^4 - 
           7385*k3^6) - 8*(k2^2 - k3^2)^6*(83*k2^6 - 82*k2^4*k3^2 + 
           35*k2^2*k3^4 + 12*k3^6) - 2*k1^2*(k2^2 - k3^2)^5*
          (655*k2^6 - 771*k2^4*k3^2 + 385*k2^2*k3^4 + 141*k3^6) - 
         k1^4*(k2^2 - k3^2)^3*(2394*k2^8 + 1261*k2^6*k3^2 - 1079*k2^4*k3^4 - 
           1197*k2^2*k3^6 + 61*k3^8) + 2*k1^6*(k2^2 - k3^2)^2*
          (3697*k2^8 - 3636*k2^6*k3^2 - 2254*k2^4*k3^4 + 3440*k2^2*k3^6 + 
           433*k3^8) + 2*k1^10*(5179*k2^8 - 11494*k2^6*k3^2 + 
           11084*k2^4*k3^4 - 10292*k2^2*k3^6 + 5379*k3^8) + 
         k1^8*(-6810*k2^10 + 22101*k2^8*k3^2 - 31904*k2^6*k3^4 + 
           16830*k2^4*k3^6 + 6066*k2^2*k3^8 - 6283*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(28672*F^12*k1^9*k2^7*k3^6), 
 ((-1 + F^2)^2*f1*(k1^2 + k2^2 - k3^2)^2*
    (-(b1^2*(-1 + F^2)^2*k1^4*(k1^2 + k2^2 - k3^2)^3*
       (9*(-1 + F^2)*k1^8*k2^2 - 3*k1^6*(4*(-1 + F^2)*k2^4 - 
          6*(-1 + F^2)*k2^2*k3^2 + 7*f1*k3^4) + (k2^3 - k2*k3^2)^2*
         (9*(-1 + F^2)*k2^4 - 2*(-2 + 2*F^2 + 21*f1)*k3^4) + 
        k1^4*(6*(-1 + F^2)*k2^6 - 6*(-1 + F^2)*k2^4*k3^2 + 
          (-5 + 5*F^2 - 252*f1)*k2^2*k3^4 + 42*f1*k3^6) + 
        k1^2*(-12*(-1 + F^2)*k2^8 + 6*(-1 + F^2)*k2^6*k3^2 + 
          7*(-2 + 2*F^2 - 27*f1)*k2^4*k3^4 + 2*(4 - 4*F^2 + 63*f1)*k2^2*
           k3^6 - 21*f1*k3^8))) + b1*(-1 + F^2)*f1*(3*(-1 + F^2)*k1^20 + 
       12*(-1 + F^2)*k2^4*(k2^2 - k3^2)^8 + 9*(-1 + F^2)*k1^18*
        (13*k2^2 + 8*k3^2) + k1^16*(216*(-1 + F^2)*k2^4 + 
         237*(-1 + F^2)*k2^2*k3^2 + (177 - 177*F^2 - 133*f1)*k3^4) + 
       k1^2*(k2^2 - k3^2)^6*(69*(-1 + F^2)*k2^6 - 21*(-1 + F^2)*k2^4*k3^2 + 
         (-12 + 12*F^2 + 35*f1)*k2^2*k3^4 + (12 - 12*F^2 - 35*f1)*k3^6) + 
       k1^14*(-1380*(-1 + F^2)*k2^6 + 1395*(-1 + F^2)*k2^4*k3^2 + 
         (-47 + 47*F^2 + 805*f1)*k2^2*k3^4 + (148 - 148*F^2 + 595*f1)*k3^6) + 
       k1^12*(1338*(-1 + F^2)*k2^8 - 3807*(-1 + F^2)*k2^6*k3^2 + 
         (-3819 + 3819*F^2 + 5383*f1)*k2^4*k3^4 + (2147 - 2147*F^2 - 2870*f1)*
          k2^2*k3^6 + (-773 + 773*F^2 - 945*f1)*k3^8) - 
       k1^8*(k2^2 - k3^2)^2*(60*(-1 + F^2)*k2^8 - 63*(-1 + F^2)*k2^6*k3^2 - 
         3*(-381 + 381*F^2 + 763*f1)*k2^4*k3^4 + (-327 + 327*F^2 + 4690*f1)*
          k2^2*k3^6 + (229 - 229*F^2 - 385*f1)*k3^8) - 
       k1^6*(k2^2 - k3^2)^3*(324*(-1 + F^2)*k2^8 - 381*(-1 + F^2)*k2^6*k3^2 - 
         7*(-104 + 104*F^2 + 185*f1)*k2^4*k3^4 + (19 - 19*F^2 + 2534*f1)*k2^2*
          k3^6 + 7*(-4 + 4*F^2 - 81*f1)*k3^8) + k1^4*(k2^2 - k3^2)^4*
        (27*(-1 + F^2)*k2^8 + 135*(-1 + F^2)*k2^6*k3^2 + 
         (13 - 13*F^2 + 525*f1)*k2^4*k3^4 + (57 - 57*F^2 - 770*f1)*k2^2*
          k3^6 + (-4 + 4*F^2 + 245*f1)*k3^8) - k1^10*(k2^2 - k3^2)*
        (18*(-1 + F^2)*k2^8 + 483*(-1 + F^2)*k2^6*k3^2 + 
         (1924 - 1924*F^2 - 5929*f1)*k2^4*k3^4 + 3*(-617 + 617*F^2 + 1750*f1)*
          k2^2*k3^6 + (772 - 772*F^2 + 455*f1)*k3^8)) - 
     f1*(8*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*k3^4*(k1^2 + k2^2 - k3^2)^2*
        (k1^10 + k1^8*(4*k2^2 - 2*k3^2) + 2*k3^2*(k2^2 - k3^2)^4 + 
         2*k1^6*(k2^4 + k3^4) - k1^2*(k2^2 - k3^2)^2*(3*k2^4 - 10*k2^2*k3^2 + 
           3*k3^4) + 4*k1^4*(3*k2^6 - 8*k2^4*k3^2 + 5*k2^2*k3^4)) + 
       7*f1^2*k1^2*k3^4*(7*k1^14 + k1^12*(89*k2^2 - 25*k3^2) - 
         5*(k2^2 - k3^2)^7 + k1^2*(k2^2 - k3^2)^5*(29*k2^2 + 35*k3^2) + 
         k1^4*(k2^2 - k3^2)^3*(19*k2^4 + 122*k2^2*k3^2 - 93*k3^4) + 
         k1^10*(-193*k2^4 - 94*k2^2*k3^2 + 15*k3^4) - k1^6*(k2^2 - k3^2)^2*
          (99*k2^4 - 358*k2^2*k3^2 + 115*k3^4) + 
         k1^8*(-359*k2^6 + 597*k2^4*k3^2 - 293*k2^2*k3^4 + 55*k3^6)) + 
       (-1 + F^2)*f1*(3*k1^20 - 12*k2^4*(k2^2 - k3^2)^8 + 
         k1^18*(-9*k2^2 + 3*k3^2) - k1^16*(432*k2^4 + 744*k2^2*k3^2 + 
           13*k3^4) + k1^14*(1668*k2^6 - 1644*k2^4*k3^2 + 869*k2^2*k3^4 - 
           29*k3^6) - 3*k1^2*(k2^2 - k3^2)^6*(3*k2^6 + 33*k2^4*k3^2 - 
           16*k2^2*k3^4 - 4*k3^6) + k1^4*(k2^2 - k3^2)^5*
          (75*k2^6 - 321*k2^4*k3^2 - 110*k2^2*k3^4 + 116*k3^6) + 
         k1^12*(-2358*k2^8 + 4440*k2^6*k3^2 - 3057*k2^4*k3^4 + 
           962*k2^2*k3^6 + 13*k3^8) - k1^6*(k2^2 - k3^2)^3*
          (60*k2^8 + 384*k2^6*k3^2 + 301*k2^4*k3^4 - 650*k2^2*k3^6 + 
           353*k3^8) - k1^8*(k2^2 - k3^2)^2*(348*k2^8 - 432*k2^6*k3^2 + 
           123*k2^4*k3^4 - 950*k2^2*k3^6 + 463*k3^8) + 
         k1^10*(1482*k2^10 - 2334*k2^8*k3^2 - 319*k2^6*k3^4 + 
           2845*k2^4*k3^6 - 1911*k2^2*k3^8 + 237*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)])/(14336*F^12*k1^12*k2^8*k3^4) - 
  ((-1 + F^2)^2*f1*(k1^2 + k2^2 - k3^2)*(14*b1^3*(-1 + F^2)^3*k1^6*k2^2*k3^2*
      (k1^2 + k2^2 - k3^2)^4*(k1^2 - k2^2 + k3^2)^2 - 
     14*b1^2*(-1 + F^2)^2*k1^2*k2^2*(k1^2 + k2^2 - k3^2)^4*
      (6*(-1 + F^2)*k1^10 - 18*f1*k3^2*(k2^2 - k3^2)^4 + 
       k1^2*k3^2*(k2^2 - k3^2)^2*((-3 + 3*F^2 + 16*f1)*k2^2 - 34*f1*k3^2) + 
       k1^8*(-18*(-1 + F^2)*k2^2 + (-14 + 14*F^2 + 31*f1)*k3^2) + 
       k1^6*(18*(-1 + F^2)*k2^4 + (25 - 25*F^2 + 26*f1)*k2^2*k3^2 + 
         2*(-5 + 5*F^2 - 22*f1)*k3^4) + k1^4*(-6*(-1 + F^2)*k2^6 + 
         (-8 + 8*F^2 - 7*f1)*k2^4*k3^2 - 2*(-2 + 2*F^2 + 11*f1)*k2^2*k3^4 + 
         (-2 + 2*F^2 + 17*f1)*k3^6)) + b1*(-1 + F^2)*
      (7*f1^2*k2^2*(9*k1^20 + 86*k1^2*k2^2*(k2^2 - k3^2)^8 + 
         25*(k2^2 - k3^2)^10 + k1^18*(-10*k2^2 + 24*k3^2) - 
         2*k1^8*(k2^2 - k3^2)^4*(79*k2^4 - 206*k2^2*k3^2 - 1113*k3^4) + 
         k1^16*(-1915*k2^4 + 246*k2^2*k3^2 - 171*k3^4) - 
         k1^4*(k2^2 - k3^2)^6*(11*k2^4 - 358*k2^2*k3^2 + 75*k3^4) + 
         4*k1^10*(k2^2 - k3^2)^2*(585*k2^6 - 568*k2^4*k3^2 + 965*k2^2*k3^4 - 
           726*k3^6) + 8*k1^14*(693*k2^6 - 637*k2^4*k3^2 + 15*k2^2*k3^4 - 
           15*k3^6) - 8*k1^6*(k2^2 - k3^2)^4*(35*k2^6 - 137*k2^4*k3^2 + 
           53*k2^2*k3^4 + 73*k3^6) - 2*k1^12*(2815*k2^8 - 4516*k2^6*k3^2 + 
           442*k2^4*k3^4 + 2044*k2^2*k3^6 - 785*k3^8)) - 
       2*(-1 + F^2)*f1*(6*k1^22 - 4*k2^2*(k2^2 - k3^2)^9*(12*k2^2 - k3^2) + 
         3*k1^20*(44*k2^2 + 5*k3^2) + k1^18*(88*k2^4 + 274*k2^2*k3^2 - 
           204*k3^4) - k1^2*k2^2*(k2^2 - k3^2)^7*(120*k2^4 + 45*k2^2*k3^2 + 
           11*k3^4) + k1^16*(816*k2^6 + 1483*k2^4*k3^2 - 1773*k2^2*k3^4 + 
           576*k3^6) + k1^14*(-2084*k2^8 + 2975*k2^6*k3^2 - 2250*k2^4*k3^4 + 
           2279*k2^2*k3^6 - 768*k3^8) + k1^10*(k2^2 - k3^2)^2*
          (1968*k2^8 - 2777*k2^6*k3^2 - 802*k2^4*k3^4 + 143*k2^2*k3^6 - 
           180*k3^8) + k1^6*(k2^2 - k3^2)^4*(142*k2^8 + 677*k2^6*k3^2 - 
           2498*k2^4*k3^4 + 941*k2^2*k3^6 - 6*k3^8) - k1^4*(k2^2 - k3^2)^5*
          (60*k2^8 + 240*k2^6*k3^2 + 333*k2^4*k3^4 - 284*k2^2*k3^6 + 
           3*k3^8) - k1^8*(k2^2 - k3^2)^3*(448*k2^8 - 1909*k2^6*k3^2 + 
           3752*k2^4*k3^4 - 1003*k2^2*k3^6 + 24*k3^8) - 
         k1^12*(392*k2^10 + 639*k2^8*k3^2 - 1933*k2^6*k3^4 + 423*k2^4*k3^6 + 
           1013*k2^2*k3^8 - 534*k3^10)) + 8*(-1 + F^2)^2*k1^4*k2^2*
        (k1^2 + k2^2 - k3^2)^4*(k1^2 - k2^2 + k3^2)^2*
        ((7*(c2 - c4)*k1^2*k3^2)/Sqrt[2] + 
         ((c2 + c4)*(3*k1^4 - 5*k2^4 + 3*k2^2*k3^2 - 6*k1^2*(k2^2 - k3^2)))/
          Sqrt[2])) + 2*f1*(k1^2 + k2^2 - k3^2)*
      (7*f1^2*k1^2*k2^2*(5*k1^14*k3^2 + 25*k3^2*(k2^2 - k3^2)^7 + 
         k1^12*(64*k2^4 + 11*k2^2*k3^2 - 11*k3^4) - k1^2*(k2^2 - k3^2)^5*
          (64*k2^4 - 79*k2^2*k3^2 + 79*k3^4) - 
         k1^10*(320*k2^6 + 331*k2^4*k3^2 - 54*k2^2*k3^4 + 27*k3^6) - 
         k1^6*(k2^2 - k3^2)^2*(640*k2^6 - 439*k2^4*k3^2 - 114*k2^2*k3^4 + 
           57*k3^6) + k1^4*(k2^2 - k3^2)^3*(320*k2^6 - 311*k2^4*k3^2 - 
           114*k2^2*k3^4 + 57*k3^6) + k1^8*(640*k2^8 - 557*k2^6*k3^2 + 
           103*k2^4*k3^4 - 279*k2^2*k3^6 + 93*k3^8)) + 
       (-1 + F^2)*f1*(6*k1^20 + 4*k1^18*(2*k2^2 - 3*k3^2) + 
         4*k2^2*(k2^2 - k3^2)^8*(12*k2^2 - k3^2) - 
         k1^16*(800*k2^4 + 355*k2^2*k3^2 + 48*k3^4) + k1^2*(k2^2 - k3^2)^6*
          (128*k2^6 + 141*k2^4*k3^2 - 57*k2^2*k3^4 - 36*k3^6) + 
         k1^14*(2024*k2^6 - 1913*k2^4*k3^2 + 585*k2^2*k3^4 + 168*k3^6) - 
         k1^4*(k2^2 - k3^2)^5*(386*k2^6 - 789*k2^4*k3^2 + 197*k2^2*k3^4 + 
           222*k3^6) - k1^12*(1652*k2^8 - 2765*k2^6*k3^2 + 610*k2^4*k3^4 + 
           419*k2^2*k3^6 + 84*k3^8) + k1^6*(k2^2 - k3^2)^3*
          (120*k2^8 + 1261*k2^6*k3^2 - 986*k2^4*k3^4 - 499*k2^2*k3^6 + 
           552*k3^8) + k1^8*(k2^2 - k3^2)^2*(224*k2^8 - 965*k2^6*k3^2 + 
           746*k2^4*k3^4 - 1125*k2^2*k3^6 + 672*k3^8) + 
         k1^10*(280*k2^10 - 1677*k2^8*k3^2 + 2199*k2^6*k3^4 - 
           1719*k2^4*k3^6 + 1253*k2^2*k3^8 - 336*k3^10)) + 
       8*(-1 + F^2)^2*k1^2*k2^2*(7*Sqrt[2]*(c2 - c4)*k1^2*k3^2*
          (k1^2 + k2^2 - k3^2)^3*(-2*k1^2*(k2^2 - k3^2)^2 + (k2^2 - k3^2)^3 + 
           k1^4*(k2^2 + 2*k3^2)) + ((c2 + c4)*(4*k2^2*(3*k2^2 - 2*k3^2)*
             (k2^2 - k3^2)^6 + k1^14*(4*k2^2 + 5*k3^2) + 
            k1^12*(68*k2^4 + 13*k2^2*k3^2 + 13*k3^4) + 
            k1^10*(-252*k2^6 + 206*k2^4*k3^2 + 122*k2^2*k3^4 - 92*k3^6) - 
            k1^4*(k2^2 - k3^2)^3*(84*k2^6 - 129*k2^4*k3^2 + 94*k2^2*k3^4 - 
              25*k3^6) + 4*k1^2*(k2^2 - k3^2)^4*(3*k2^6 + 6*k2^4*k3^2 - 
              11*k2^2*k3^4 + 4*k3^6) - k1^6*(k2^2 - k3^2)^2*
             (20*k2^6 + 3*k2^4*k3^2 - 80*k2^2*k3^4 + 49*k3^6) + 
            2*k1^8*(130*k2^8 - 301*k2^6*k3^2 + 290*k2^4*k3^4 - 
              185*k2^2*k3^6 + 66*k3^8)))/Sqrt[2])))*
    Plin[((26 + F*(-17 + 6*F))*k1)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(28672*F^12*k1^12*k2^6*k3^6) + 
  ((-1 + F^2)^2*f1*(k1^2 + k2^2 - k3^2)*
    (-28*b1*(-1 + F^2)^3*k1^4*k2^2*(k1^2 + k2^2 - k3^2)^4*
      (k1^2 - k2^2 + k3^2)^2*(b1^2*k2^2*k3^2 + 2*Sqrt[2]*(c2 - c4)*k2^2*
        k3^2 + b1*k1^2*(6*k2^2 - 3*k3^2) - 2*b1*k2^2*(3*k2^2 + k3^2)) + 
     (-1 + F^2)*f1^2*(32*k1^22 - k1^20*(2*(132 + 7*b1)*k2^2 + 
         (68 - 133*b1)*k3^2) + (k2^2 - k3^2)^9*(6*(16 + 35*b1)*k2^4 - 
         (48 + 245*b1)*k2^2*k3^2 + 35*b1*k3^4) - 
       2*k1^18*((2836 + 266*b1)*k2^4 + (2732 - 497*b1)*k2^2*k3^2 + 
         (64 + 231*b1)*k3^4) + k1^4*(k2^2 - k3^2)^6*(14*(4 + 51*b1)*k2^6 + 
         (620 - 1267*b1)*k2^4*k3^2 + 8*(-116 + 105*b1)*k2^2*k3^4 + 
         (156 - 287*b1)*k3^6) + 8*k1^14*(k2^2 - k3^2)*
        (2*(-86 + 7469*b1)*k2^6 - 21*(-8 + 71*b1)*k2^4*k3^2 - 
         72*(1 + 63*b1)*k2^2*k3^4 + 7*(16 - 17*b1)*k3^6) + 
       2*k1^2*(k2^2 - k3^2)^7*(14*(10 + 29*b1)*k2^6 - (88 + 917*b1)*k2^4*
          k3^2 + 4*(-1 + 154*b1)*k2^2*k3^4 - 105*b1*k3^6) + 
       4*k1^10*(k2^2 - k3^2)^3*(2*(1082 + 8057*b1)*k2^6 + 
         (-1096 + 1673*b1)*k2^4*k3^2 - 4*(505 + 938*b1)*k2^2*k3^4 + 
         7*(64 + 11*b1)*k3^6) + k1^16*((12736 - 36694*b1)*k2^6 - 
         (21792 + 20923*b1)*k2^4*k3^2 - 8*(-1458 + 1561*b1)*k2^2*k3^4 + 
         7*(80 + 31*b1)*k3^6) - 8*k1^6*(k2^2 - k3^2)^5*(30*(8 + 21*b1)*k2^6 - 
         (388 + 693*b1)*k2^4*k3^2 - 4*(-59 + 42*b1)*k2^2*k3^4 - 
         (100 + 49*b1)*k3^6) - 2*k1^12*(k2^2 - k3^2)^2*
        ((6584 + 68446*b1)*k2^6 - (9364 + 14217*b1)*k2^4*k3^2 + 
         8*(878 + 2555*b1)*k2^2*k3^4 + 7*(-92 + 85*b1)*k3^6) - 
       2*k1^8*(k2^2 - k3^2)^4*((-272 + 3262*b1)*k2^6 + 7*(-152 + 425*b1)*k2^4*
          k3^2 - 24*(-36 + 49*b1)*k2^2*k3^4 - (824 + 581*b1)*k3^6)) + 
     28*f1^3*k1^2*(k1^2 + k2^2 - k3^2)^2*
      (-2*(4*k2^2 - 3*k3^2)*(k2^2 - k3^2)^7 + k1^14*(8*k2^2 + 3*k3^2) + 
       3*k1^2*(k2^2 - k3^2)^6*(8*k2^2 + 9*k3^2) - 
       24*k1^12*(k2^4 - k2^2*k3^2) + k1^10*(8*k2^6 - 507*k2^4*k3^2 + 
         62*k2^2*k3^4 - 27*k3^6) - 4*k1^4*(k2^2 - k3^2)^3*
        (2*k2^6 - 21*k2^4*k3^2 + 20*k2^2*k3^4 - 9*k3^6) - 
       k1^6*(k2^2 - k3^2)^2*(40*k2^6 + 259*k2^4*k3^2 + 34*k2^2*k3^4 + 
         3*k3^6) + 2*k1^8*(20*k2^8 + 303*k2^6*k3^2 - 261*k2^4*k3^4 - 
         83*k2^2*k3^6 + 21*k3^8)) - 4*Sqrt[2]*(c2 + c4)*(-1 + F^2)^2*k1^2*
      (k1^2 + k2^2 - k3^2)^3*(-2*b1*(-1 + F^2)*k1^2*k2^2*
        (k1^2 - k2^2 + k3^2)^2*(5*k1^6 + k1^4*(11*k2^2 - 8*k3^2) + 
         3*k1^2*(k2^4 - 5*k2^2*k3^2 + k3^4) - 3*(k2^6 + k2^4*k3^2 - 
           2*k2^2*k3^4)) + f1*(4*k1^14 + 8*k2^2*(k2^2 - k3^2)^6 + 
         k1^12*(96*k2^2 + 43*k3^2) + k1^10*(-388*k2^4 + 275*k2^2*k3^2 - 
           111*k3^4) + k1^4*(k2^2 - k3^2)^2*(16*k2^6 + 307*k2^4*k3^2 + 
           44*k2^2*k3^4 - k3^6) + k1^2*(k2^2 - k3^2)^3*
          (4*k2^6 - 41*k2^4*k3^2 + 28*k2^2*k3^4 + 3*k3^6) + 
         2*k1^8*(260*k2^6 - 279*k2^4*k3^2 + 77*k2^2*k3^4 + 35*k3^6) - 
         2*k1^6*(130*k2^8 - k2^6*k3^2 - 282*k2^4*k3^4 + 152*k2^2*k3^6 + 
           k3^8))) - 4*(-1 + F^2)^2*f1*k1^2*(k1^2 + k2^2 - k3^2)*
      (14*Sqrt[2]*(c2 - c4)*k1^2*k2^2*k3^2*(k1^2 + k2^2 - k3^2)^2*
        (-((4*k2^2 - 3*k3^2)*(k2^2 - k3^2)^3) + 3*k1^6*(4*k2^2 + k3^2) + 
         k1^2*(k2^2 - k3^2)^2*(20*k2^2 + 9*k3^2) + 
         k1^4*(-28*k2^4 + 37*k2^2*k3^2 - 9*k3^4)) + 7*b1^2*k1^2*k3^2*
        (-2*k1^6*(k2^2 - k3^2)^2*(161*k2^4 - 108*k2^2*k3^2 - 15*k3^4) - 
         5*k1^2*(k2^2 - k3^2)^4*(23*k2^4 - 3*k3^4) + 3*(k2^2 - k3^2)^5*
          (3*k2^4 + k3^4) + k1^10*(245*k2^4 + 72*k2^2*k3^2 + 3*k3^4) + 
         6*k1^4*(k2^2 - k3^2)^3*(17*k2^4 + 12*k2^2*k3^2 + 5*k3^4) - 
         3*k1^8*(101*k2^6 - 173*k2^4*k3^2 + 67*k2^2*k3^4 + 5*k3^6)) + 
       b1*(k1^16*(-18*k2^2 + 23*k3^2) + 2*k1^14*(835*k2^4 + 201*k2^2*k3^2 + 
           132*k3^4) + k1^12*(-4374*k2^6 + 3471*k2^4*k3^2 + 1784*k2^2*k3^4 - 
           1277*k3^6) - 4*(k2^2 - k3^2)^6*(19*k2^6 - 17*k2^4*k3^2 + 
           7*k2^2*k3^4 + 3*k3^6) - 2*k1^2*(k2^2 - k3^2)^5*
          (47*k2^6 - 56*k2^4*k3^2 + 35*k2^2*k3^4 + 12*k3^6) - 
         k1^4*(k2^2 - k3^2)^3*(322*k2^8 + 481*k2^6*k3^2 - 363*k2^4*k3^4 - 
           185*k2^2*k3^6 + 33*k3^8) + 2*k1^6*(k2^2 - k3^2)^2*
          (881*k2^8 - 507*k2^6*k3^2 - 505*k2^4*k3^4 + 547*k2^2*k3^6 + 
           112*k3^8) + 2*k1^10*(2171*k2^8 - 4271*k2^6*k3^2 + 3647*k2^4*k3^4 - 
           2299*k2^2*k3^6 + 992*k3^8) + k1^8*(-2890*k2^10 + 6569*k2^8*k3^2 - 
           6168*k2^6*k3^4 + 1678*k2^4*k3^6 + 2074*k2^2*k3^8 - 1263*k3^10))))*
    Plin[((26 + F*(-17 + 6*F))*k2)/(15*qo)]*
    Plin[((26 + F*(-17 + 6*F))*k3)/(15*qo)])/(57344*F^12*k1^10*k2^8*k3^6)}
